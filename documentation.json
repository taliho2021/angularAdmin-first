{
    "pipes": [
        {
            "name": "SearchPipe",
            "id": "pipe-SearchPipe-ba705c3b42c27491f8a25b9284ea75153c90982583bfe5465900f53e7aa40b12fd25316392259b1725a863a1efc4e9ac2704af77dc902048fb661e592b1208ea",
            "file": "src/app/pipes/search.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "items",
                            "type": "Customer[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchTxt",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "Customer[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchTxt",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "search",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { Customer } from '../models/cust';\n\n@Pipe({\n  name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n  transform(items: Customer[], searchTxt: string): any[] {\n    if (!items || !items.length) return items;\n    if (!searchTxt || !searchTxt.length) return items;\n\n    return items.filter((item) => {\n      return (\n        item.custName\n          .toString()\n          .toLowerCase()\n          .indexOf(searchTxt.toLowerCase()) > -1\n      );\n    });\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Action",
            "id": "interface-Action-d89d4fa63bf6b4dbb178d4012b403a0d84e131340ce3bb74d9d666f6c2374d4aaf254f480db34276a01064304ea65fbf14ca8ea895cc2486c02f4db370986e34",
            "file": "src/app/pages/isf/shipment/shipment.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, FormControl } from '@angular/forms';\r\n\r\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\r\n\r\ninterface ShipType {\r\n  value: string;\r\n}\r\n\r\ninterface Action {\r\n  value: string;\r\n}\r\n\r\ninterface isfType {\r\n  value: string;\r\n}\r\n\r\ninterface mot {\r\n  value: string;\r\n}\r\n@Component({\r\n  selector: 'app-shipment',\r\n  templateUrl: './shipment.component.html',\r\n  styleUrls: ['./shipment.component.scss']\r\n})\r\nexport class ShipmentComponent implements OnInit {\r\n\r\n  selectedValue!: string;\r\n  selectedValue1!: string;\r\n  selectedValue2!: string;\r\n  selectedValue3!: string;\r\n\r\n  isfShipment = this.fb.group({\r\n    ISFNo:[''],\r\n    ISFType:[''],\r\n    MOT:[''],\r\n    ShptType:[''],\r\n    Action: [''],\r\n    AmsBL:[''],\r\n    AddlAmsBL:this.fb.array([\r\n      this.fb.control('')\r\n    ]),\r\n    MasterBL:[''],\r\n    FileNo:[''],\r\n    CustRefNo: [''],\r\n    ImporterID:['']\r\n  })\r\n\r\n  shipTypes: ShipType[] = [\r\n    { value: '01=Standard or Regular Filings' },\r\n    { value: '02=To Order Shipment' },\r\n    { value: '03=Household Goods / Personal Effects' },\r\n    { value: '04=Military, Government' },\r\n    { value: '05=Diplomatic Shipment' },\r\n    { value: '06=Carnet' },\r\n    { value: '07=US Goods Returned' },\r\n    { value: '08=FTZ Shipment' },\r\n    { value: '09=International Mail Shipments' },\r\n    { value: '10=Outer Continental Shipments' },\r\n    { value: '11=Informal' }\r\n  ];\r\n\r\n  actions: Action[] = [\r\n    { value: 'CT=Complete Transaction' },\r\n    { value: 'FR=Flexible Range' },\r\n    { value: 'FT=Flexible Timing' }\r\n  ];\r\n\r\n  isfTypes: isfType[] = [\r\n    {value: 'ISF-10'},\r\n    {value: 'ISF-5'},\r\n    {value: 'ISF-5 to ISF-10'},\r\n    {value: 'ISF-10 to ISF-5'}\r\n  ]\r\n\r\n  mots: mot[] = [\r\n    {value: '11-Containerized'},\r\n    {value: '10-Breakbulk'}\r\n  ]\r\n\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get AddlAmsBl(): UntypedFormArray {\r\n    return this.isfShipment.get('AddlAmsBL') as UntypedFormArray\r\n  }\r\n\r\n  addBill() {\r\n    this.AddlAmsBl.push(this.fb.control(''))\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AddCvdItem",
            "id": "interface-AddCvdItem-d35e57ebb5e1fef6bbb0c66276e7084537bda5ad000c246a68f2b53f9469a69a32dadf69eb225509803e91ee8cd3fa4aa782b3169734f0fcb18e1a4004886300",
            "file": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface AddCvdItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: AddCvdItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the AddCvd view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class AddCvdDataSource extends DataSource<AddCvdItem> {\r\n  data: AddCvdItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<AddCvdItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: AddCvdItem[]): AddCvdItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: AddCvdItem[]): AddCvdItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "airImport",
            "id": "interface-airImport-14534a6f5c1270b29aca178c94c81ea5e92c856bc96eac3740a89f1648de1ed7b7e0cb8dfa870d8248e97f984d63ff9f5c8bea52083a99c525a237baa8800324",
            "file": "src/app/pages/interfaces/airimport.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface airImport {\r\n  seqNo: number;\r\n  refNo: string;\r\n  carrier: string;\r\n  carrierName: string;\r\n  flightNo1?: string;\r\n  flightNo2?: string;\r\n  locationCode?: string;\r\n  address1?: string;\r\n  address2?: string;\r\n  cityStateZip: string;\r\n  addAddr1?: string;\r\n  addAddr2?: string;\r\n  refDate?: string;\r\n  user: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "addAddr1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "addAddr2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "address1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "address2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "carrier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "carrierName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "cityStateZip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "flightNo1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "flightNo2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "locationCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "refDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "refNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "seqNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CarriersItem",
            "id": "interface-CarriersItem-39b97ae01328fc6420be459087be881f62d402f4718a400724d830d5fd55c463000b27bf652061de82ea5cf5f13448d35572e393174860c400e1b7f1d659a48e",
            "file": "src/app/pages/tables/carriers/carriers-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface CarriersItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: CarriersItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Carriers view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class CarriersDataSource extends DataSource<CarriersItem> {\r\n  data: CarriersItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<CarriersItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: CarriersItem[]): CarriersItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: CarriersItem[]): CarriersItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Country",
            "id": "interface-Country-f84ffa22f21728b2193451219db2d8c1aa5b6b210dd1ca47f0c5f7feccd02bf1f8c28cdb94a046e413578cca2e4033ca63a1087d49c2cee5013ec325b373bfe1",
            "file": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, PipeTransform } from '@angular/core';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface Country {\r\n  name: string;\r\n  flag: string;\r\n  area: number;\r\n  population: number;\r\n}\r\n\r\nconst COUNTRIES: Country[] = [\r\n  {\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n];\r\n\r\nfunction search(text: string, pipe: PipeTransform): Country[] {\r\n  return COUNTRIES.filter(country => {\r\n    const term = text.toLowerCase();\r\n    return country.name.toLowerCase().includes(term)\r\n        || pipe.transform(country.area).includes(term)\r\n        || pipe.transform(country.population).includes(term);\r\n  });\r\n}\r\n@Component({\r\n  selector: 'app-entries-summary',\r\n  templateUrl: './entries-summary.component.html',\r\n  styleUrls: ['./entries-summary.component.scss'],\r\n  providers: [DecimalPipe]\r\n})\r\nexport class EntriesSummaryComponent {\r\n  \r\n  countries$: Observable<Country[]>;\r\n  filter = new UntypedFormControl('');\r\n\r\n  constructor(pipe: DecimalPipe) {\r\n    this.countries$ = this.filter.valueChanges.pipe(\r\n      startWith(''),\r\n      map(text => search(text!, pipe))\r\n    );\r\n  }\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "area",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "flag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "population",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Country",
            "id": "interface-Country-c15724cf52a703f88755d1af6742ad8fa264b742cb0c067e610ecb4f8915010c5610e778b5986d77fef39ae10a06a3abd7ddc36da2b01827a727a411f4f9f901-1",
            "file": "src/app/pages/tables/country/country-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable, merge, of as observableOf } from 'rxjs';\r\n\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface Country {\r\n  id: number;\r\n  name: string;\r\n  flag: string;\r\n  area: number;\r\n  population: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: Country[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'France',\r\n    flag: 'c/c3/Flag_of_France.svg',\r\n    area: 640679,\r\n    population: 64979548\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Germany',\r\n    flag: 'b/ba/Flag_of_Germany.svg',\r\n    area: 357114,\r\n    population: 82114224\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Portugal',\r\n    flag: '5/5c/Flag_of_Portugal.svg',\r\n    area: 92090,\r\n    population: 10329506\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Vietnam',\r\n    flag: '2/21/Flag_of_Vietnam.svg',\r\n    area: 331212,\r\n    population: 95540800\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Brazil',\r\n    flag: '0/05/Flag_of_Brazil.svg',\r\n    area: 8515767,\r\n    population: 209288278\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Mexico',\r\n    flag: 'f/fc/Flag_of_Mexico.svg',\r\n    area: 1964375,\r\n    population: 129163276\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'India',\r\n    flag: '4/41/Flag_of_India.svg',\r\n    area: 3287263,\r\n    population: 1324171354\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Indonesia',\r\n    flag: '9/9f/Flag_of_Indonesia.svg',\r\n    area: 1910931,\r\n    population: 263991379\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Tuvalu',\r\n    flag: '3/38/Flag_of_Tuvalu.svg',\r\n    area: 26,\r\n    population: 11097\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n];\r\n\r\n/**\r\n * Data source for the Country view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class CountryDataSource extends DataSource<Country> {\r\n  data: Country[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<Country[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: Country[]): Country[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: Country[]): Country[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "area",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "flag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "population",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Country-1"
        },
        {
            "name": "CurrencyItem",
            "id": "interface-CurrencyItem-ffb71e2432d271d3f762665b7ad32860e55ae63c3ceb286126959057fc02296f584acbdbe7db329bb9ee1ace61ed147ae73689133835889a2e09bf25a96cc230",
            "file": "src/app/pages/tables/currency/currency-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface CurrencyItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: CurrencyItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Currency view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class CurrencyDataSource extends DataSource<CurrencyItem> {\r\n  data: CurrencyItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<CurrencyItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: CurrencyItem[]): CurrencyItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: CurrencyItem[]): CurrencyItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "entrySummary",
            "id": "interface-entrySummary-101eabcdb4c16f7b3d21cce966002a981cba2bcbb595ee6a0e91ee8f9d987d32b6a99f3ca34cbfb473b90e8315f4f05d846e3ddb4e1f4bff646f06df14956d8f",
            "file": "src/app/pages/interfaces/entrySummary.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface entrySummary {\r\n  refNo: number;\r\n  entryNo: string;\r\n  entryType: string;\r\n  importer: string;\r\n  mot: string;\r\n  custRefNo: string;\r\n  entryDate: string;\r\n  rlseDate: string;\r\n  stmtDate: string;\r\n  entryPort: string;\r\n  description: string;\r\n  vessel: string;\r\n  user: string;\r\n  arAmt: string;\r\n  apAmt: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "apAmt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "arAmt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "custRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "entryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "entryNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "entryPort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "entryType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "importer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "mot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "refNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "rlseDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "stmtDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "vessel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FdaProductItem",
            "id": "interface-FdaProductItem-10398b3becf344c83553b5f5b0c939ce5538bafeaddbb98933a56c93f213fa3137a276e9cffa6b5eb8f7b5e1249b896db53d3fb955e11c8d34ab55c6a0f53ff1",
            "file": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface FdaProductItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: FdaProductItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the FdaProduct view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class FdaProductDataSource extends DataSource<FdaProductItem> {\r\n  data: FdaProductItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<FdaProductItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: FdaProductItem[]): FdaProductItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: FdaProductItem[]): FdaProductItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FirmsItem",
            "id": "interface-FirmsItem-6ae7cc092dffb1dba92ae61d8279aae44a42664e237c01e6d959afe736b70bfc60a9b7b33d7ae435503960eb91f8ac6c2a37e53b6f1aa312efbd4e703ad39ec7",
            "file": "src/app/pages/tables/firms/firms-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface FirmsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: FirmsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Firms view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class FirmsDataSource extends DataSource<FirmsItem> {\r\n  data: FirmsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<FirmsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: FirmsItem[]): FirmsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: FirmsItem[]): FirmsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ForeignPortsItem",
            "id": "interface-ForeignPortsItem-553f61825bb15d1c23f45ecae1f033f38716a7c9917e861d880ca938bb72467a7766b871f588cc88e8b855b83087655732a55b3b40ed85bf13e781e3a96c63fe",
            "file": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface ForeignPortsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: ForeignPortsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the ForeignPorts view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class ForeignPortsDataSource extends DataSource<ForeignPortsItem> {\r\n  data: ForeignPortsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<ForeignPortsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: ForeignPortsItem[]): ForeignPortsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: ForeignPortsItem[]): ForeignPortsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HTS",
            "id": "interface-HTS-79e77a410a1925cc90ddc8b7bf682f477eef85675d98a7804706d45ccb99bd7d8ba4ac8788db1467359363cb8d9b0ae2be29eba303e1681f61a5343793c834ad",
            "file": "src/app/pages/tables/hts/hts.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\ninterface HTS {\r\n  seqNo: Number;\r\n  refNo: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-hts',\r\n  templateUrl: './hts.component.html',\r\n  styleUrls: ['./hts.component.scss'],\r\n})\r\nexport class HTSComponent {\r\n  rowData: HTS[] = [];\r\n\r\n  gridOptions = {\r\n    rowModelType: 'serverside',\r\n\r\n    columnDefs: [\r\n      { field: 'other' },\r\n      { field: 'superior' },\r\n      { field: 'description' },\r\n      { field: 'quotaQuantity' },\r\n      { field: 'special' },\r\n      { field: 'htsno' },\r\n      { field: 'additionalDuties' },\r\n      { field: 'footnote' },\r\n      { field: 'general' },\r\n      { field: 'units' },\r\n    ],\r\n\r\n    defaultColDef: {\r\n      sortable: true,\r\n    },\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "properties": [
                {
                    "name": "refNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "seqNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HTSItem",
            "id": "interface-HTSItem-9dac474bb32b35405ade0c5f2f06ac1fafc07838fd4993113226d4aff696f744b68d1e8a95795d23690835f8609431e03c9f0850bce77dbd75be12ce7806c8bf",
            "file": "src/app/pages/tables/hts/hts-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface HTSItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: HTSItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the HTS view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class HTSDataSource extends DataSource<HTSItem> {\r\n  data: HTSItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<HTSItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: HTSItem[]): HTSItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: HTSItem[]): HTSItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Importer",
            "id": "interface-Importer-7a3b111a9b4f2bba850a1d6563e621573b414e9bac4e588d2b1c9096e176067c108843b0aedaecf4a88dc0bf07e8b6fe6bbcefb9367ec3e9789604bbf80c18cc",
            "file": "src/app/models/importer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Importer {\r\n    clientId: string;\r\n    name: string;\r\n    address1: string;\r\n    address2: string;\r\n    city: string;\r\n    state: string;\r\n    country: string;\r\n    phone1: Number;\r\n    phone2: Number;\r\n    website: String;\r\n    email1: string;\r\n   }\r\n",
            "properties": [
                {
                    "name": "address1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "address2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "phone1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "phone2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ISF",
            "id": "interface-ISF-abfb2a7c2aaa704b9213f19745a2c4f19b1b9df9a69c8becdd21126267b7f008eb9f5a1941c64ffdd38c6db11fb00dc6c1ff77ea1941423fe85c5b662615e843",
            "file": "src/app/pages/interfaces/isf.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISF {\r\n    seqNo : Number,\r\n    refNo: number,\r\n    fileNo: String,\r\n    branch : String,\r\n    isfNo : String,\r\n    status : String,\r\n    disposition: String,\r\n    type: any,\r\n    shipmentType: String,\r\n    actReason : String,\r\n    importerCode : String,\r\n    ImpIdtype : String,\r\n    importerName : String,\r\n    bondHolderId : String,\r\n    bondActCode: String,\r\n    bondtype: String,\r\n    houseBL : String,\r\n    regularBL: Number,\r\n    masterBL: String,\r\n    oiRefNo : String,\r\n    updatedDate: String,\r\n    user: String,\r\n    invDate: String,\r\n}\r\n",
            "properties": [
                {
                    "name": "actReason",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "bondActCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "bondHolderId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "bondtype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "branch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "disposition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "fileNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "houseBL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "ImpIdtype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "importerCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "importerName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "invDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isfNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "masterBL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "oiRefNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "refNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "regularBL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "seqNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "shipmentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "updatedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "isfType",
            "id": "interface-isfType-d89d4fa63bf6b4dbb178d4012b403a0d84e131340ce3bb74d9d666f6c2374d4aaf254f480db34276a01064304ea65fbf14ca8ea895cc2486c02f4db370986e34",
            "file": "src/app/pages/isf/shipment/shipment.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, FormControl } from '@angular/forms';\r\n\r\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\r\n\r\ninterface ShipType {\r\n  value: string;\r\n}\r\n\r\ninterface Action {\r\n  value: string;\r\n}\r\n\r\ninterface isfType {\r\n  value: string;\r\n}\r\n\r\ninterface mot {\r\n  value: string;\r\n}\r\n@Component({\r\n  selector: 'app-shipment',\r\n  templateUrl: './shipment.component.html',\r\n  styleUrls: ['./shipment.component.scss']\r\n})\r\nexport class ShipmentComponent implements OnInit {\r\n\r\n  selectedValue!: string;\r\n  selectedValue1!: string;\r\n  selectedValue2!: string;\r\n  selectedValue3!: string;\r\n\r\n  isfShipment = this.fb.group({\r\n    ISFNo:[''],\r\n    ISFType:[''],\r\n    MOT:[''],\r\n    ShptType:[''],\r\n    Action: [''],\r\n    AmsBL:[''],\r\n    AddlAmsBL:this.fb.array([\r\n      this.fb.control('')\r\n    ]),\r\n    MasterBL:[''],\r\n    FileNo:[''],\r\n    CustRefNo: [''],\r\n    ImporterID:['']\r\n  })\r\n\r\n  shipTypes: ShipType[] = [\r\n    { value: '01=Standard or Regular Filings' },\r\n    { value: '02=To Order Shipment' },\r\n    { value: '03=Household Goods / Personal Effects' },\r\n    { value: '04=Military, Government' },\r\n    { value: '05=Diplomatic Shipment' },\r\n    { value: '06=Carnet' },\r\n    { value: '07=US Goods Returned' },\r\n    { value: '08=FTZ Shipment' },\r\n    { value: '09=International Mail Shipments' },\r\n    { value: '10=Outer Continental Shipments' },\r\n    { value: '11=Informal' }\r\n  ];\r\n\r\n  actions: Action[] = [\r\n    { value: 'CT=Complete Transaction' },\r\n    { value: 'FR=Flexible Range' },\r\n    { value: 'FT=Flexible Timing' }\r\n  ];\r\n\r\n  isfTypes: isfType[] = [\r\n    {value: 'ISF-10'},\r\n    {value: 'ISF-5'},\r\n    {value: 'ISF-5 to ISF-10'},\r\n    {value: 'ISF-10 to ISF-5'}\r\n  ]\r\n\r\n  mots: mot[] = [\r\n    {value: '11-Containerized'},\r\n    {value: '10-Breakbulk'}\r\n  ]\r\n\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get AddlAmsBl(): UntypedFormArray {\r\n    return this.isfShipment.get('AddlAmsBL') as UntypedFormArray\r\n  }\r\n\r\n  addBill() {\r\n    this.AddlAmsBl.push(this.fb.control(''))\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ManufacturersItem",
            "id": "interface-ManufacturersItem-2ca9176a8d419bccbce22c832ba0e344a3f35aef6b2759ac4228bab28e3f7f65629a85291fc7939965b6fb3c39ea230d281d1676b59710fbc659b39c73657a56",
            "file": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface ManufacturersItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: ManufacturersItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Manufacturers view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class ManufacturersDataSource extends DataSource<ManufacturersItem> {\r\n  data: ManufacturersItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<ManufacturersItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: ManufacturersItem[]): ManufacturersItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: ManufacturersItem[]): ManufacturersItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "mot",
            "id": "interface-mot-d89d4fa63bf6b4dbb178d4012b403a0d84e131340ce3bb74d9d666f6c2374d4aaf254f480db34276a01064304ea65fbf14ca8ea895cc2486c02f4db370986e34",
            "file": "src/app/pages/isf/shipment/shipment.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, FormControl } from '@angular/forms';\r\n\r\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\r\n\r\ninterface ShipType {\r\n  value: string;\r\n}\r\n\r\ninterface Action {\r\n  value: string;\r\n}\r\n\r\ninterface isfType {\r\n  value: string;\r\n}\r\n\r\ninterface mot {\r\n  value: string;\r\n}\r\n@Component({\r\n  selector: 'app-shipment',\r\n  templateUrl: './shipment.component.html',\r\n  styleUrls: ['./shipment.component.scss']\r\n})\r\nexport class ShipmentComponent implements OnInit {\r\n\r\n  selectedValue!: string;\r\n  selectedValue1!: string;\r\n  selectedValue2!: string;\r\n  selectedValue3!: string;\r\n\r\n  isfShipment = this.fb.group({\r\n    ISFNo:[''],\r\n    ISFType:[''],\r\n    MOT:[''],\r\n    ShptType:[''],\r\n    Action: [''],\r\n    AmsBL:[''],\r\n    AddlAmsBL:this.fb.array([\r\n      this.fb.control('')\r\n    ]),\r\n    MasterBL:[''],\r\n    FileNo:[''],\r\n    CustRefNo: [''],\r\n    ImporterID:['']\r\n  })\r\n\r\n  shipTypes: ShipType[] = [\r\n    { value: '01=Standard or Regular Filings' },\r\n    { value: '02=To Order Shipment' },\r\n    { value: '03=Household Goods / Personal Effects' },\r\n    { value: '04=Military, Government' },\r\n    { value: '05=Diplomatic Shipment' },\r\n    { value: '06=Carnet' },\r\n    { value: '07=US Goods Returned' },\r\n    { value: '08=FTZ Shipment' },\r\n    { value: '09=International Mail Shipments' },\r\n    { value: '10=Outer Continental Shipments' },\r\n    { value: '11=Informal' }\r\n  ];\r\n\r\n  actions: Action[] = [\r\n    { value: 'CT=Complete Transaction' },\r\n    { value: 'FR=Flexible Range' },\r\n    { value: 'FT=Flexible Timing' }\r\n  ];\r\n\r\n  isfTypes: isfType[] = [\r\n    {value: 'ISF-10'},\r\n    {value: 'ISF-5'},\r\n    {value: 'ISF-5 to ISF-10'},\r\n    {value: 'ISF-10 to ISF-5'}\r\n  ]\r\n\r\n  mots: mot[] = [\r\n    {value: '11-Containerized'},\r\n    {value: '10-Breakbulk'}\r\n  ]\r\n\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get AddlAmsBl(): UntypedFormArray {\r\n    return this.isfShipment.get('AddlAmsBL') as UntypedFormArray\r\n  }\r\n\r\n  addBill() {\r\n    this.AddlAmsBl.push(this.fb.control(''))\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-a530b985de62884ae4701eee000e32326402503394d47ee2a755353adf53debeaa4de17e4d0d9d1c4fc4e73fca06c5b957834b70b073d0f76febf0e902f07c10",
            "file": "src/app/pages/cmsq/cmsq.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n@Component({\r\n  selector: 'app-cmsq',\r\n  templateUrl: './cmsq.component.html',\r\n  styleUrls: ['./cmsq.component.scss']\r\n})\r\nexport class CmsqComponent {\r\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PORT",
            "id": "interface-PORT-a3eeb0cf242d2cd386e8ae72581a9c861b70d3b1a45e4aa8f6b46a00afdbd29e4017d0ef88e687863a9f91ff11aae702b78d142d1c7c490c9a60bcc495cac28e",
            "file": "src/app/pages/air-import/air-import.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ColDef } from 'ag-grid-community';\r\nimport { Component } from '@angular/core';\r\n//Fetch remote data\r\nimport { HttpClient } from '@angular/common/http';\r\nimport  Ports  from '../../../assets/data/ports.json'\r\n\r\ninterface PORT  {\r\n  No: number;\r\n  ID: String;\r\n  Code: String;\r\n  Name: String;\r\n  Addr1: String;\r\n  Addr2: String;\r\n  Addr3: String;\r\n  City: String;\r\n  State: String;\r\n  Zip_Code: String;\r\n  Carr: String;\r\n  Unlading: String;\r\n  S_Code: String;\r\n  Firms: String;\r\n  Exam_Site: String;\r\n  Active: Number\r\n}\r\n@Component({\r\n  selector: 'app-air-import',\r\n  templateUrl: './air-import.component.html',\r\n  styleUrls: ['./air-import.component.scss']\r\n})\r\n\r\nexport class AirImportComponent {\r\n\r\n  columnDefs: ColDef[] = [\r\n    { field: 'No', sortable: true, filter: true, checkboxSelection: true },\r\n    { field: 'ID', sortable: true, filter: true, checkboxSelection: true },\r\n    { field: 'Code', sortable: true, filter: true},\r\n    { field: 'Name', sortable: true, filter: true },\r\n    { field: 'City', sortable: true, filter: true },\r\n    { field: 'State', sortable: true, filter: true},\r\n    { field: 'Zip_Code', sortable: true, filter: true }\r\n];\r\n\r\n  rowData : PORT[] = Ports ;\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.dir(this.rowData);\r\n     ;\r\n\r\n  }\r\n\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "Active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "Addr1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Addr2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Addr3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Carr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "City",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "Code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Exam_Site",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "Firms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "No",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "S_Code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "State",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Unlading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "Zip_Code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PortsItem",
            "id": "interface-PortsItem-4311cca9d42f4f847b5f3d7e38c82ea8307c53b8bc41cad24101585d1581e54a8920c4858415693c645c64fade5c690f73c03c4294463a64572b5e43bb2e965c",
            "file": "src/app/pages/tables/ports/ports-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface PortsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: PortsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Ports view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class PortsDataSource extends DataSource<PortsItem> {\r\n  data: PortsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<PortsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: PortsItem[]): PortsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: PortsItem[]): PortsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProductsItem",
            "id": "interface-ProductsItem-19a472f104a6cabc7ff1200a02863cd6b37e1be1023edb157120bb0beb513ce99cc08ee0a893d948737204a8ad146f0958abea13552aca0d4c518086cc1ea405",
            "file": "src/app/pages/tables/products/products-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface ProductsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: ProductsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Products view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class ProductsDataSource extends DataSource<ProductsItem> {\r\n  data: ProductsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<ProductsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: ProductsItem[]): ProductsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: ProductsItem[]): ProductsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SchedK",
            "id": "interface-SchedK-44b6692f1f100c4d65a451241a837dba388d31ccd40f6894afb5981b607361467a58cd0db8565b10b8793021cff43cca2e668e30d20911fc19d655f4f67576cb",
            "file": "src/app/models/schedK.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SchedK {\r\n  country: string;\r\n  code: number;\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ShipType",
            "id": "interface-ShipType-d89d4fa63bf6b4dbb178d4012b403a0d84e131340ce3bb74d9d666f6c2374d4aaf254f480db34276a01064304ea65fbf14ca8ea895cc2486c02f4db370986e34",
            "file": "src/app/pages/isf/shipment/shipment.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, FormControl } from '@angular/forms';\r\n\r\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\r\n\r\ninterface ShipType {\r\n  value: string;\r\n}\r\n\r\ninterface Action {\r\n  value: string;\r\n}\r\n\r\ninterface isfType {\r\n  value: string;\r\n}\r\n\r\ninterface mot {\r\n  value: string;\r\n}\r\n@Component({\r\n  selector: 'app-shipment',\r\n  templateUrl: './shipment.component.html',\r\n  styleUrls: ['./shipment.component.scss']\r\n})\r\nexport class ShipmentComponent implements OnInit {\r\n\r\n  selectedValue!: string;\r\n  selectedValue1!: string;\r\n  selectedValue2!: string;\r\n  selectedValue3!: string;\r\n\r\n  isfShipment = this.fb.group({\r\n    ISFNo:[''],\r\n    ISFType:[''],\r\n    MOT:[''],\r\n    ShptType:[''],\r\n    Action: [''],\r\n    AmsBL:[''],\r\n    AddlAmsBL:this.fb.array([\r\n      this.fb.control('')\r\n    ]),\r\n    MasterBL:[''],\r\n    FileNo:[''],\r\n    CustRefNo: [''],\r\n    ImporterID:['']\r\n  })\r\n\r\n  shipTypes: ShipType[] = [\r\n    { value: '01=Standard or Regular Filings' },\r\n    { value: '02=To Order Shipment' },\r\n    { value: '03=Household Goods / Personal Effects' },\r\n    { value: '04=Military, Government' },\r\n    { value: '05=Diplomatic Shipment' },\r\n    { value: '06=Carnet' },\r\n    { value: '07=US Goods Returned' },\r\n    { value: '08=FTZ Shipment' },\r\n    { value: '09=International Mail Shipments' },\r\n    { value: '10=Outer Continental Shipments' },\r\n    { value: '11=Informal' }\r\n  ];\r\n\r\n  actions: Action[] = [\r\n    { value: 'CT=Complete Transaction' },\r\n    { value: 'FR=Flexible Range' },\r\n    { value: 'FT=Flexible Timing' }\r\n  ];\r\n\r\n  isfTypes: isfType[] = [\r\n    {value: 'ISF-10'},\r\n    {value: 'ISF-5'},\r\n    {value: 'ISF-5 to ISF-10'},\r\n    {value: 'ISF-10 to ISF-5'}\r\n  ]\r\n\r\n  mots: mot[] = [\r\n    {value: '11-Containerized'},\r\n    {value: '10-Breakbulk'}\r\n  ]\r\n\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get AddlAmsBl(): UntypedFormArray {\r\n    return this.isfShipment.get('AddlAmsBL') as UntypedFormArray\r\n  }\r\n\r\n  addBill() {\r\n    this.AddlAmsBl.push(this.fb.control(''))\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SideBarMenuItem",
            "id": "interface-SideBarMenuItem-a537d746d670db5e1fb52e1e7d3c316f8eb2494a45473a63a377cf50e379310a24409ac2c8f81e5e0879adccaff58210e701fbb06ab53404b72cacbef3c0e8cf",
            "file": "src/app/layouts/sidebar/sidebar.menu.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SideBarMenuItem {\r\n  id?: number;\r\n  displayName?: string;\r\n  iconName?: string;\r\n  label?: string;\r\n  route?: string;\r\n  subItems?: any;\r\n  isTitle?: boolean;\r\n  parentId?: number;\r\n  isLayout?: boolean;\r\n  children?: SideBarMenuItem[];\r\n}\r\n",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SideBarMenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "iconName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "parentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "subItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StatesItem",
            "id": "interface-StatesItem-280908e72bdaa64062bfaccd7f66db5abeca4d417324c852ebe83b2d2cd1f3d54be8ae0722e86efbf2bbf4067bc8b6754f64b7c318011470241f409c5dba43aa",
            "file": "src/app/pages/tables/states/states-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface StatesItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: StatesItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the States view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class StatesDataSource extends DataSource<StatesItem> {\r\n  data: StatesItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<StatesItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: StatesItem[]): StatesItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: StatesItem[]): StatesItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tile",
            "id": "interface-Tile-aca29346d152d75161bc5f801c0e08908cbcd01054ab226ea4a444a80257abf723e293cff535f9b0cd2c7f6964f16b18ee7691fbc4282352d54322d436d50247",
            "file": "src/app/pages/cmsq/grid01/grid01.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grid01',\r\n  templateUrl: './grid01.component.html',\r\n  styleUrls: ['./grid01.component.scss']\r\n})\r\nexport class Grid01Component {\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Six', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Seven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Eight', cols: 2, rows: 1, color: '#DDBDF1'},\r\n\r\n  ];\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tile",
            "id": "interface-Tile-de22ef4318e7b0bbb621129ca6010c3356987926b0e0f74e7c382c9fe48b24f74de78532c62ec3edf5f052ffc77439bca62f395a9b48f34537f807f59ab49e50-1",
            "file": "src/app/pages/trucking/air/air.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-air',\r\n  templateUrl: './air.component.html',\r\n  styleUrls: ['./air.component.scss']\r\n})\r\nexport class AirComponent {\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Six', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Seven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Eight', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Nine', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Ten', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Eleven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Twelve', cols: 2, rows: 1, color: '#DDBDF1'},\r\n\r\n  ];\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Tile-1"
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserData",
            "id": "interface-UserData-d09755dc1ae9dbcbddcd1525c4a316c154df4b20390089287ebb24f9d32ca747c6ffc89812721cea8a4c0aed010d86d00ed77f4f9296183d56eacb8dc5aad644",
            "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n\r\n@Component({\r\n  selector: 'app-air-ams-summary',\r\n  templateUrl: './air-ams-summary.component.html',\r\n  styleUrls: ['./air-ams-summary.component.scss']\r\n})\r\nexport class AirAmsSummaryComponent implements AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "fruit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "progress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserData",
            "id": "interface-UserData-3ae662f3c0593740121f163ffe4478a1e2c6b7221e8a5436bfbdcbe0ffc9a6469b9bbdab75300a0666baf4ac0a81732b3adc427042d5050b99d1b173c854c4ee-1",
            "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n@Component({\r\n  selector: 'app-export-summary',\r\n  templateUrl: './export-summary.component.html',\r\n  styleUrls: ['./export-summary.component.scss']\r\n})\r\nexport class ExportSummaryComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'Price', 'In Stock', 'In Store At'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "fruit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "progress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "UserData-1"
        },
        {
            "name": "UserData",
            "id": "interface-UserData-d01330c7f626133d37297ba8b517430e5d5d3f7722722f6e66ee594d447e1dc3350876d91e27a912f00ec6c9cdedc94a7bb625a83ec1865898574fda1935e9f0-2",
            "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n@Component({\r\n  selector: 'app-ams-summary',\r\n  templateUrl: './ams-summary.component.html',\r\n  styleUrls: ['./ams-summary.component.scss']\r\n})\r\nexport class AmsSummaryComponent {\r\n\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "fruit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "progress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "UserData-2"
        },
        {
            "name": "UserData",
            "id": "interface-UserData-c336958f31cee24ce0666c1e8b421e078e73fce9a00af52ef9f4139c6b1918a571eaa597b1532b4fd00a7036d0cb8df4e2d496733a5fa2a1bb2d248db2b13da6-3",
            "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n@Component({\r\n  selector: 'app-ams-summary',\r\n  templateUrl: './ams-summary.component.html',\r\n  styleUrls: ['./ams-summary.component.scss']\r\n})\r\nexport class AmsSummaryComponent {\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "fruit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "progress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "UserData-3"
        },
        {
            "name": "VesselItem",
            "id": "interface-VesselItem-27abe663b63806da401a0806884f25dd1d0c674e7e4b590c7d375c0c931b0fb9afd01c240aaf6280412bdfa57e9c9a6d9a8050e13291963884fc70ee3390108a",
            "file": "src/app/pages/tables/vessel/vessel-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface VesselItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: VesselItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Vessel view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class VesselDataSource extends DataSource<VesselItem> {\r\n  data: VesselItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<VesselItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: VesselItem[]): VesselItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: VesselItem[]): VesselItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-f8b8fcdac6b40eae4f42986fd535cf131ba088577206e4fa37a7ec8f08dfd095a33ceffec0d8d11a9b3329a04cc9afdb0e35f5be2d34182ad154e59e01c51184",
            "file": "src/app/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getExpiration",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isLoggedOut",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSessionStorage",
                    "args": [
                        {
                            "name": "responseObj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseObj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport moment from 'moment';\r\n\r\n// Assign the server auth API to AUT_API\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() {}\r\n\r\n  setSessionStorage(responseObj: any) {\r\n\r\n      // Adds the expiration time defined on the JWT to the current moment\r\n      const expiresAt = moment().add(Number.parseInt(responseObj.expiresIn), 'days');\r\n\r\n      sessionStorage.setItem('id_token', responseObj.token);\r\n      sessionStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\r\n  }\r\n\r\n  logout() {\r\n      sessionStorage.removeItem(\"id_token\");\r\n      sessionStorage.removeItem(\"expires_at\");\r\n  }\r\n\r\n  public isLoggedIn() {\r\n      return moment().isBefore(this.getExpiration(), \"second\");\r\n  }\r\n\r\n  isLoggedOut() {\r\n      return !this.isLoggedIn();\r\n  }\r\n\r\n  getExpiration() {\r\n      const expiration = sessionStorage.getItem(\"expires_at\");\r\n      if (expiration) {\r\n          const expiresAt = JSON.parse(expiration);\r\n          return moment(expiresAt);\r\n      } else {\r\n          return moment();\r\n      }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "ImportersService",
            "id": "injectable-ImportersService-4cdaa039cb2e4e05d62d052d821794f578c8516682c2415f35b96bd34e57b49dd667443e7eff44efd582c1802b4436653a5f0e75db4d3da76062b1a43414e37d",
            "file": "src/app/services/importers.service.ts",
            "properties": [
                {
                    "name": "headers",
                    "defaultValue": "new HttpHeaders().set('Content-Type', 'application/json')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "importers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Importer[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "redirectUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "userData",
                            "type": "Importer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userData",
                            "type": "Importer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Importer>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Importer>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "findByName",
                    "args": [
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Importer[]>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Importer[]>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getImporter",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Importer>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "importer",
                            "type": "Importer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Importer>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "importer",
                            "type": "Importer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Importer } from '../models/importer';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nconst API_URL = \"https://nodejs01-app.herokuapp.com/importers\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportersService {\r\n\r\n  [x: string]: any;\r\n  importers: Importer[]=[]\r\n\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  redirectUrl:string =''\r\n\r\n  constructor(private http: HttpClient,public router: Router) { }\r\n\r\n  getAll():Observable<Importer[]>  {\r\n    return this.http.get<Importer[]>(API_URL)\r\n    .pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  getImporter(clientId: string): Observable<Importer> {\r\n    const url = (`${API_URL}/${clientId}`)\r\n    window.alert(url)\r\n    return this.http.get<Importer>(url)\r\n      .pipe(               \r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n  create(userData: Importer){\r\n    return this.http.post<Importer>(API_URL, userData)\r\n    .pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  update(clientId: any, importer:Importer): Observable<Importer>{\r\n    return this.http.put<Importer>(`${API_URL}/${clientId}`, importer)\r\n  }\r\n\r\n  delete(clientId:any): Observable<Importer>{\r\n    return this.http.delete<Importer>(API_URL)\r\n  }\r\n\r\n  deleteAll(): Observable<Importer> {\r\n    return this.http.delete<Importer>(API_URL)\r\n  }\r\n\r\n  findByName(name:any) : Observable<Importer[]>{\r\n    return this.http.get<Importer[]>(`${API_URL}?name=${name}`)\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      msg = error.error.message;\r\n    } else {\r\n      // server-side error\r\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(msg);\r\n  }\r\n\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "IsfService",
            "id": "injectable-IsfService-06501194e5f737a6c1d36094120c2bae14c244ba718aad76f8749ccf2e4eb7e75f197fe0d1ecf317d62042169043a9f43be319504310cf6ca090166998c12b00",
            "file": "src/app/pages/isf/isf.service.ts",
            "properties": [
                {
                    "name": "refNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getIsf",
                    "args": [
                        {
                            "name": "refNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ISF>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getIsfs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ISF[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Observable, of } from 'rxjs';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ISF } from '../interfaces/isf';\r\nimport { Injectable } from '@angular/core';\r\nimport Isfs from '../../../assets/data/isf.json'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsfService {\r\n  constructor(\r\n  ) { }\r\n  public refNo!: number\r\n\r\n  getIsfs(): Observable<ISF[]> {\r\n    const isfs = of(Isfs)\r\n    return isfs\r\n  }\r\n\r\n  getIsf(refNo: number): Observable<ISF> {\r\n    // this.route.params.forEach((params: Params) => {\r\n    //   this.refNo = params['refNo']\r\n    // })\r\n    // window.alert(refNo)\r\n    const isf = Isfs.find(i => i.refNo === refNo)!\r\n    // window.alert('Isf Service reached',)\r\n    // console.log(isf)\r\n    // window.alert(Isfs[1])\r\n    return of(isf)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "MenuService",
            "id": "injectable-MenuService-56e1874db30dd0631f56499676bfbfe88e7593bf992ee04e9fdd624ffc0c4a8411507ab78053b3189940ce49100d1e4318e8ce63a1407c4a3502a7a1e9c7929a",
            "file": "src/app/services/menu.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getMenuitems",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<SideBarMenuItem[]>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SideBarMenuItem } from '../layouts/sidebar/sidebar.menu.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMenuitems() : Observable<SideBarMenuItem[]> {\r\n    return this.http.get<SideBarMenuItem[]>('../../assets/data/menuItem.json')\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SidebarNavService",
            "id": "injectable-SidebarNavService-020b8e9994f440d8b7b2e1a69610bb2ca872ed0bb5f73bab0f812b8e335ffbd9695b49fb905722c5c148e364d699a9ba10d0ecd1d2119cfcfb1fe1cb8d3f5985",
            "file": "src/app/layouts/sidebar/sidebar-nav.service.ts",
            "properties": [
                {
                    "name": "appDrawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUrl",
                    "defaultValue": "new BehaviorSubject(\"\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "closeNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Event, NavigationEnd, Router} from '@angular/router';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\n\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidebarNavService {\r\n  public appDrawer: any;\r\n  public currentUrl = new BehaviorSubject(\"\");\r\n\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe((event: Event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.currentUrl.next(event.urlAfterRedirects)\r\n      }\r\n    });\r\n  }\r\n\r\n  public closeNav() {\r\n    this.appDrawer.close();\r\n  }\r\n\r\n  public openNav() {\r\n    this.appDrawer.open();\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-16cccdfd26ea5a78129cfdb707e52b7edfcbf971a2cdcf4c863fa5c06ecbed63b140f5fce89653ff4ada6f65a9b0084b0f92357aa067cb12aff565bde75e9409",
            "file": "src/app/services/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAdminBoard",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getModeratorBoard",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPublicContent",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserBoard",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'https://nodejs01-app.herokuapp.com/';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private htttp: HttpClient) {}\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.htttp.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.htttp.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.htttp.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.htttp.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "htttp",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "htttp",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-e04638060a483ccc19d958b427c53a1168178ae5028cda464353f6c2dd8effd307fb7af289d154e29a5b1c01d858e19532114cdea0a813ba931818d0b06ba90b",
            "file": "src/app/services/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canActivateChild",
                    "args": [
                        {
                            "name": "childRoute",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "childRoute",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot, UrlTree } from '@angular/router';\r\n\r\nimport { AuthService } from '../services/auth.service'\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(private authService: AuthService,\r\n              private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.authService.isLoggedIn())\r\n      {\r\n        return true\r\n      }\r\n      return false;\r\n  }\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "AuthInterceptor",
            "id": "injectable-AuthInterceptor-6635bd14d531ac5f72f6c8e306dd49c004d5a82cf2d07a388b8bb3a70ba664e5cc4dfdaaa7ae8f4cc45d702f4a2757178591e0c70b7d4e740b810484e130cae0",
            "file": "src/app/helpers/auth.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>,\r\n              next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const idToken = sessionStorage.getItem(\"id_token\");\r\n\r\n        if (idToken) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\"Authorization\", idToken)\r\n            });\r\n\r\n            return next.handle(cloned);\r\n        }\r\n        else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n",
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AddCvdDataSource",
            "id": "class-AddCvdDataSource-d35e57ebb5e1fef6bbb0c66276e7084537bda5ad000c246a68f2b53f9469a69a32dadf69eb225509803e91ee8cd3fa4aa782b3169734f0fcb18e1a4004886300",
            "file": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface AddCvdItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: AddCvdItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the AddCvd view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class AddCvdDataSource extends DataSource<AddCvdItem> {\r\n  data: AddCvdItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<AddCvdItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: AddCvdItem[]): AddCvdItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: AddCvdItem[]): AddCvdItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddCvdItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the AddCvd view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the AddCvd view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<AddCvdItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1629,
                                "end": 1636,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "AddCvdItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AddCvdItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AddCvdItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "AddCvdItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AddCvdItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AddCvdItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CarriersDataSource",
            "id": "class-CarriersDataSource-39b97ae01328fc6420be459087be881f62d402f4718a400724d830d5fd55c463000b27bf652061de82ea5cf5f13448d35572e393174860c400e1b7f1d659a48e",
            "file": "src/app/pages/tables/carriers/carriers-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface CarriersItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: CarriersItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Carriers view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class CarriersDataSource extends DataSource<CarriersItem> {\r\n  data: CarriersItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<CarriersItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: CarriersItem[]): CarriersItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: CarriersItem[]): CarriersItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CarriersItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Carriers view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Carriers view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CarriersItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1641,
                                "end": 1648,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CarriersItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CarriersItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CarriersItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CarriersItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CarriersItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CarriersItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CountryDataSource",
            "id": "class-CountryDataSource-c15724cf52a703f88755d1af6742ad8fa264b742cb0c067e610ecb4f8915010c5610e778b5986d77fef39ae10a06a3abd7ddc36da2b01827a727a411f4f9f901",
            "file": "src/app/pages/tables/country/country-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable, merge, of as observableOf } from 'rxjs';\r\n\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface Country {\r\n  id: number;\r\n  name: string;\r\n  flag: string;\r\n  area: number;\r\n  population: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: Country[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'France',\r\n    flag: 'c/c3/Flag_of_France.svg',\r\n    area: 640679,\r\n    population: 64979548\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Germany',\r\n    flag: 'b/ba/Flag_of_Germany.svg',\r\n    area: 357114,\r\n    population: 82114224\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Portugal',\r\n    flag: '5/5c/Flag_of_Portugal.svg',\r\n    area: 92090,\r\n    population: 10329506\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Vietnam',\r\n    flag: '2/21/Flag_of_Vietnam.svg',\r\n    area: 331212,\r\n    population: 95540800\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Brazil',\r\n    flag: '0/05/Flag_of_Brazil.svg',\r\n    area: 8515767,\r\n    population: 209288278\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Mexico',\r\n    flag: 'f/fc/Flag_of_Mexico.svg',\r\n    area: 1964375,\r\n    population: 129163276\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'India',\r\n    flag: '4/41/Flag_of_India.svg',\r\n    area: 3287263,\r\n    population: 1324171354\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Indonesia',\r\n    flag: '9/9f/Flag_of_Indonesia.svg',\r\n    area: 1910931,\r\n    population: 263991379\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Tuvalu',\r\n    flag: '3/38/Flag_of_Tuvalu.svg',\r\n    area: 26,\r\n    population: 11097\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n];\r\n\r\n/**\r\n * Data source for the Country view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class CountryDataSource extends DataSource<Country> {\r\n  data: Country[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<Country[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: Country[]): Country[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: Country[]): Country[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 120
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 120
                }
            ],
            "description": "<p>Data source for the Country view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Country view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Country[]>",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2804,
                                "end": 2811,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "Country[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Country[]",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Country[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "Country[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Country[]",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Country[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CurrencyDataSource",
            "id": "class-CurrencyDataSource-ffb71e2432d271d3f762665b7ad32860e55ae63c3ceb286126959057fc02296f584acbdbe7db329bb9ee1ace61ed147ae73689133835889a2e09bf25a96cc230",
            "file": "src/app/pages/tables/currency/currency-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface CurrencyItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: CurrencyItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Currency view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class CurrencyDataSource extends DataSource<CurrencyItem> {\r\n  data: CurrencyItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<CurrencyItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: CurrencyItem[]): CurrencyItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: CurrencyItem[]): CurrencyItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrencyItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Currency view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Currency view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CurrencyItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1641,
                                "end": 1648,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CurrencyItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CurrencyItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CurrencyItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CurrencyItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CurrencyItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CurrencyItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Customer",
            "id": "class-Customer-bb4592be5567595a8ccb7baf401fdd871bea7e6d6fd35104a2f4d6fe664c6c869d3e917b6e51d696a9665915a9fe05d282624291b24509cba5e26ddc4380cc15",
            "file": "src/app/models/cust.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Customer {\r\n  seqNo!: number;\r\n  custId!: string;\r\n  custCode!: string;\r\n  custName!: string;\r\n  addressLine1!: string;\r\n  addressLine2!: string;\r\n  city!: string;\r\n  state!: string;\r\n  zipCode!: string;\r\n  country!: string;\r\n  telNo!: string;\r\n  faxNo!: string;\r\n  contact1!: string;\r\n  email1!: string;\r\n  einNo!: string;\r\n  payorUnitNo!: string;\r\n  creditLimit!: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "addressLine1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "addressLine2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "contact1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "creditLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "custCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "custId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "custName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "einNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "email1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "faxNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "payorUnitNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "seqNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "telNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "zipCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FdaProductDataSource",
            "id": "class-FdaProductDataSource-10398b3becf344c83553b5f5b0c939ce5538bafeaddbb98933a56c93f213fa3137a276e9cffa6b5eb8f7b5e1249b896db53d3fb955e11c8d34ab55c6a0f53ff1",
            "file": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface FdaProductItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: FdaProductItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the FdaProduct view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class FdaProductDataSource extends DataSource<FdaProductItem> {\r\n  data: FdaProductItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<FdaProductItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: FdaProductItem[]): FdaProductItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: FdaProductItem[]): FdaProductItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FdaProductItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the FdaProduct view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the FdaProduct view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FdaProductItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1653,
                                "end": 1660,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "FdaProductItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FdaProductItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FdaProductItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "FdaProductItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FdaProductItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FdaProductItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FirmsDataSource",
            "id": "class-FirmsDataSource-6ae7cc092dffb1dba92ae61d8279aae44a42664e237c01e6d959afe736b70bfc60a9b7b33d7ae435503960eb91f8ac6c2a37e53b6f1aa312efbd4e703ad39ec7",
            "file": "src/app/pages/tables/firms/firms-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface FirmsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: FirmsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Firms view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class FirmsDataSource extends DataSource<FirmsItem> {\r\n  data: FirmsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<FirmsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: FirmsItem[]): FirmsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: FirmsItem[]): FirmsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirmsItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Firms view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Firms view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FirmsItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1623,
                                "end": 1630,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "FirmsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FirmsItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FirmsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "FirmsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FirmsItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FirmsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ForeignPortsDataSource",
            "id": "class-ForeignPortsDataSource-553f61825bb15d1c23f45ecae1f033f38716a7c9917e861d880ca938bb72467a7766b871f588cc88e8b855b83087655732a55b3b40ed85bf13e781e3a96c63fe",
            "file": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface ForeignPortsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: ForeignPortsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the ForeignPorts view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class ForeignPortsDataSource extends DataSource<ForeignPortsItem> {\r\n  data: ForeignPortsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<ForeignPortsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: ForeignPortsItem[]): ForeignPortsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: ForeignPortsItem[]): ForeignPortsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ForeignPortsItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the ForeignPorts view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the ForeignPorts view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ForeignPortsItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1665,
                                "end": 1672,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ForeignPortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ForeignPortsItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ForeignPortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ForeignPortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ForeignPortsItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ForeignPortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HTSDataSource",
            "id": "class-HTSDataSource-9dac474bb32b35405ade0c5f2f06ac1fafc07838fd4993113226d4aff696f744b68d1e8a95795d23690835f8609431e03c9f0850bce77dbd75be12ce7806c8bf",
            "file": "src/app/pages/tables/hts/hts-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface HTSItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: HTSItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the HTS view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class HTSDataSource extends DataSource<HTSItem> {\r\n  data: HTSItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<HTSItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: HTSItem[]): HTSItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: HTSItem[]): HTSItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTSItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the HTS view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the HTS view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<HTSItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1611,
                                "end": 1618,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "HTSItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTSItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "HTSItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "HTSItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTSItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "HTSItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ManufacturersDataSource",
            "id": "class-ManufacturersDataSource-2ca9176a8d419bccbce22c832ba0e344a3f35aef6b2759ac4228bab28e3f7f65629a85291fc7939965b6fb3c39ea230d281d1676b59710fbc659b39c73657a56",
            "file": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface ManufacturersItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: ManufacturersItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Manufacturers view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class ManufacturersDataSource extends DataSource<ManufacturersItem> {\r\n  data: ManufacturersItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<ManufacturersItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: ManufacturersItem[]): ManufacturersItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: ManufacturersItem[]): ManufacturersItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ManufacturersItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Manufacturers view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Manufacturers view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ManufacturersItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1671,
                                "end": 1678,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ManufacturersItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ManufacturersItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ManufacturersItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ManufacturersItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ManufacturersItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ManufacturersItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PortsDataSource",
            "id": "class-PortsDataSource-4311cca9d42f4f847b5f3d7e38c82ea8307c53b8bc41cad24101585d1581e54a8920c4858415693c645c64fade5c690f73c03c4294463a64572b5e43bb2e965c",
            "file": "src/app/pages/tables/ports/ports-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface PortsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: PortsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Ports view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class PortsDataSource extends DataSource<PortsItem> {\r\n  data: PortsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<PortsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: PortsItem[]): PortsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: PortsItem[]): PortsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PortsItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Ports view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Ports view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<PortsItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1623,
                                "end": 1630,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "PortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "PortsItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "PortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "PortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "PortsItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "PortsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProductsDataSource",
            "id": "class-ProductsDataSource-19a472f104a6cabc7ff1200a02863cd6b37e1be1023edb157120bb0beb513ce99cc08ee0a893d948737204a8ad146f0958abea13552aca0d4c518086cc1ea405",
            "file": "src/app/pages/tables/products/products-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface ProductsItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: ProductsItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Products view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class ProductsDataSource extends DataSource<ProductsItem> {\r\n  data: ProductsItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<ProductsItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: ProductsItem[]): ProductsItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: ProductsItem[]): ProductsItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductsItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Products view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Products view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ProductsItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1641,
                                "end": 1648,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ProductsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ProductsItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ProductsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ProductsItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ProductsItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ProductsItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StatesDataSource",
            "id": "class-StatesDataSource-280908e72bdaa64062bfaccd7f66db5abeca4d417324c852ebe83b2d2cd1f3d54be8ae0722e86efbf2bbf4067bc8b6754f64b7c318011470241f409c5dba43aa",
            "file": "src/app/pages/tables/states/states-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface StatesItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: StatesItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the States view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class StatesDataSource extends DataSource<StatesItem> {\r\n  data: StatesItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<StatesItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: StatesItem[]): StatesItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: StatesItem[]): StatesItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatesItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the States view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the States view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<StatesItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1629,
                                "end": 1636,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "StatesItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "StatesItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "StatesItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "StatesItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "StatesItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "StatesItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-517b3251da005fba75245bf6a63745f94b20e87bc0dc071c0958e807068e5c22da7c38dacb65c3e292fef2bb7a443c1075b524089f12700ec9d5ff43133a8ece",
            "file": "src/app/models/users.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class User {\r\n  id!: number;\r\n  username!: string;\r\n  password!: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  token?: string;\r\n  email!: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "VesselDataSource",
            "id": "class-VesselDataSource-27abe663b63806da401a0806884f25dd1d0c674e7e4b590c7d375c0c931b0fb9afd01c240aaf6280412bdfa57e9c9a6d9a8050e13291963884fc70ee3390108a",
            "file": "src/app/pages/tables/vessel/vessel-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface VesselItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: VesselItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the Vessel view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class VesselDataSource extends DataSource<VesselItem> {\r\n  data: VesselItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<VesselItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: VesselItem[]): VesselItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: VesselItem[]): VesselItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VesselItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Vessel view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Vessel view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<VesselItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1629,
                                "end": 1636,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "VesselItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "VesselItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "VesselItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "VesselItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "VesselItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "VesselItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AddCvdComponent",
            "id": "component-AddCvdComponent-2848d49789b0f8b48dfe504c8f4c85fadc467b509c768c2ce0f85cf37e575c9ecaef22c21fd6a8c29a8a558dd14069f9c7b0edd0b1655864219b329a8fa0a1b9",
            "file": "src/app/pages/tables/add-cvd/add-cvd.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-cvd",
            "styleUrls": [
                "./add-cvd.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-cvd.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddCvdDataSource",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 20,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<AddCvdItem>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AddCvdDataSource, AddCvdItem } from './add-cvd-datasource';\r\nimport { AfterViewInit, Component, ViewChild } from '@angular/core';\r\n\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-add-cvd',\r\n  templateUrl: './add-cvd.component.html',\r\n  styleUrls: ['./add-cvd.component.scss'],\r\n})\r\nexport class AddCvdComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<AddCvdItem>;\r\n  dataSource: AddCvdDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new AddCvdDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./add-cvd.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  ADD/CVD Cases\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "AeFormComponent",
            "id": "component-AeFormComponent-f931fae88d945b4cd4417cde15808c4264d4f7ad38772d672bf3d7a331dac7687a8baa0ac5e304d9ec04838fc2d07586954c6a2e24b6e0e2afa8b79ffa89287f",
            "file": "src/app/extrapages/ae-form/ae-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ae-form",
            "styleUrls": [
                "./ae-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ae-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "model",
                    "defaultValue": "new User()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "powers",
                    "defaultValue": "['Really Smart', 'Super Flexible',\r\n            'Super Hot', 'Weather Changer']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "newUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showFormControls",
                    "args": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "skyDog",
                    "args": [],
                    "optional": false,
                    "returnType": "User",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from '../../models/users'\r\n\r\n@Component({\r\n  selector: 'app-ae-form',\r\n  templateUrl: './ae-form.component.html',\r\n  styleUrls: ['./ae-form.component.scss']\r\n})\r\nexport class AeFormComponent  {\r\n\r\n  powers = ['Really Smart', 'Super Flexible',\r\n            'Super Hot', 'Weather Changer'];\r\n\r\n  model = new User();\r\n\r\n  submitted = false;\r\n\r\n  onSubmit() { this.submitted = true; }\r\n\r\n  // TODO: Remove this when we're done\r\n  get diagnostic() { return JSON.stringify(this.model); }\r\n\r\n  newUser() {\r\n    this.model = new User();\r\n  }\r\n\r\n  skyDog(): User {\r\n    let myUser =  new User();\r\n    console.log('My user is called ' + myUser.username); // \"My user is called SkyDog\"\r\n    return myUser;\r\n  }\r\n\r\n  //////// NOT SHOWN IN DOCS ////////\r\n\r\n  // Reveal in html:\r\n  //   Name via form.controls = {{showFormControls(userForm)}}\r\n  showFormControls(form: any) {\r\n    return\r\n      form && form.controls['username'] &&\r\n          form.controls['username'].value; // Dr. IQ\r\n  }\r\n\r\n  /////////////////////////////\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n\r\n// id!: number;\r\n  // username!: string;\r\n  // password!: string;\r\n  // firstName?: string;\r\n  // lastName?: string;\r\n  // token?: string;\r\n  // email!: string;\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Master Styles */\r\nh1 {\r\n  color: #369;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 250%;\r\n}\r\nh2, h3 {\r\n  color: #444;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-weight: lighter;\r\n}\r\nbody {\r\n  margin: 2em;\r\n}\r\nbody, input[text], button {\r\n  color: #888;\r\n  font-family: Cambria, Georgia;\r\n}\r\na {\r\n  cursor: pointer;\r\n  cursor: hand;\r\n}\r\nbutton {\r\n  font-family: Arial;\r\n  background-color: #eee;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  cursor: hand;\r\n}\r\nbutton:hover {\r\n  background-color: #cfd8dc;\r\n}\r\nbutton:disabled {\r\n  background-color: #eee;\r\n  color: #aaa;\r\n  cursor: auto;\r\n}\r\n\r\n/* Navigation link styles */\r\nnav a {\r\n  padding: 5px 10px;\r\n  text-decoration: none;\r\n  margin-right: 10px;\r\n  margin-top: 10px;\r\n  display: inline-block;\r\n  background-color: #eee;\r\n  border-radius: 4px;\r\n}\r\nnav a:visited, a:link {\r\n  color: #607D8B;\r\n}\r\nnav a:hover {\r\n  color: #039be5;\r\n  background-color: #CFD8DC;\r\n}\r\nnav a.active {\r\n  color: #039be5;\r\n}\r\n\r\n/* everywhere else */\r\n* {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n",
                    "styleUrl": "./ae-form.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "diagnostic": {
                    "name": "diagnostic",
                    "getSignature": {
                        "name": "diagnostic",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"container-fluid\">\r\n  <div [hidden]=\"submitted\">\r\n    <h1>User Form</h1>\r\n    <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-1\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-2\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-2\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-1 col-1\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-2\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-2\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-2\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group md-1 col-2\">\r\n          <label for=\"username\">User Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\"\r\n                required\r\n                [(ngModel)]=\"model.username\" name=\"username\"\r\n                #username=\"ngModel\">\r\n          <div [hidden]=\"username.valid || username.pristine\"\r\n              class=\"alert alert-danger\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-4\">\r\n          <label for=\"alterEgo\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                [(ngModel)]=\"model.firstName\" name=\"firstName\">\r\n        </div>\r\n\r\n        <div class=\"form-group md-3 col-5\">\r\n          <label for=\"power\">Last Name</label>\r\n          <select class=\"form-control\" id=\"lastName\"\r\n                  required\r\n                  [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n                  #power=\"ngModel\">\r\n            <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\r\n          </select>\r\n          <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\r\n            Power is required\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!userForm.form.valid\">Submit</button>\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"newUser(); userForm.reset()\">New Hero</button>\r\n      <i>with</i> reset\r\n\r\n      &nbsp;&nbsp;\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"newUser()\">New User</button>\r\n      <i>without</i> reset\r\n\r\n     <!-- NOT SHOWN IN DOCS -->\r\n      <div>\r\n        <hr>\r\n        Name via form.controls = {{showFormControls(userForm)}}\r\n      </div>\r\n     <!-- - -->\r\n    </form>\r\n  </div>\r\n\r\n  <!-- Below div displays once the submit button is clicked-->\r\n  <div [hidden]=\"!submitted\">\r\n    <h2>You submitted the following:</h2>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-3\">Name</div>\r\n      <div class=\"col-xs-9  pull-left\">{{ model.username }}</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-3\">Alter Ego</div>\r\n      <div class=\"col-xs-9 pull-left\">{{ model.firstName }}</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-3\">Power</div>\r\n      <div class=\"col-xs-9 pull-left\">{{ model.lastName }}</div>\r\n    </div>\r\n    <br>\r\n    <button class=\"btn btn-primary\" (click)=\"submitted=false\">Edit</button>\r\n  </div>\r\n</div>\r\n\r\n<!-- ====================================================  -->\r\n  <div>\r\n    <form>\r\n\r\n       <!-- ... all of the form ... -->\r\n\r\n    </form>\r\n  </div>\r\n\r\n<!-- ====================================================  -->\r\n<hr>\r\n<style>\r\n  .no-style .ng-valid {\r\n  border-left: 1px  solid #CCC\r\n}\r\n\r\n  .no-style .ng-invalid {\r\n  border-left: 1px  solid #CCC\r\n}\r\n</style>\r\n"
        },
        {
            "name": "AiGridComponent",
            "id": "component-AiGridComponent-569e0058e3df037406c0cc3371c25dab7d59308b4d62d9d017fd35fa676b9b0dc3017346fe88e1e702fe70a5849215b2bf02325ebc3044bfbb4236fc31430368",
            "file": "src/app/pages/air-import/ai-grid/ai-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ai-grid",
            "styleUrls": [
                "./ai-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ai-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    {\r\n      field: 'seqNo',\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'refNo' },\r\n    {\r\n      field: 'carrier',\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'carrierName' },\r\n    { field: 'flightNo1' },\r\n    { field: 'locationCode' },\r\n    { field: 'address1' },\r\n    { field: 'refDate' },\r\n    { field: 'user' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "defaultColDef",
                    "defaultValue": "{\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "rowData",
                    "defaultValue": "AirImport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "airImport[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "rowSelection",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"single\" | \"multiple\"",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { airImport } from '../../interfaces/airimport';\r\nimport AirImport from '../../../../assets/data/airImport.json';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-ai-grid',\r\n  templateUrl: './ai-grid.component.html',\r\n  styleUrls: ['./ai-grid.component.scss'],\r\n})\r\nexport class AiGridComponent {\r\n  rowSelection: 'single' | 'multiple' = 'single';\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      field: 'seqNo',\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'refNo' },\r\n    {\r\n      field: 'carrier',\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'carrierName' },\r\n    { field: 'flightNo1' },\r\n    { field: 'locationCode' },\r\n    { field: 'address1' },\r\n    { field: 'refDate' },\r\n    { field: 'user' },\r\n  ];\r\n\r\n  defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n  };\r\n\r\n  rowData: airImport[] = AirImport;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ai-grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ag-grid-angular\r\n  style=\"width: auto; height: 700px\"\r\n  class=\"ag-theme-alpine\"\r\n  [rowData]=\"rowData\"\r\n  [columnDefs]=\"columnDefs\"\r\n  [defaultColDef]=\"defaultColDef\"\r\n  [pagination]=\"true\"\r\n  [paginationPageSize]=\"10\"\r\n  [animateRows]=\"true\"\r\n  [sideBar]=\"true\"\r\n  [rowSelection]=\"rowSelection\"\r\n>\r\n</ag-grid-angular>\r\n"
        },
        {
            "name": "AirAmsComponent",
            "id": "component-AirAmsComponent-d5e8dbbcbb9973e7115b5ed80592e2f9cc2234f585bd404b0759fb6de02a29e29d4277136fcf65e5b4fc2c046a19f8bb1996b3ae38acd6e12740867d885e3b45",
            "file": "src/app/pages/air-ams/air-ams.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-ams",
            "styleUrls": [
                "./air-ams.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-ams.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new UntypedFormControl(new Date())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "myControl",
                    "defaultValue": "new UntypedFormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "options",
                    "defaultValue": "['One', 'Two', 'Three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "serializedDate",
                    "defaultValue": "new UntypedFormControl(new Date().toISOString())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-air-ams',\r\n  templateUrl: './air-ams.component.html',\r\n  styleUrls: ['./air-ams.component.scss']\r\n})\r\nexport class AirAmsComponent {\r\n\r\n  myControl = new UntypedFormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n\r\n  date = new UntypedFormControl(new Date());\r\n  serializedDate = new UntypedFormControl(new Date().toISOString());\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n\r\ndiv.container {\r\n  color: #eeeeee;\r\n  margin-bottom: 10px;\r\n}\r\n\r\ndiv.container > div {\r\n  height: 50px;\r\n  width: 200px;\r\n  background-color: blue;\r\n}\r\n\r\n.example-form {\r\n  min-width: 150px;\r\n  width: 100%;\r\n  height: 80%;\r\n}\r\n\r\n.example-full-width {\r\n  width: 100%;\r\n}\r\n\r\nmat-form-field {\r\n  margin-right: 12px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./air-ams.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(0, 183, 255);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Air AMS\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\" style=\"color: pink\">\r\n    <mat-tab label=\"Air AMS Dashboard\">\r\n      <app-air-ams-dashboard></app-air-ams-dashboard>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Air AMS Grid\">\r\n      <app-air-ams-grid></app-air-ams-grid>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"New Air AMS\">\r\n      <div class=\"container\">\r\n        <app-ams-detail></app-ams-detail>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "AirAmsDashboardComponent",
            "id": "component-AirAmsDashboardComponent-2f97f4b9aad07c25764657bd6740dff1bf6221e092a39a72e13e795065d883bb59fe54c88ce51f8dff047c2aee3f889b9d5fa209727d49f3a11427fb27d67bd1",
            "file": "src/app/pages/air-ams/air-ams-dashboard/air-ams-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-ams-dashboard",
            "styleUrls": [
                "./air-ams-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-ams-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-ams-dashboard',\r\n  templateUrl: './air-ams-dashboard.component.html',\r\n  styleUrls: ['./air-ams-dashboard.component.scss']\r\n})\r\nexport class AirAmsDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./air-ams-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-donut-chart></app-donut-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-multi-y></app-multi-y>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AirAmsGridComponent",
            "id": "component-AirAmsGridComponent-ea307c8dbe06271c6613059197ff4202eee903cd64939ca0ab4691caac7da03230e67b573c25f35c1fc8d9d6a0d65f66874b38067a922de63f2c6ef6aa2e0ea4",
            "file": "src/app/pages/air-ams/air-ams-grid/air-ams-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-ams-grid",
            "styleUrls": [
                "./air-ams-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-ams-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    { field: 'refNo', sortable: true, filter: true, resizable: true, checkboxSelection: true  },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryType', sortable: true, filter: true, resizable: true, checkboxSelection: true },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true  },\r\n    { field: 'description', sortable: true, filter: true, resizable: true  },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true  },\r\n    { field: 'user', sortable: true, filter: true, resizable: true  },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true },\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "rowData",
                    "defaultValue": "[\r\n      {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { CurrencyPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-air-ams-grid',\r\n  templateUrl: './air-ams-grid.component.html',\r\n  styleUrls: ['./air-ams-grid.component.scss']\r\n})\r\nexport class AirAmsGridComponent  {\r\n\r\n  columnDefs: ColDef[] = [\r\n    { field: 'refNo', sortable: true, filter: true, resizable: true, checkboxSelection: true  },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryType', sortable: true, filter: true, resizable: true, checkboxSelection: true },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true  },\r\n    { field: 'description', sortable: true, filter: true, resizable: true  },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true  },\r\n    { field: 'user', sortable: true, filter: true, resizable: true  },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true },\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true },\r\n  ];\r\n\r\n  rowData = [\r\n      {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n\r\n\r\n  ]\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./air-ams-grid.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ag-grid-angular\r\n    style=\"width: auto; height: 700px;\"\r\n    class=\"ag-theme-alpine\"\r\n    [rowData]=\"rowData\"\r\n    [columnDefs]=\"columnDefs\"\r\n    [pagination]=true\r\n    [paginationPageSize]=10\r\n    [animateRows]=true\r\n    [sideBar]=\"true\"\r\n\r\n>\r\n</ag-grid-angular>\r\n"
        },
        {
            "name": "AirAmsSummaryComponent",
            "id": "component-AirAmsSummaryComponent-d09755dc1ae9dbcbddcd1525c4a316c154df4b20390089287ebb24f9d32ca747c6ffc89812721cea8a4c0aed010d86d00ed77f4f9296183d56eacb8dc5aad644",
            "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-ams-summary",
            "styleUrls": [
                "./air-ams-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-ams-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<UserData>",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n\r\n@Component({\r\n  selector: 'app-air-ams-summary',\r\n  templateUrl: './air-ams-summary.component.html',\r\n  styleUrls: ['./air-ams-summary.component.scss']\r\n})\r\nexport class AirAmsSummaryComponent implements AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n    width: 100%;\r\n}",
                    "styleUrl": "./air-ams-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 64
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Progress Column -->\r\n      <ng-container matColumnDef=\"progress\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Fruit Column -->\r\n      <ng-container matColumnDef=\"fruit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <!-- Price Column -->\r\n      <ng-container matColumnDef=\"price\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- In Stock Column -->\r\n      <ng-container matColumnDef=\"in-stock\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Stock </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Store Column -->\r\n      <ng-container matColumnDef=\"store\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Store At </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Add New</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\">Add New</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>From Template</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"accent\">From Template</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Consolidator</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"warn\">Other Parties</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n</div>\r\n"
        },
        {
            "name": "AirComponent",
            "id": "component-AirComponent-de22ef4318e7b0bbb621129ca6010c3356987926b0e0f74e7c382c9fe48b24f74de78532c62ec3edf5f052ffc77439bca62f395a9b48f34537f807f59ab49e50",
            "file": "src/app/pages/trucking/air/air.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air",
            "styleUrls": [
                "./air.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tiles",
                    "defaultValue": "[\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Six', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Seven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Eight', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Nine', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Ten', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Eleven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Twelve', cols: 2, rows: 1, color: '#DDBDF1'},\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tile[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-air',\r\n  templateUrl: './air.component.html',\r\n  styleUrls: ['./air.component.scss']\r\n})\r\nexport class AirComponent {\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Six', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Seven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Eight', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Nine', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Ten', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Eleven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Twelve', cols: 2, rows: 1, color: '#DDBDF1'},\r\n\r\n  ];\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {  display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-template-rows: repeat(6, 1fr);\r\n    gap: 10px 10px;\r\n    grid-auto-flow: row;\r\n    grid-template-areas:\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . \"\r\n      \". . . . \"\r\n      \". . . . .\"\r\n      \". . . . . .\";\r\n  }\r\n  ",
                    "styleUrl": "./air.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h1 style=\"font-weight: bolder; background-color: rgb(0, 195, 255); text-align: center;\">Air Trucking</h1>\r\n\r\n<div class=\"container\">\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <span>\r\n      <label for=\"qty\">Quantity:</label>\r\n      <input type=\"number\" id=\"qty\" name=\"qty\" value=\"\">\r\n    </span>\r\n\r\n    <span>\r\n      <label for=\"wgt\">Weight:</label>\r\n      <input type=\"number\" id=\"wgt\" name=\"wgt\" value=\"\">\r\n    </span>\r\n<br>\r\n\r\n\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label> <br>\r\n    <select for=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select><br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br><br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n</div>\r\n\r\n<mat-grid-list cols=\"12\" rowHeight=\"100px\">\r\n  <mat-grid-tile\r\n      *ngFor=\"let tile of tiles\"\r\n      [colspan]=\"tile.cols\"\r\n      [rowspan]=\"tile.rows\"\r\n      [style.background]=\"tile.color\">\r\n    {{tile.text}}\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n"
        },
        {
            "name": "AirExportComponent",
            "id": "component-AirExportComponent-2fb197047b22035b73a753c5b575b15b0e991cad4206c7252d80b066687ec5c979887aa5eeb6c3cdd1429b20755292f12f8489d35edf85dcde19eb1429363cc1",
            "file": "src/app/pages/air-export/air-export.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-export",
            "styleUrls": [
                "./air-export.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-export.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-export',\r\n  templateUrl: './air-export.component.html',\r\n  styleUrls: ['./air-export.component.scss']\r\n})\r\nexport class AirExportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n  font-family: arial, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\ntd,\r\nth {\r\n  border: 1px solid #dddddd;\r\n  text-align: left;\r\n  padding: 8px;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #dddddd;\r\n}\r\n\r\nmat-form-field {\r\n  margin-right: 10px;\r\n}\r\n\r\nmat-card {\r\n  margin: 20 20 20 20;\r\n}\r\n\r\n.container {\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./air-export.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(43, 255, 0);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Air Export\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Air Export Dashboard\">\r\n      <app-air-export-dashboard></app-air-export-dashboard>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Air Export Summary\">\r\n      <app-export-summary></app-export-summary>\r\n    </mat-tab>\r\n    <mat-tab label=\"New Air Export\">\r\n      <app-air-export-detail></app-air-export-detail>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n\r\n<button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n  Back to Mainpage\r\n</button>\r\n"
        },
        {
            "name": "AirExportComponent",
            "id": "component-AirExportComponent-2fb197047b22035b73a753c5b575b15b0e991cad4206c7252d80b066687ec5c979887aa5eeb6c3cdd1429b20755292f12f8489d35edf85dcde19eb1429363cc1-1",
            "file": "src/app/pages/track-and-trace/air-export/air-export.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-export",
            "styleUrls": [
                "./air-export.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-export.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-export',\r\n  templateUrl: './air-export.component.html',\r\n  styleUrls: ['./air-export.component.scss']\r\n})\r\nexport class AirExportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n  background-color: #E4F0FF;\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr 200px;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-gap: 12px;\r\n  grid-template-areas:\r\n  \"header header header\"\r\n  \"nav content side\"\r\n  \"footer footer footer\";\r\n  height: 80vh;\r\n}\r\nheader {\r\n  color: white;\r\n  font-size: 14px;\r\n  grid-area: header;\r\n  text-align: center;\r\n  background-color: #FA7D44;\r\n}\r\n\r\nnav {\r\n  grid-area: nav;\r\n  margin-left: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\napp-privacy-policy,\r\nmain {\r\n  grid-area: content;\r\n  background-color: #F4CE46;\r\n  padding: 25px;\r\n}\r\n\r\naside {\r\n  grid-area: side;\r\n  margin-right: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background-color:#2BB961;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 25px 0;\r\n}\r\nul li {\r\n  color: white;\r\n}\r\nul li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n}\r\n",
                    "styleUrl": "./air-export.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AirExportComponent-1",
            "templateData": "\r\n<div class=\"container\">\r\n  <header>\r\n    <!-- Header -->\r\n    <h1 style=\"font-weight: bolder; text-align: center;\">Air Export Tracking</h1>\r\n  </header>\r\n  <nav>\r\n    <!-- Nav Bar -->\r\n    <ul>\r\n      <li><a routerLink=\"/home\">Home</a></li>\r\n      <li><a routerLink=\"/privacy-policy\">Privacy Policy</a></li>\r\n  </ul>\r\n  </nav>\r\n  <main>\r\n    <!-- Main Content -->\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Iste voluptates sint excepturi non nam ratione velit libero eius,\r\n      asperiores, temporibus vero beatae perspiciatis maxime iure repellat\r\n      quam ut ducimus maiores!\r\n    </p>\r\n  </main>\r\n  <aside>\r\n    <!-- Sidebar -->\r\n    <h3>Sidebar</h3>\r\n  </aside>\r\n  <footer>\r\n    <!-- Footer -->\r\n    <span>\r\n      Copyright 2019-2020\r\n  </span>\r\n  </footer>\r\n</div>\r\n"
        },
        {
            "name": "AirExportDashboardComponent",
            "id": "component-AirExportDashboardComponent-1574381209c37b8ad690ba8f755374922fde8f3584961ba59f0348b4c664e5386ac76d875ef25a8afa03106d57c4415ff2a57003f0988ea913e020e4d139df86",
            "file": "src/app/pages/air-export/air-export-dashboard/air-export-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-export-dashboard",
            "styleUrls": [
                "./air-export-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-export-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-export-dashboard',\r\n  templateUrl: './air-export-dashboard.component.html',\r\n  styleUrls: ['./air-export-dashboard.component.scss']\r\n})\r\nexport class AirExportDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// mat-card {\r\n//   padding: 50;\r\n// }\r\nmat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./air-export-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign=\"space-aroundstart\" fxLayoutGap=\"40px\">\r\n  <mat-card class=\"example-card g-5\" fxFlex=\"30\">\r\n    <mat-card-title-group>\r\n      <mat-card-title\r\n        >Tasks for {{ date1 | date: \"mediumDate\" }}</mat-card-title\r\n      >\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card g-5\" fxFlex=\"30\">\r\n    <mat-card-title-group>\r\n      <mat-card-title\r\n        >To Do List for {{ date1 | date: \"mediumDate\" }}</mat-card-title\r\n      >\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card g-5\" fxFlex=\"30\">\r\n    <mat-card-title-group>\r\n      <mat-card-title\r\n        >Current Mo. Summary As Of\r\n        {{ date1 | date: \"shortDate\" }}</mat-card-title\r\n      >\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<br />\r\n<br />\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-aroundstart\" fxLayoutGap=\"40px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\">\r\n    <mat-card-title-group>\r\n      <mat-card-title\r\n        >Tasks for {{ date1 | date: \"mediumDate\" }}</mat-card-title\r\n      >\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\">\r\n    <mat-card-title-group>\r\n      <mat-card-title\r\n        >To Do List for {{ date1 | date: \"mediumDate\" }}</mat-card-title\r\n      >\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-brush-chart></app-brush-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\">\r\n    <mat-card-title-group>\r\n      <mat-card-title\r\n        >Current Mo. Summary As Of\r\n        {{ date1 | date: \"shortDate\" }}</mat-card-title\r\n      >\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-polar-chart></app-polar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n<br /><br />\r\n"
        },
        {
            "name": "AirExportDetailComponent",
            "id": "component-AirExportDetailComponent-636886d433fe585583357497054f60f14ba374f4fede960d15888f19c770426cb302427d44a7113fe097a27fdc0b5d1780a8922cd80bac9107b4f27297bacfcd",
            "file": "src/app/pages/air-export/air-export-detail/air-export-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-export-detail",
            "styleUrls": [
                "./air-export-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-export-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-export-detail',\r\n  templateUrl: './air-export-detail.component.html',\r\n  styleUrls: ['./air-export-detail.component.scss']\r\n})\r\nexport class AirExportDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./air-export-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"page-header\">\r\n    <h3 class=\"page-title\">Form elements</h3>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Forms</a></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n          Form elements\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Default form</h4>\r\n          <p class=\"card-description\">Basic form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputUsername1\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputUsername1\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputConfirmPassword1\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputConfirmPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Form</h4>\r\n          <p class=\"card-description\">Horizontal form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputUsername2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputUsername2\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputEmail2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputMobile\" class=\"col-sm-3 col-form-label\"\r\n                >Mobile</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputMobile\"\r\n                  placeholder=\"Mobile number\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputPassword2\" class=\"col-sm-3 col-form-label\"\r\n                >Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label\r\n                for=\"exampleInputConfirmPassword2\"\r\n                class=\"col-sm-3 col-form-label\"\r\n                >Re Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputConfirmPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic form elements</h4>\r\n          <p class=\"card-description\">Basic form elements</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputName1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputName1\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail3\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail3\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword4\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword4\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleSelectGender\">Gender</label>\r\n              <select class=\"form-control\" id=\"exampleSelectGender\">\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>File upload</label>\r\n              <input type=\"file\" name=\"img[]\" class=\"file-upload-default\" />\r\n              <div class=\"input-group col-xs-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control file-upload-info\"\r\n                  disabled\r\n                  placeholder=\"Upload Image\"\r\n                />\r\n                <span class=\"input-group-append\">\r\n                  <button\r\n                    class=\"file-upload-browse btn btn-gradient-primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputCity1\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputCity1\"\r\n                placeholder=\"Location\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleTextarea1\">Textarea</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"exampleTextarea1\"\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Input size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label>Large input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Default input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Small input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-sm\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Select size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Large select</label>\r\n            <select\r\n              class=\"form-control form-control-lg\"\r\n              id=\"exampleFormControlSelect1\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect2\">Default select</label>\r\n            <select class=\"form-control\" id=\"exampleFormControlSelect2\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect3\">Small select</label>\r\n            <select\r\n              class=\"form-control form-control-sm\"\r\n              id=\"exampleFormControlSelect3\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic input groups</h4>\r\n          <p class=\"card-description\">Basic bootstrap input groups</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">@</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text bg-primary text-white\">$</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">.00</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">$</span>\r\n              </div>\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">0.00</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Recipient's username\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-gradient-primary\" type=\"button\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div ngbDropdown class=\"input-group-prepend\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-sm btn-outline-primary\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </button>\r\n                <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                  <a class=\"dropdown-item\">Action</a>\r\n                  <a class=\"dropdown-item\">Another action</a>\r\n                  <a class=\"dropdown-item\">Something else here</a>\r\n                  <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\">Separated link</a>\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Text input with dropdown button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Find in facebook\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-facebook\" type=\"button\">\r\n                  <i class=\"mdi mdi-facebook\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Checkbox Controls</h4>\r\n          <p class=\"card-description\">\r\n            Checkbox and radio controls (default appearance is in primary color)\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Disabled checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios1\"\r\n                        value=\"\"\r\n                      />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios2\"\r\n                        value=\"option2\"\r\n                        checked\r\n                      />\r\n                      Selected\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios2\"\r\n                        id=\"optionsRadios3\"\r\n                        value=\"option3\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadio2\"\r\n                        id=\"optionsRadios4\"\r\n                        value=\"option4\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Selected and disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-description\">\r\n            Add class <code>.form-check-{{ \"{\" }}color{{ \"}\" }}</code> for\r\n            checkbox and radio controls in theme colors\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio1\"\r\n                        id=\"ExampleRadio1\"\r\n                        checked\r\n                      />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio2\"\r\n                        id=\"ExampleRadio2\"\r\n                        checked\r\n                      />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio3\"\r\n                        id=\"ExampleRadio3\"\r\n                        checked\r\n                      />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio4\"\r\n                        id=\"ExampleRadio4\"\r\n                        checked\r\n                      />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio5\"\r\n                        id=\"ExampleRadio5\"\r\n                        checked\r\n                      />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Inline forms</h4>\r\n          <p class=\"card-description\">\r\n            Use the <code>.form-inline</code> class to display a series of\r\n            labels, form controls, and buttons on a single horizontal row\r\n          </p>\r\n          <form class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control mb-2 mr-sm-2\"\r\n              id=\"inlineFormInputName2\"\r\n              placeholder=\"Jane Doe\"\r\n            />\r\n\r\n            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\"\r\n              >Username</label\r\n            >\r\n            <div class=\"input-group mb-2 mr-sm-2\">\r\n              <div class=\"input-group-prepend\">\r\n                <div class=\"input-group-text\">@</div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inlineFormInputGroupUsername2\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check mx-sm-2\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mb-2\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 grid-margin\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Two column</h4>\r\n          <form class=\"form-sample\">\r\n            <p class=\"card-description\">Personal info</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">First Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Last Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Gender</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Male</option>\r\n                      <option>Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input class=\"form-control\" placeholder=\"dd/mm/yyyy\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Category</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Category1</option>\r\n                      <option>Category2</option>\r\n                      <option>Category3</option>\r\n                      <option>Category4</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Membership</label>\r\n                  <div class=\"col-sm-4\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios1\"\r\n                          value=\"\"\r\n                          checked\r\n                        />\r\n                        Free\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-5\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios2\"\r\n                          value=\"option2\"\r\n                        />\r\n                        Professional\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-description\">Address</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 1</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">State</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 2</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Postcode</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">City</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Country</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>America</option>\r\n                      <option>Italy</option>\r\n                      <option>Russia</option>\r\n                      <option>Britain</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AirImportComponent",
            "id": "component-AirImportComponent-a3eeb0cf242d2cd386e8ae72581a9c861b70d3b1a45e4aa8f6b46a00afdbd29e4017d0ef88e687863a9f91ff11aae702b78d142d1c7c490c9a60bcc495cac28e",
            "file": "src/app/pages/air-import/air-import.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-import",
            "styleUrls": [
                "./air-import.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-import.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    { field: 'No', sortable: true, filter: true, checkboxSelection: true },\r\n    { field: 'ID', sortable: true, filter: true, checkboxSelection: true },\r\n    { field: 'Code', sortable: true, filter: true},\r\n    { field: 'Name', sortable: true, filter: true },\r\n    { field: 'City', sortable: true, filter: true },\r\n    { field: 'State', sortable: true, filter: true},\r\n    { field: 'Zip_Code', sortable: true, filter: true }\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "rowData",
                    "defaultValue": "Ports",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PORT[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ColDef } from 'ag-grid-community';\r\nimport { Component } from '@angular/core';\r\n//Fetch remote data\r\nimport { HttpClient } from '@angular/common/http';\r\nimport  Ports  from '../../../assets/data/ports.json'\r\n\r\ninterface PORT  {\r\n  No: number;\r\n  ID: String;\r\n  Code: String;\r\n  Name: String;\r\n  Addr1: String;\r\n  Addr2: String;\r\n  Addr3: String;\r\n  City: String;\r\n  State: String;\r\n  Zip_Code: String;\r\n  Carr: String;\r\n  Unlading: String;\r\n  S_Code: String;\r\n  Firms: String;\r\n  Exam_Site: String;\r\n  Active: Number\r\n}\r\n@Component({\r\n  selector: 'app-air-import',\r\n  templateUrl: './air-import.component.html',\r\n  styleUrls: ['./air-import.component.scss']\r\n})\r\n\r\nexport class AirImportComponent {\r\n\r\n  columnDefs: ColDef[] = [\r\n    { field: 'No', sortable: true, filter: true, checkboxSelection: true },\r\n    { field: 'ID', sortable: true, filter: true, checkboxSelection: true },\r\n    { field: 'Code', sortable: true, filter: true},\r\n    { field: 'Name', sortable: true, filter: true },\r\n    { field: 'City', sortable: true, filter: true },\r\n    { field: 'State', sortable: true, filter: true},\r\n    { field: 'Zip_Code', sortable: true, filter: true }\r\n];\r\n\r\n  rowData : PORT[] = Ports ;\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.dir(this.rowData);\r\n     ;\r\n\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  font-size: large;\r\n  font-style: italic;\r\n  color: blue;\r\n}\r\n\r\n.my-tab-class {\r\n  border-width: 9px;\r\n  border-style: solid;\r\n  border-color: red;\r\n}\r\n\r\n#air {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n#air td,\r\n#air th {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n#air tr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n#air tr:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n#customers th {\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  text-align: left;\r\n  background-color: #04aa6d;\r\n  color: white;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./air-import.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Air Import\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab style=\"background-color: green\" label=\"Air Import Dashboard\">\r\n      <app-air-import-dashboard></app-air-import-dashboard>\r\n    </mat-tab>\r\n\r\n    <mat-tab style=\"background-color: green\" label=\"Air Import Grid\">\r\n      <app-ai-grid></app-ai-grid>\r\n    </mat-tab>\r\n\r\n    <mat-tab\r\n      style=\"background-color: blue; padding: 1em\"\r\n      label=\"New Air Import\"\r\n    >\r\n      <app-air-import-detail></app-air-import-detail>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "AirImportComponent",
            "id": "component-AirImportComponent-ad678871c5c765ea3e338e71fe67b0d055ec4f2d2a893583759a673f3279f3a3c2d16dad59677decd6e61379833c4eff87894db3977476b38ee080d16f0182c7-1",
            "file": "src/app/pages/track-and-trace/air-import/air-import.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-import",
            "styleUrls": [
                "./air-import.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-import.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-import',\r\n  templateUrl: './air-import.component.html',\r\n  styleUrls: ['./air-import.component.scss']\r\n})\r\nexport class AirImportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n  background-color: #E4F0FF;\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr 200px;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-gap: 12px;\r\n  grid-template-areas:\r\n  \"header header header\"\r\n  \"nav content side\"\r\n  \"footer footer footer\";\r\n  height: 80vh;\r\n}\r\nheader {\r\n  color: white;\r\n  font-size: 14px;\r\n  grid-area: header;\r\n  text-align: center;\r\n  background-color: #FA7D44;\r\n}\r\n\r\nnav {\r\n  grid-area: nav;\r\n  margin-left: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\napp-privacy-policy,\r\nmain {\r\n  grid-area: content;\r\n  background-color: #F4CE46;\r\n  padding: 25px;\r\n}\r\n\r\naside {\r\n  grid-area: side;\r\n  margin-right: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background-color:#2BB961;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 25px 0;\r\n}\r\nul li {\r\n  color: white;\r\n}\r\nul li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n}\r\n",
                    "styleUrl": "./air-import.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AirImportComponent-1",
            "templateData": "\r\n<div class=\"container\">\r\n  <header>\r\n    <!-- Header -->\r\n    <h1 style=\"font-weight: bolder; text-align: center;\">Air Import Tracking</h1>\r\n  </header>\r\n  <nav>\r\n    <!-- Nav Bar -->\r\n    <ul>\r\n      <li><a routerLink=\"/home\">Home</a></li>\r\n      <li><a routerLink=\"/privacy-policy\">Privacy Policy</a></li>\r\n  </ul>\r\n  </nav>\r\n  <main>\r\n    <!-- Main Content -->\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Iste voluptates sint excepturi non nam ratione velit libero eius,\r\n      asperiores, temporibus vero beatae perspiciatis maxime iure repellat\r\n      quam ut ducimus maiores!\r\n    </p>\r\n  </main>\r\n  <aside>\r\n    <!-- Sidebar -->\r\n    <h3>Sidebar</h3>\r\n  </aside>\r\n  <footer>\r\n    <!-- Footer -->\r\n    <span>\r\n      Copyright 2019-2020\r\n  </span>\r\n  </footer>\r\n</div>\r\n"
        },
        {
            "name": "AirImportDashboardComponent",
            "id": "component-AirImportDashboardComponent-cb72e560fb1ae58157de9ca5bae4faee068d8da73595be975fb32050c0664a91d9bc97ec0164e29b22486a43ce871dc9025fc23dca42247a9dd87472d753f393",
            "file": "src/app/pages/air-import/air-import-dashboard/air-import-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-import-dashboard",
            "styleUrls": [
                "./air-import-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-import-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-import-dashboard',\r\n  templateUrl: './air-import-dashboard.component.html',\r\n  styleUrls: ['./air-import-dashboard.component.scss']\r\n})\r\nexport class AirImportDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./air-import-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-apex-chart></app-apex-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-donut-monochrome></app-donut-monochrome>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-brush-chart></app-brush-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AirImportDetailComponent",
            "id": "component-AirImportDetailComponent-9140cd033d0836ea76a4db6a16b467c41ee31c3b6cb932afb06e9c13e3f01406cbb93441e16a29c2d0ee220818e042eec6bef226094ab0f33d2d8e12ab07b706",
            "file": "src/app/pages/air-import/air-import-detail/air-import-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-air-import-detail",
            "styleUrls": [
                "./air-import-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./air-import-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-air-import-detail',\r\n  templateUrl: './air-import-detail.component.html',\r\n  styleUrls: ['./air-import-detail.component.scss']\r\n})\r\nexport class AirImportDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./air-import-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"page-header\">\r\n    <h3 class=\"page-title\">Form elements</h3>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Forms</a></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n          Form elements\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Default form</h4>\r\n          <p class=\"card-description\">Basic form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputUsername1\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputUsername1\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputConfirmPassword1\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputConfirmPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Form</h4>\r\n          <p class=\"card-description\">Horizontal form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputUsername2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputUsername2\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputEmail2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputMobile\" class=\"col-sm-3 col-form-label\"\r\n                >Mobile</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputMobile\"\r\n                  placeholder=\"Mobile number\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputPassword2\" class=\"col-sm-3 col-form-label\"\r\n                >Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label\r\n                for=\"exampleInputConfirmPassword2\"\r\n                class=\"col-sm-3 col-form-label\"\r\n                >Re Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputConfirmPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic form elements</h4>\r\n          <p class=\"card-description\">Basic form elements</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputName1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputName1\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail3\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail3\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword4\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword4\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleSelectGender\">Gender</label>\r\n              <select class=\"form-control\" id=\"exampleSelectGender\">\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>File upload</label>\r\n              <input type=\"file\" name=\"img[]\" class=\"file-upload-default\" />\r\n              <div class=\"input-group col-xs-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control file-upload-info\"\r\n                  disabled\r\n                  placeholder=\"Upload Image\"\r\n                />\r\n                <span class=\"input-group-append\">\r\n                  <button\r\n                    class=\"file-upload-browse btn btn-gradient-primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputCity1\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputCity1\"\r\n                placeholder=\"Location\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleTextarea1\">Textarea</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"exampleTextarea1\"\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Input size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label>Large input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Default input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Small input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-sm\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Select size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Large select</label>\r\n            <select\r\n              class=\"form-control form-control-lg\"\r\n              id=\"exampleFormControlSelect1\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect2\">Default select</label>\r\n            <select class=\"form-control\" id=\"exampleFormControlSelect2\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect3\">Small select</label>\r\n            <select\r\n              class=\"form-control form-control-sm\"\r\n              id=\"exampleFormControlSelect3\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic input groups</h4>\r\n          <p class=\"card-description\">Basic bootstrap input groups</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">@</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text bg-primary text-white\">$</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">.00</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">$</span>\r\n              </div>\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">0.00</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Recipient's username\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-gradient-primary\" type=\"button\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div ngbDropdown class=\"input-group-prepend\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-sm btn-outline-primary\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </button>\r\n                <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                  <a class=\"dropdown-item\">Action</a>\r\n                  <a class=\"dropdown-item\">Another action</a>\r\n                  <a class=\"dropdown-item\">Something else here</a>\r\n                  <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\">Separated link</a>\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Text input with dropdown button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Find in facebook\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-facebook\" type=\"button\">\r\n                  <i class=\"mdi mdi-facebook\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Checkbox Controls</h4>\r\n          <p class=\"card-description\">\r\n            Checkbox and radio controls (default appearance is in primary color)\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Disabled checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios1\"\r\n                        value=\"\"\r\n                      />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios2\"\r\n                        value=\"option2\"\r\n                        checked\r\n                      />\r\n                      Selected\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios2\"\r\n                        id=\"optionsRadios3\"\r\n                        value=\"option3\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadio2\"\r\n                        id=\"optionsRadios4\"\r\n                        value=\"option4\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Selected and disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-description\">\r\n            Add class <code>.form-check-{{ \"{\" }}color{{ \"}\" }}</code> for\r\n            checkbox and radio controls in theme colors\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio1\"\r\n                        id=\"ExampleRadio1\"\r\n                        checked\r\n                      />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio2\"\r\n                        id=\"ExampleRadio2\"\r\n                        checked\r\n                      />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio3\"\r\n                        id=\"ExampleRadio3\"\r\n                        checked\r\n                      />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio4\"\r\n                        id=\"ExampleRadio4\"\r\n                        checked\r\n                      />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio5\"\r\n                        id=\"ExampleRadio5\"\r\n                        checked\r\n                      />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Inline forms</h4>\r\n          <p class=\"card-description\">\r\n            Use the <code>.form-inline</code> class to display a series of\r\n            labels, form controls, and buttons on a single horizontal row\r\n          </p>\r\n          <form class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control mb-2 mr-sm-2\"\r\n              id=\"inlineFormInputName2\"\r\n              placeholder=\"Jane Doe\"\r\n            />\r\n\r\n            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\"\r\n              >Username</label\r\n            >\r\n            <div class=\"input-group mb-2 mr-sm-2\">\r\n              <div class=\"input-group-prepend\">\r\n                <div class=\"input-group-text\">@</div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inlineFormInputGroupUsername2\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check mx-sm-2\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mb-2\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 grid-margin\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Two column</h4>\r\n          <form class=\"form-sample\">\r\n            <p class=\"card-description\">Personal info</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">First Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Last Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Gender</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Male</option>\r\n                      <option>Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input class=\"form-control\" placeholder=\"dd/mm/yyyy\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Category</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Category1</option>\r\n                      <option>Category2</option>\r\n                      <option>Category3</option>\r\n                      <option>Category4</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Membership</label>\r\n                  <div class=\"col-sm-4\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios1\"\r\n                          value=\"\"\r\n                          checked\r\n                        />\r\n                        Free\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-5\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios2\"\r\n                          value=\"option2\"\r\n                        />\r\n                        Professional\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-description\">Address</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 1</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">State</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 2</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Postcode</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">City</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Country</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>America</option>\r\n                      <option>Italy</option>\r\n                      <option>Russia</option>\r\n                      <option>Britain</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AmsDetailComponent",
            "id": "component-AmsDetailComponent-25eb1701ad46dba4d752ca22a465f9e591094ea2ad64e79c1c1e7d1d6ac3f7c754785e4d0fb1efaefe45aee14ef22f962a3ef3ba300780bf8127a75134be8315",
            "file": "src/app/pages/air-ams/ams-detail/ams-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ams-detail",
            "styleUrls": [
                "./ams-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ams-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "amendReason",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "amends",
                    "defaultValue": "[\r\n    'New entry',\r\n    'Add a bill of lading',\r\n    'Delete a bill of lading',\r\n    'Replace manifest quantiy',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "amsForm",
                    "defaultValue": "this.fb.group({\r\n    bl: this.fb.group({\r\n      issuer: [''],\r\n      blType: [''],\r\n      bookingNo: [''],\r\n      carrierMasterBl: [''],\r\n      hBl: [''],\r\n      mib: [''],\r\n    }),\r\n\r\n    vessel: this.fb.group({\r\n      vType: [''],\r\n      carrierCode: [''],\r\n      flag: [''],\r\n      vName: [''],\r\n      voyage: [''],\r\n      vessCode: [''],\r\n    }),\r\n\r\n    ports: this.fb.group({\r\n      por: [''],\r\n      pol: [''],\r\n      etd: [''],\r\n      firstForPort: [''],\r\n      lastForPort: [''],\r\n      pou: [''],\r\n      eta: [''],\r\n      finalDest: [''],\r\n    }),\r\n\r\n    weights: this.fb.group({\r\n      quantity: [''],\r\n      uom: [''],\r\n      grossWt: [''],\r\n      unitWt: [''],\r\n      volume: [''],\r\n      unitVol: [''],\r\n    }),\r\n\r\n    container: this.fb.array([\r\n      {\r\n        contNo: [''],\r\n        contType: [''],\r\n        sealNo: [''],\r\n        loadStatus: [''],\r\n        service: [''],\r\n      },\r\n    ]),\r\n\r\n    relatedParties: this.fb.group({\r\n      shipper: this.fb.group({\r\n        shipperCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n      consignee: this.fb.group({\r\n        consigneeCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n      notify: this.fb.group({\r\n        notifyCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n      secondNotify: this.fb.group({\r\n        secondNotifyCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n    }),\r\n\r\n    amend: this.fb.group({\r\n      amendFlag: [''],\r\n      reason: [''],\r\n    }),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "cust$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Customer[]>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "custControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "payload",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 135
                },
                {
                    "name": "reasons",
                    "defaultValue": "[\r\n    '01 - Not laden aboard per evidence from foreign shipper, or amnended bill of lading',\r\n    '03 - Error in manifesting, not laden on this carrier; laden on subsequent carrier for transportation to United States, per evidence in files',\r\n    '04 - Clerical error in manifesting per bill of lading in files',\r\n    '05 - Pilfered or prematurely landed prior to arrival in United States per signed statement of master or his agent or vessel log extract in our file',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "searchTerms",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "searchTxt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 137
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "selectedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 138
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "operation",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'operation'"
                        },
                        {
                            "name": "result",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "(error: any) => Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "operation",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'operation'",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "result",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchCust",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Customer[]>",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormArray,\r\n  FormControl,\r\n  UntypedFormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  catchError,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  Observable,\r\n  of,\r\n  startWith,\r\n  Subject,\r\n  switchMap,\r\n  tap,\r\n  filter,\r\n  map,\r\n  async,\r\n} from 'rxjs';\r\nimport 'rxjs/operator/filter';\r\nimport { Customer } from 'src/app/models/cust';\r\nimport custData from '../../../../assets/data/cust.json';\r\n\r\n@Component({\r\n  selector: 'app-ams-detail',\r\n  templateUrl: './ams-detail.component.html',\r\n  styleUrls: ['./ams-detail.component.scss'],\r\n})\r\nexport class AmsDetailComponent implements OnInit {\r\n  selected!: string;\r\n  cust$!: Observable<Customer[]>;\r\n  private searchTerms = new Subject<string>();\r\n  custControl = new FormControl('');\r\n\r\n  amsForm = this.fb.group({\r\n    bl: this.fb.group({\r\n      issuer: [''],\r\n      blType: [''],\r\n      bookingNo: [''],\r\n      carrierMasterBl: [''],\r\n      hBl: [''],\r\n      mib: [''],\r\n    }),\r\n\r\n    vessel: this.fb.group({\r\n      vType: [''],\r\n      carrierCode: [''],\r\n      flag: [''],\r\n      vName: [''],\r\n      voyage: [''],\r\n      vessCode: [''],\r\n    }),\r\n\r\n    ports: this.fb.group({\r\n      por: [''],\r\n      pol: [''],\r\n      etd: [''],\r\n      firstForPort: [''],\r\n      lastForPort: [''],\r\n      pou: [''],\r\n      eta: [''],\r\n      finalDest: [''],\r\n    }),\r\n\r\n    weights: this.fb.group({\r\n      quantity: [''],\r\n      uom: [''],\r\n      grossWt: [''],\r\n      unitWt: [''],\r\n      volume: [''],\r\n      unitVol: [''],\r\n    }),\r\n\r\n    container: this.fb.array([\r\n      {\r\n        contNo: [''],\r\n        contType: [''],\r\n        sealNo: [''],\r\n        loadStatus: [''],\r\n        service: [''],\r\n      },\r\n    ]),\r\n\r\n    relatedParties: this.fb.group({\r\n      shipper: this.fb.group({\r\n        shipperCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n      consignee: this.fb.group({\r\n        consigneeCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n      notify: this.fb.group({\r\n        notifyCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n      secondNotify: this.fb.group({\r\n        secondNotifyCode: [''],\r\n        name: [''],\r\n        address: [''],\r\n        telNo: [''],\r\n      }),\r\n    }),\r\n\r\n    amend: this.fb.group({\r\n      amendFlag: [''],\r\n      reason: [''],\r\n    }),\r\n  });\r\n\r\n  amendReason!: string;\r\n  amends: string[] = [\r\n    'New entry',\r\n    'Add a bill of lading',\r\n    'Delete a bill of lading',\r\n    'Replace manifest quantiy',\r\n  ];\r\n\r\n  reasons: string[] = [\r\n    '01 - Not laden aboard per evidence from foreign shipper, or amnended bill of lading',\r\n    '03 - Error in manifesting, not laden on this carrier; laden on subsequent carrier for transportation to United States, per evidence in files',\r\n    '04 - Clerical error in manifesting per bill of lading in files',\r\n    '05 - Pilfered or prematurely landed prior to arrival in United States per signed statement of master or his agent or vessel log extract in our file',\r\n  ];\r\n\r\n  payload = ''; // To alert form value when onSubmit() is called\r\n\r\n  searchTxt: any;\r\n  selectedValue: any;\r\n\r\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient) {}\r\n\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.cust$? =  this.custControl.valueChanges.pipe(\r\n    //   startWith(''),\r\n    //   map((value: any) => this._filter(value || ''))\r\n    // );\r\n    this.cust$ = this.searchTerms.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      switchMap((term: string) => this.searchCust(term))\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.cust$.filter((cust$: string) =>\r\n      cust$.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.payload = JSON.stringify(this.amsForm.getRawValue());\r\n  }\r\n\r\n  clearForm(): void {\r\n    this.amsForm.reset();\r\n  }\r\n\r\n  searchCust(term: string): Observable<Customer[]> {\r\n    const custUrl = 'src/assets/data/cust.json';\r\n    if (!term.trim()) {\r\n      return of([]);\r\n    }\r\n    return this.http.get<Customer[]>(`${custUrl}/?custName=${term}`).pipe(\r\n      tap((x) =>\r\n        x.length\r\n          ? console.log(`found customer \"${term}\"`)\r\n          : console.log(`no customer matching \"${term}\"`)\r\n      ),\r\n      catchError(this.handleError<Customer[]>('serachCust', []))\r\n    );\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "fieldset {\r\n  background-color: #eeeeee;\r\n  display: block;\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  padding-top: 0.35em;\r\n  padding-bottom: 0.625em;\r\n  padding-left: 0.75em;\r\n  padding-right: 0.75em;\r\n  border: 2px groove (internal value);\r\n}\r\n\r\nlegend {\r\n  background-color: gray;\r\n  color: white;\r\n  padding: 5px 10px;\r\n}\r\n\r\ninput {\r\n  margin: 5px;\r\n}\r\n\r\n.example-radio-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 15px 0;\r\n  align-items: flex-start;\r\n}\r\n\r\n.example-radio-button {\r\n  margin: 5px;\r\n}\r\n",
                    "styleUrl": "./ams-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 138,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"space-around center\"\r\n  style=\"background-color: lightblue\"\r\n>\r\n  <mat-card-header>\r\n    <mat-card-title>Air AMS Transaction No: </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p>filed on:</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n<br />\r\n<form [formGroup]=\"amsForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <fieldset formGroupName=\"bl\" style=\"color: red\">\r\n    <legend>Basic B/L Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance=\"fill\">\r\n        <mat-label>B/L Issuer</mat-label>\r\n        <input matInput placeholder=\"B/L Issuer\" formControlName=\"issuer\" />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-4\" appearance=\"fill\">\r\n        <mat-label>B/L Type</mat-label>\r\n        <mat-select\r\n          matNativeControl\r\n          required\r\n          placeholder=\"B/L Type\"\r\n          formControlName=\"blType\"\r\n        >\r\n          <mat-option value=\"\">0 - Regular Bill</mat-option>\r\n          <mat-option value=\"\">2 - Empty equipment instrucments </mat-option>\r\n          <mat-option value=\"\"\r\n            >B - Regular Bill Foreign Retained On Board(FROB)</mat-option\r\n          >\r\n          <mat-option value=\"\"\r\n            >M - Master Vessel Operating Common Carrier (MVOCC)</mat-option\r\n          >\r\n          <mat-option value=\"\"\r\n            >N = Non Vessel Operating Common Carrier(NVOCC)</mat-option\r\n          >\r\n          <mat-option value=\"\"\r\n            >O - Master Vessel Operating Common Carrier-FROB (MVOCC-FROB)\r\n          </mat-option>\r\n          <mat-option value=\"\"\r\n            >P - Non-Vessel Operating Common Carrier-FROB (MVOCC-FROB)\r\n          </mat-option>\r\n          <mat-option value=\"\"\r\n            >Q - Regular Bill FROB + Importer Security Filing</mat-option\r\n          >\r\n          <mat-option value=\"\"\r\n            >R - House FROB + Importer Security Filing</mat-option\r\n          >\r\n          <mat-option value=\"\"\r\n            >S - House Bill + Importer Security Filing</mat-option\r\n          >\r\n          <mat-option value=\"\"\r\n            >T - In-bond Type 62/53 with Importer Security Filing\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-6\" appearance=\"fill\">\r\n        <mat-label>Booking No</mat-label>\r\n        <input matInput placeholder=\"Booking No\" formControlName=\"bookingNo\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Carrier Master B/L</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Carrier Master B/L\"\r\n          formControlName=\"carrierMasterBl\"\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance=\"fill\">\r\n        <mat-label>House B/L</mat-label>\r\n        <input matInput placeholder=\"House B/L\" formControlName=\"hBl\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance=\"fill\">\r\n        <mat-label>Master In Bond</mat-label>\r\n        <input matInput placeholder=\"Master In Bond\" formControlName=\"mib\" />\r\n      </mat-form-field>\r\n    </div>\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"vessel\" style=\"color: red\">\r\n    <legend>Vessel and Voyage Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Vessel Type</mat-label>\r\n        <input matInput placeholder=\"Vessel Type\" formControlName=\"vType\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance=\"fill\">\r\n        <mat-label>Carrier Code</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Carrier Code\"\r\n          formControlName=\"carrierCode\"\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance=\"fill\">\r\n        <mat-label>Carrier Flag</mat-label>\r\n        <input matInput placeholder=\"Carrier Code\" formControlName=\"flag\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <p class=\"col-md-2\">Vessel Name Goes Here</p>\r\n      <mat-form-field class=\"col-md-7\" appearance=\"fill\">\r\n        <mat-label>Voyage Number</mat-label>\r\n        <input matInput placeholder=\"Voyage Number\" formControlName=\"voyage\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Vessel Code</mat-label>\r\n        <input matInput placeholder=\"Vessel Code\" formControlName=\"vessCode\" />\r\n      </mat-form-field>\r\n    </div>\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"ports\" style=\"color: red\">\r\n    <legend>Ports Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance=\"fill\">\r\n        <mat-label>Port of Receipt</mat-label>\r\n        <input matInput placeholder=\"Port of Receipt\" formControlName=\"por\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance=\"fill\">\r\n        <mat-label>Port of Loading</mat-label>\r\n        <input matInput placeholder=\"Port of Loading\" formControlName=\"pol\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance=\"fill\">\r\n        <mat-label>First Foreign Port</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"First Foreign Port\"\r\n          formControlName=\"firstForPort\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Last Foreign Port</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Last Foreign Port\"\r\n          formControlName=\"lastForPort\"\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Port of Unlading</mat-label>\r\n        <input matInput placeholder=\"Port of Unlading\" formControlName=\"pou\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>ETA</mat-label>\r\n        <input matInput placeholder=\"ETA\" formControlName=\"eta\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Final Destination</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Final Destination\"\r\n          formControlName=\"finalDest\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"weights\" style=\"color: red\">\r\n    <legend>Weigts and Measures</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance=\"fill\">\r\n        <mat-label>Quantity</mat-label>\r\n        <input matInput placeholder=\"Quantity\" formControlName=\"quantity\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance=\"fill\">\r\n        <mat-label>Unit of Measure</mat-label>\r\n        <input matInput placeholder=\"Unit of Measure\" formControlName=\"uom\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance=\"fill\">\r\n        <mat-label>Gross Weight </mat-label>\r\n        <input matInput placeholder=\"Gross Weight \" formControlName=\"grossWt\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance=\"fill\">\r\n        <mat-label>Weight Unit</mat-label>\r\n        <input matInput placeholder=\"Weight Unit\" formControlName=\"unitWt\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance=\"fill\">\r\n        <mat-label>Volume</mat-label>\r\n        <input matInput placeholder=\"Volume\" formControlName=\"volume\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance=\"fill\">\r\n        <mat-label>Volume Unit</mat-label>\r\n        <input matInput placeholder=\"Volume Unit\" formControlName=\"unitVol\" />\r\n      </mat-form-field>\r\n    </div>\r\n  </fieldset>\r\n\r\n  <!-- <fieldset formArrayName=\"container\"  style=\"color:red\">\r\n    <legend>Containers</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Container Number</mat-label>\r\n        <input matInput placeholder=\"Container Number\" formControlName=\"contNo\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Container Type</mat-label>\r\n        <input matInput placeholder=\"Container Type\" formControlName=\"contType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Seal No</mat-label>\r\n        <input matInput placeholder=\"Seal No\" formControlName=\"sealNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Load Status</mat-label>\r\n        <input matInput placeholder=\"Load Status\" formControlName=\"loadStatus\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Service</mat-label>\r\n        <input matInput placeholder=\"Service\" formControlName=\"service\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset> -->\r\n\r\n  <fieldset formGroupName=\"relatedParties\" style=\"color: red\">\r\n    <legend>Related Parties</legend>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n      <div\r\n        class=\"card\"\r\n        fxFlex=\"24\"\r\n        formGroupName=\"shipper\"\r\n        id=\"search-component\"\r\n      >\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shipper Code</mat-label>\r\n          <input\r\n            type=\"text\"\r\n            matInput\r\n            placeholder=\"Shipper Code\"\r\n            formControlName=\"shipperCode\"\r\n            [matAutocomplete]=\"auto\"\r\n          />\r\n          <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <mat-option\r\n              *ngFor=\"let cust of cust$ | async\"\r\n              [value]=\"cust.custName\"\r\n            >\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shipper Code</mat-label>\r\n          <input\r\n            #searchBox\r\n            id=\"search-box\"\r\n            (input)=\"searchCust(searchBox.value)\"\r\n            matInput\r\n            placeholder=\"Shipper Code\"\r\n            formControlName=\"shipperCode\"\r\n            [matAutocomplete]=\"auto\"\r\n          />\r\n          <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <mat-option\r\n              matNativeControl\r\n              *ngFor=\"let cust of cust$ | async\"\r\n              [value]=\"cust.custName\"\r\n            >\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field> -->\r\n\r\n        <!-- <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shipper Code</mat-label>\r\n          <mat-select placeholder=\"Shipper Code\" formControlName=\"shipperCode\">\r\n            <input [(ngModel)]=\"searchTxt\" maInput placeholder=\"search\" />\r\n            <mat-option\r\n              matNativeControl\r\n              *ngFor=\"let cust of cust$ | async\"\r\n              [value]=\"cust.custName\"\r\n            >\r\n            </mat-option>\r\n          </mat-select> -->\r\n        <!-- </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shipper Name</mat-label>\r\n          <input matInput placeholder=\"Shipper Name\" formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shipper Address</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Shipper Address\"\r\n            formControlName=\"address\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shipper Tel No</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Shipper Tel No\"\r\n            formControlName=\"telNo\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"card\" fxFlex=\"24\" formGroupName=\"consignee\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Consignee Code</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Consignee Code\"\r\n            formControlName=\"consigneeCode\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Consignee Name</mat-label>\r\n          <input matInput placeholder=\"Consignee Name\" formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Consignee Address</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Consignee Address\"\r\n            formControlName=\"address\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Consignee Tel No</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Consignee Tel No\"\r\n            formControlName=\"telNo\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"card\" fxFlex=\"24\" formGroupName=\"notify\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Notify Code</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Notify Code\"\r\n            formControlName=\"notifyCode\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Notify Name</mat-label>\r\n          <input matInput placeholder=\"Notify Name\" formControlName=\"name\" />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Notify Address</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Notify Address\"\r\n            formControlName=\"address\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Notify Tel No</mat-label>\r\n          <input matInput placeholder=\"Notify Tel No\" formControlName=\"telNo\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"card\" fxFlex=\"24\" formGroupName=\"secondNotify\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Second Notify Code</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Second Notify Code\"\r\n            formControlName=\"secondNotifyCode\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Second Notify Name</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Second Notify Name\"\r\n            formControlName=\"name\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Second Notify Address</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Second Notify Address\"\r\n            formControlName=\"address\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Second Notify Tel No</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Second Notify Tel No\"\r\n            formControlName=\"telNo\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"amend\" style=\"color: red\">\r\n    <legend>Amend Flag</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-4\" appearance=\"fill\">\r\n        <mat-label>Amend Flag</mat-label>\r\n        <input matInput placeholder=\"Amend Flag\" formControlName=\"amendFlag\" />\r\n      </mat-form-field>\r\n\r\n      <mat-radio-group\r\n        aria-labelledby=\"example-radio-group-label\"\r\n        class=\"example-radio-group\"\r\n      >\r\n        <mat-radio-button\r\n          class=\"example-radio-button\"\r\n          *ngFor=\"let amend of amends\"\r\n          [value]=\"amend\"\r\n        >\r\n          {{ amend }}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n\r\n      <mat-form-field class=\"col-md-8\" appearance=\"fill\">\r\n        <mat-label>Amend Reason</mat-label>\r\n        <mat-select\r\n          matNativeControl\r\n          required\r\n          placeholder=\"Amend Reason\"\r\n          formControlName=\"reason\"\r\n        >\r\n          <mat-option *ngFor=\"let reas of reasons\" [value]=\"reas\">\r\n            {{ reas }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </fieldset>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">\r\n    File New\r\n  </button>\r\n</form>\r\n\r\n<p>Form Value: {{ amsForm.value | json }}</p>\r\n"
        },
        {
            "name": "AmsDetailComponent",
            "id": "component-AmsDetailComponent-30d9ceeea2a44030c57a6530924adc322aa5d3dbec03cc435c9f8fa54f53ade6edbf325cc5f24b50729c14cb12716ea3f722a91c4b75684757e9573335d053c5-1",
            "file": "src/app/pages/sea-ams/ams-detail/ams-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ams-detail",
            "styleUrls": [
                "./ams-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ams-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "amendReason",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "amends",
                    "defaultValue": "['New entry', 'Add a bill of lading', 'Delte a bill of lading', 'Replace manifest quantiy']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "amsForm",
                    "defaultValue": "this.fb.group({\r\n    bl: this.fb.group({\r\n      issuer: [''],\r\n      blType: [''],\r\n      bookingNo: [''],\r\n      carrierMasterBl:[''],\r\n      hBl: [''],\r\n      mib: ['']\r\n    }),\r\n\r\n    vessel: this.fb.group({\r\n      vType: [''],\r\n      carrierCode: [''],\r\n      flag: [''],\r\n      vName: [''],\r\n      voyage: [''],\r\n      vessCode: ['']\r\n    }),\r\n\r\n    ports: this.fb.group({\r\n      por: [''],\r\n      pol: [''],\r\n      etd:[''],\r\n      firstForPort:[''],\r\n      lastForPort:[''],\r\n      pou: [''],\r\n      eta: [''],\r\n      finalDest:['']\r\n    }),\r\n\r\n    weights: this.fb.group({\r\n      quantity: [''],\r\n      uom: [''],\r\n      grossWt: [''],\r\n      unitWt: [''],\r\n      volume: [''],\r\n      unitVol: ['']\r\n    }),\r\n\r\n    container: this.fb.array([\r\n     {\r\n      contNo: [''],\r\n      contType:[''],\r\n      sealNo: [''],\r\n      loadStatus:[''],\r\n      service: ['']\r\n     }\r\n    ] ),\r\n\r\n    relatedParties: this.fb.group({\r\n      shipper: this.fb.group({\r\n        shipperCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      consignee: this.fb.group({\r\n        consigneeCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      notify: this.fb.group({\r\n        notifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      secondNotify: this.fb.group({\r\n        secondNotifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n    }),\r\n\r\n    amend: this.fb.group ({\r\n      amendFlag: [''],\r\n      reason: ['']\r\n    })\r\n\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "reasons",
                    "defaultValue": "[\r\n    '01 - Not laden aboard per evidence from foreign shipper, or amnended bill of lading',\r\n    '03 - Error in manifesting, not laden on this carrier; laden on subsequent carrier for transportation to United States, per evidence in files',\r\n    '04 - Clerical error in manifesting per bill of lading in files',\r\n    '05 - Pilfered or prematurely landed prior to arrival in United States per signed statement of master or his agent or vessel log extract in our file'\r\n      ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 97
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-ams-detail',\r\n  templateUrl: './ams-detail.component.html',\r\n  styleUrls: ['./ams-detail.component.scss']\r\n})\r\nexport class AmsDetailComponent implements OnInit {\r\n\r\n  amsForm = this.fb.group({\r\n    bl: this.fb.group({\r\n      issuer: [''],\r\n      blType: [''],\r\n      bookingNo: [''],\r\n      carrierMasterBl:[''],\r\n      hBl: [''],\r\n      mib: ['']\r\n    }),\r\n\r\n    vessel: this.fb.group({\r\n      vType: [''],\r\n      carrierCode: [''],\r\n      flag: [''],\r\n      vName: [''],\r\n      voyage: [''],\r\n      vessCode: ['']\r\n    }),\r\n\r\n    ports: this.fb.group({\r\n      por: [''],\r\n      pol: [''],\r\n      etd:[''],\r\n      firstForPort:[''],\r\n      lastForPort:[''],\r\n      pou: [''],\r\n      eta: [''],\r\n      finalDest:['']\r\n    }),\r\n\r\n    weights: this.fb.group({\r\n      quantity: [''],\r\n      uom: [''],\r\n      grossWt: [''],\r\n      unitWt: [''],\r\n      volume: [''],\r\n      unitVol: ['']\r\n    }),\r\n\r\n    container: this.fb.array([\r\n     {\r\n      contNo: [''],\r\n      contType:[''],\r\n      sealNo: [''],\r\n      loadStatus:[''],\r\n      service: ['']\r\n     }\r\n    ] ),\r\n\r\n    relatedParties: this.fb.group({\r\n      shipper: this.fb.group({\r\n        shipperCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      consignee: this.fb.group({\r\n        consigneeCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      notify: this.fb.group({\r\n        notifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      secondNotify: this.fb.group({\r\n        secondNotifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n    }),\r\n\r\n    amend: this.fb.group ({\r\n      amendFlag: [''],\r\n      reason: ['']\r\n    })\r\n\r\n  })\r\n\r\n  amendReason!: string\r\n  amends: string[] = ['New entry', 'Add a bill of lading', 'Delte a bill of lading', 'Replace manifest quantiy']\r\n\r\n  reasons: string[] = [\r\n    '01 - Not laden aboard per evidence from foreign shipper, or amnended bill of lading',\r\n    '03 - Error in manifesting, not laden on this carrier; laden on subsequent carrier for transportation to United States, per evidence in files',\r\n    '04 - Clerical error in manifesting per bill of lading in files',\r\n    '05 - Pilfered or prematurely landed prior to arrival in United States per signed statement of master or his agent or vessel log extract in our file'\r\n      ]\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    window.alert('Thank you for submitting Sea AMS data')\r\n  }\r\n\r\n  get container() : UntypedFormArray {\r\n    return this.amsForm.get(\"container\") as UntypedFormArray\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "fieldset {\r\n  background-color: #eeeeee;\r\n  display: block;\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  padding-top: 0.35em;\r\n  padding-bottom: 0.625em;\r\n  padding-left: 0.75em;\r\n  padding-right: 0.75em;\r\n  border: 2px groove (internal value);\r\n}\r\n\r\nlegend {\r\n  background-color: gray;\r\n  color: white;\r\n  padding: 5px 10px;\r\n}\r\n\r\ninput {\r\n  margin: 5px;\r\n}\r\n\r\n.example-radio-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 15px 0;\r\n  align-items: flex-start;\r\n}\r\n\r\n.example-radio-button {\r\n  margin: 5px;\r\n}\r\n",
                    "styleUrl": "./ams-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 102,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "container": {
                    "name": "container",
                    "getSignature": {
                        "name": "container",
                        "type": "",
                        "returnType": "UntypedFormArray",
                        "line": 115
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AmsDetailComponent-1",
            "templateData": "<div class=\"container\">\r\n\r\n<mat-card fxLayout='row' fxLayoutAlign = 'space-around center' style=\"background-color:lightblue\">\r\n  <mat-card-header>\r\n    <mat-card-title>Sea AMS Transaction No: </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p>filed on:</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n<br>\r\n\r\n<form [formGroup]=\"amsForm\" novalidate (ngSubmit)=\"onSubmit()\" >\r\n   <fieldset  formGroupName=\"bl\" style=\"color:red\">\r\n    <legend>Basic B/L Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>B/L Issuer</mat-label>\r\n        <input matInput placeholder=\"B/L Issuer\" formControlName=\"issuer\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>B/L Type</mat-label>\r\n        <input matInput placeholder=\"B/L Type\" formControlName=\"blType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Booking No</mat-label>\r\n        <input matInput placeholder=\"Booking No\" formControlName=\"bookingNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Carrier Master B/L</mat-label>\r\n        <input matInput placeholder=\"Carrier Master B/L\" formControlName=\"carrierMasterBl\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>House B/L</mat-label>\r\n        <input matInput placeholder=\"House B/L\" formControlName=\"hBl\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Master In Bond</mat-label>\r\n        <input matInput placeholder=\"Master In Bond\" formControlName=\"mib\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"vessel\" style=\"color:red\">\r\n    <legend>Vessel and Voyage Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Vessel Type</mat-label>\r\n        <input matInput placeholder=\"Vessel Type\" formControlName=\"vType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Carrier Code</mat-label>\r\n        <input matInput placeholder=\"Carrier Code\" formControlName=\"carrierCode\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Carrier Flag</mat-label>\r\n        <input matInput placeholder=\"Carrier Code\" formControlName=\"flag\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <p class=\"col-md-2\">Vessel Name Goes Here</p>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Voyage Number</mat-label>\r\n        <input matInput placeholder=\"Voyage Number\" formControlName=\"voyage\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Vessel Code</mat-label>\r\n        <input matInput placeholder=\"Vessel Code\" formControlName=\"vessCode\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"ports\" style=\"color:red\">\r\n    <legend>Ports Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Port of Receipt</mat-label>\r\n        <input matInput placeholder=\"Port of Receipt\" formControlName=\"por\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Port of Loading</mat-label>\r\n        <input matInput placeholder=\"Port of Loading\" formControlName=\"pol\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>First Foreign Port</mat-label>\r\n        <input matInput placeholder=\"First Foreign Port\" formControlName=\"firstForPort\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Last Foreign Port</mat-label>\r\n        <input matInput placeholder=\"Last Foreign Port\" formControlName=\"lastForPort\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Port of Unlading</mat-label>\r\n        <input matInput placeholder=\"Port of Unlading\" formControlName=\"pou\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>ETA</mat-label>\r\n        <input matInput placeholder=\"ETA\" formControlName=\"eta\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Final Destination</mat-label>\r\n        <input matInput placeholder=\"Final Destination\" formControlName=\"finalDest\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"weights\" style=\"color:red\">\r\n    <legend>Weigts and Measures</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Quantity</mat-label>\r\n        <input matInput placeholder=\"Quantity\" formControlName=\"quantity\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Unit of Measure</mat-label>\r\n        <input matInput placeholder=\"Unit of Measure\" formControlName=\"uom\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Gross Weight </mat-label>\r\n        <input matInput placeholder=\"Gross Weight \" formControlName=\"grossWt\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Weight Unit</mat-label>\r\n        <input matInput placeholder=\"Weight Unit\" formControlName=\"unitWt\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Volume</mat-label>\r\n        <input matInput placeholder=\"Volume\" formControlName=\"volume\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Volume Unit</mat-label>\r\n        <input matInput placeholder=\"Volume Unit\" formControlName=\"unitVol\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <!-- <fieldset formArrayName=\"container\"  style=\"color:red\">\r\n    <legend>Containers</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Container Number</mat-label>\r\n        <input matInput placeholder=\"Container Number\" formControlName=\"contNo\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Container Type</mat-label>\r\n        <input matInput placeholder=\"Container Type\" formControlName=\"contType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Seal No</mat-label>\r\n        <input matInput placeholder=\"Seal No\" formControlName=\"sealNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Load Status</mat-label>\r\n        <input matInput placeholder=\"Load Status\" formControlName=\"loadStatus\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Service</mat-label>\r\n        <input matInput placeholder=\"Service\" formControlName=\"service\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset> -->\r\n\r\n  <fieldset formGroupName=\"relatedParties\" style=\"color:red\" >\r\n    <legend>Related Parties</legend>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n    <div class=\"card\" fxFlex=\"24\" formGroupName=\"shipper\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Shipper Code</mat-label>\r\n        <input matInput placeholder=\"Shipper Code\" formControlName=\"shipperCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Shipper Name</mat-label>\r\n        <input matInput placeholder=\"Shipper Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Shipper Address</mat-label>\r\n        <input matInput placeholder=\"Shipper Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Shipper Tel No</mat-label>\r\n        <input matInput placeholder=\"Shipper Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n       <div class=\"card\" fxFlex=\"24\" formGroupName=\"consignee\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Consignee Code</mat-label>\r\n        <input matInput placeholder=\"Consignee Code\" formControlName=\"consigneeCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Consignee Name</mat-label>\r\n        <input matInput placeholder=\"Consignee Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Consignee Address</mat-label>\r\n        <input matInput placeholder=\"Consignee Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Consignee Tel No</mat-label>\r\n        <input matInput placeholder=\"Consignee Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card\" fxFlex=\"24\" formGroupName=\"notify\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Notify Code</mat-label>\r\n        <input matInput placeholder=\"Notify Code\" formControlName=\"notifyCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Notify Name</mat-label>\r\n        <input matInput placeholder=\"Notify Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Notify Address</mat-label>\r\n        <input matInput placeholder=\"Notify Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Notify Tel No</mat-label>\r\n        <input matInput placeholder=\"Notify Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card\" fxFlex=\"24\" formGroupName=\"secondNotify\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Second Notify Code</mat-label>\r\n        <input matInput placeholder=\"Second Notify Code\" formControlName=\"secondNotifyCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Second Notify Name</mat-label>\r\n        <input matInput placeholder=\"Second Notify Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Second Notify Address</mat-label>\r\n        <input matInput placeholder=\"Second Notify Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Second Notify Tel No</mat-label>\r\n        <input matInput placeholder=\"Second Notify Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n   </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName = \"amend\" style=\"color:red\">\r\n    <legend>Amend Flag</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Amend Flag</mat-label>\r\n        <input matInput placeholder=\"Amend Flag\" formControlName=\"amendFlag\">\r\n      </mat-form-field>\r\n\r\n      <mat-radio-group\r\n        aria-labelledby=\"example-radio-group-label\"\r\n        class=\"example-radio-group\">\r\n       <mat-radio-button class=\"example-radio-button\" *ngFor=\"let amend of amends\" [value]=\"amend\">\r\n             {{amend}}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n\r\n      <mat-form-field class=\"col-md-8\" appearance='fill'>\r\n        <mat-label>Amend Reason</mat-label>\r\n        <select matNativeControl\r\n            required placeholder=\"Amend Reason\" formControlName=\"reason\">\r\n          <option *ngFor=\"let reas of reasons\" [value]=\"reas\">\r\n              {{ reas }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n\r\n  </form>\r\n\r\n  <p> Form Value: {{ amsForm.value | json }}</p>\r\n\r\n</div>"
        },
        {
            "name": "AmsDetailComponent",
            "id": "component-AmsDetailComponent-0008591e8337994c83c754b1bde12a3b55df4b691c2d8d3d20070b37e976cdd4f897e3db4c3f9a7dd294f62d21458b3ac7507be759607afb047ff304bd83c9dd-2",
            "file": "src/app/pages/truck-ams/ams-detail/ams-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ams-detail",
            "styleUrls": [
                "./ams-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ams-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "amendReason",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "amends",
                    "defaultValue": "['New entry', 'Add a bill of lading', 'Delte a bill of lading', 'Replace manifest quantiy']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "amsForm",
                    "defaultValue": "this.fb.group({\r\n    bl: this.fb.group({\r\n      issuer: [''],\r\n      blType: [''],\r\n      bookingNo: [''],\r\n      carrierMasterBl:[''],\r\n      hBl: [''],\r\n      mib: ['']\r\n    }),\r\n\r\n    vessel: this.fb.group({\r\n      vType: [''],\r\n      carrierCode: [''],\r\n      flag: [''],\r\n      vName: [''],\r\n      voyage: [''],\r\n      vessCode: ['']\r\n    }),\r\n\r\n    ports: this.fb.group({\r\n      por: [''],\r\n      pol: [''],\r\n      etd:[''],\r\n      firstForPort:[''],\r\n      lastForPort:[''],\r\n      pou: [''],\r\n      eta: [''],\r\n      finalDest:['']\r\n    }),\r\n\r\n    weights: this.fb.group({\r\n      quantity: [''],\r\n      uom: [''],\r\n      grossWt: [''],\r\n      unitWt: [''],\r\n      volume: [''],\r\n      unitVol: ['']\r\n    }),\r\n\r\n    container: this.fb.array([\r\n     {\r\n      contNo: [''],\r\n      contType:[''],\r\n      sealNo: [''],\r\n      loadStatus:[''],\r\n      service: ['']\r\n     }\r\n    ] ),\r\n\r\n    relatedParties: this.fb.group({\r\n      shipper: this.fb.group({\r\n        shipperCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      consignee: this.fb.group({\r\n        consigneeCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      notify: this.fb.group({\r\n        notifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      secondNotify: this.fb.group({\r\n        secondNotifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n    }),\r\n\r\n    amend: this.fb.group ({\r\n      amendFlag: [''],\r\n      reason: ['']\r\n    })\r\n\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "reasons",
                    "defaultValue": "[\r\n    '01 - Not laden aboard per evidence from foreign shipper, or amnended bill of lading',\r\n    '03 - Error in manifesting, not laden on this carrier; laden on subsequent carrier for transportation to United States, per evidence in files',\r\n    '04 - Clerical error in manifesting per bill of lading in files',\r\n    '05 - Pilfered or prematurely landed prior to arrival in United States per signed statement of master or his agent or vessel log extract in our file'\r\n      ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 96
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-ams-detail',\r\n  templateUrl: './ams-detail.component.html',\r\n  styleUrls: ['./ams-detail.component.scss']\r\n})\r\nexport class AmsDetailComponent implements OnInit {\r\n  amsForm = this.fb.group({\r\n    bl: this.fb.group({\r\n      issuer: [''],\r\n      blType: [''],\r\n      bookingNo: [''],\r\n      carrierMasterBl:[''],\r\n      hBl: [''],\r\n      mib: ['']\r\n    }),\r\n\r\n    vessel: this.fb.group({\r\n      vType: [''],\r\n      carrierCode: [''],\r\n      flag: [''],\r\n      vName: [''],\r\n      voyage: [''],\r\n      vessCode: ['']\r\n    }),\r\n\r\n    ports: this.fb.group({\r\n      por: [''],\r\n      pol: [''],\r\n      etd:[''],\r\n      firstForPort:[''],\r\n      lastForPort:[''],\r\n      pou: [''],\r\n      eta: [''],\r\n      finalDest:['']\r\n    }),\r\n\r\n    weights: this.fb.group({\r\n      quantity: [''],\r\n      uom: [''],\r\n      grossWt: [''],\r\n      unitWt: [''],\r\n      volume: [''],\r\n      unitVol: ['']\r\n    }),\r\n\r\n    container: this.fb.array([\r\n     {\r\n      contNo: [''],\r\n      contType:[''],\r\n      sealNo: [''],\r\n      loadStatus:[''],\r\n      service: ['']\r\n     }\r\n    ] ),\r\n\r\n    relatedParties: this.fb.group({\r\n      shipper: this.fb.group({\r\n        shipperCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      consignee: this.fb.group({\r\n        consigneeCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      notify: this.fb.group({\r\n        notifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n      secondNotify: this.fb.group({\r\n        secondNotifyCode: [''],\r\n        name:[''],\r\n        address:[''],\r\n        telNo:['']\r\n      }),\r\n    }),\r\n\r\n    amend: this.fb.group ({\r\n      amendFlag: [''],\r\n      reason: ['']\r\n    })\r\n\r\n  })\r\n\r\n  amendReason!: string\r\n  amends: string[] = ['New entry', 'Add a bill of lading', 'Delte a bill of lading', 'Replace manifest quantiy']\r\n\r\n  reasons: string[] = [\r\n    '01 - Not laden aboard per evidence from foreign shipper, or amnended bill of lading',\r\n    '03 - Error in manifesting, not laden on this carrier; laden on subsequent carrier for transportation to United States, per evidence in files',\r\n    '04 - Clerical error in manifesting per bill of lading in files',\r\n    '05 - Pilfered or prematurely landed prior to arrival in United States per signed statement of master or his agent or vessel log extract in our file'\r\n      ]\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    window.alert('Thank you for submitting Sea AMS data')\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "fieldset {\r\n  background-color: #eeeeee;\r\n  display: block;\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n  padding-top: 0.35em;\r\n  padding-bottom: 0.625em;\r\n  padding-left: 0.75em;\r\n  padding-right: 0.75em;\r\n  border: 2px groove (internal value);\r\n}\r\n\r\nlegend {\r\n  background-color: gray;\r\n  color: white;\r\n  padding: 5px 10px;\r\n}\r\n\r\ninput {\r\n  margin: 5px;\r\n}\r\n\r\n.example-radio-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 15px 0;\r\n  align-items: flex-start;\r\n}\r\n\r\n.example-radio-button {\r\n  margin: 5px;\r\n}\r\n",
                    "styleUrl": "./ams-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 101,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "AmsDetailComponent-2",
            "templateData": "<div class=\"container\">\r\n\r\n<mat-card fxLayout='row' fxLayoutAlign = 'space-around center' style=\"background-color:lightblue\">\r\n  <mat-card-header>\r\n    <mat-card-title>Truck AMS Transaction No: </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p>filed on:</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n<br>\r\n<form [formGroup]=\"amsForm\" novalidate (ngSubmit)=\"onSubmit()\" >\r\n   <fieldset  formGroupName=\"bl\" style=\"color:red\">\r\n    <legend>Basic B/L Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>B/L Issuer</mat-label>\r\n        <input matInput placeholder=\"B/L Issuer\" formControlName=\"issuer\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>B/L Type</mat-label>\r\n        <input matInput placeholder=\"B/L Type\" formControlName=\"blType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Booking No</mat-label>\r\n        <input matInput placeholder=\"Booking No\" formControlName=\"bookingNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Carrier Master B/L</mat-label>\r\n        <input matInput placeholder=\"Carrier Master B/L\" formControlName=\"carrierMasterBl\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>House B/L</mat-label>\r\n        <input matInput placeholder=\"House B/L\" formControlName=\"hBl\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Master In Bond</mat-label>\r\n        <input matInput placeholder=\"Master In Bond\" formControlName=\"mib\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"vessel\" style=\"color:red\">\r\n    <legend>Vessel and Voyage Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Vessel Type</mat-label>\r\n        <input matInput placeholder=\"Vessel Type\" formControlName=\"vType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Carrier Code</mat-label>\r\n        <input matInput placeholder=\"Carrier Code\" formControlName=\"carrierCode\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Carrier Flag</mat-label>\r\n        <input matInput placeholder=\"Carrier Code\" formControlName=\"flag\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <p class=\"col-md-2\">Vessel Name Goes Here</p>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Voyage Number</mat-label>\r\n        <input matInput placeholder=\"Voyage Number\" formControlName=\"voyage\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Vessel Code</mat-label>\r\n        <input matInput placeholder=\"Vessel Code\" formControlName=\"vessCode\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"ports\" style=\"color:red\">\r\n    <legend>Ports Information</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Port of Receipt</mat-label>\r\n        <input matInput placeholder=\"Port of Receipt\" formControlName=\"por\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Port of Loading</mat-label>\r\n        <input matInput placeholder=\"Port of Loading\" formControlName=\"pol\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>First Foreign Port</mat-label>\r\n        <input matInput placeholder=\"First Foreign Port\" formControlName=\"firstForPort\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Last Foreign Port</mat-label>\r\n        <input matInput placeholder=\"Last Foreign Port\" formControlName=\"lastForPort\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Port of Unlading</mat-label>\r\n        <input matInput placeholder=\"Port of Unlading\" formControlName=\"pou\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>ETA</mat-label>\r\n        <input matInput placeholder=\"ETA\" formControlName=\"eta\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Final Destination</mat-label>\r\n        <input matInput placeholder=\"Final Destination\" formControlName=\"finalDest\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName=\"weights\" style=\"color:red\">\r\n    <legend>Weigts and Measures</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Quantity</mat-label>\r\n        <input matInput placeholder=\"Quantity\" formControlName=\"quantity\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Unit of Measure</mat-label>\r\n        <input matInput placeholder=\"Unit of Measure\" formControlName=\"uom\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Gross Weight </mat-label>\r\n        <input matInput placeholder=\"Gross Weight \" formControlName=\"grossWt\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Weight Unit</mat-label>\r\n        <input matInput placeholder=\"Weight Unit\" formControlName=\"unitWt\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Volume</mat-label>\r\n        <input matInput placeholder=\"Volume\" formControlName=\"volume\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Volume Unit</mat-label>\r\n        <input matInput placeholder=\"Volume Unit\" formControlName=\"unitVol\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n  <!-- <fieldset formArrayName=\"container\"  style=\"color:red\">\r\n    <legend>Containers</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-2\" appearance='fill'>\r\n        <mat-label>Container Number</mat-label>\r\n        <input matInput placeholder=\"Container Number\" formControlName=\"contNo\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Container Type</mat-label>\r\n        <input matInput placeholder=\"Container Type\" formControlName=\"contType\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6\" appearance='fill'>\r\n        <mat-label>Seal No</mat-label>\r\n        <input matInput placeholder=\"Seal No\" formControlName=\"sealNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-3\" appearance='fill'>\r\n        <mat-label>Load Status</mat-label>\r\n        <input matInput placeholder=\"Load Status\" formControlName=\"loadStatus\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-7\" appearance='fill'>\r\n        <mat-label>Service</mat-label>\r\n        <input matInput placeholder=\"Service\" formControlName=\"service\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </fieldset> -->\r\n\r\n  <fieldset formGroupName=\"relatedParties\" style=\"color:red\" >\r\n    <legend>Related Parties</legend>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n    <div class=\"card\" fxFlex=\"24\" formGroupName=\"shipper\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Shipper Code</mat-label>\r\n        <input matInput placeholder=\"Shipper Code\" formControlName=\"shipperCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Shipper Name</mat-label>\r\n        <input matInput placeholder=\"Shipper Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Shipper Address</mat-label>\r\n        <input matInput placeholder=\"Shipper Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Shipper Tel No</mat-label>\r\n        <input matInput placeholder=\"Shipper Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n       <div class=\"card\" fxFlex=\"24\" formGroupName=\"consignee\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Consignee Code</mat-label>\r\n        <input matInput placeholder=\"Consignee Code\" formControlName=\"consigneeCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Consignee Name</mat-label>\r\n        <input matInput placeholder=\"Consignee Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Consignee Address</mat-label>\r\n        <input matInput placeholder=\"Consignee Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Consignee Tel No</mat-label>\r\n        <input matInput placeholder=\"Consignee Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card\" fxFlex=\"24\" formGroupName=\"notify\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Notify Code</mat-label>\r\n        <input matInput placeholder=\"Notify Code\" formControlName=\"notifyCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Notify Name</mat-label>\r\n        <input matInput placeholder=\"Notify Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Notify Address</mat-label>\r\n        <input matInput placeholder=\"Notify Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Notify Tel No</mat-label>\r\n        <input matInput placeholder=\"Notify Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card\" fxFlex=\"24\" formGroupName=\"secondNotify\">\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Second Notify Code</mat-label>\r\n        <input matInput placeholder=\"Second Notify Code\" formControlName=\"secondNotifyCode\">\r\n      </mat-form-field>\r\n      <mat-form-field  appearance='fill'>\r\n        <mat-label>Second Notify Name</mat-label>\r\n        <input matInput placeholder=\"Second Notify Name\" formControlName=\"name\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Second Notify Address</mat-label>\r\n        <input matInput placeholder=\"Second Notify Address\" formControlName=\"address\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance='fill'>\r\n        <mat-label>Second Notify Tel No</mat-label>\r\n        <input matInput placeholder=\"Second Notify Tel No\" formControlName=\"telNo\">\r\n      </mat-form-field>\r\n    </div>\r\n   </div>\r\n\r\n  </fieldset>\r\n\r\n  <fieldset formGroupName = \"amend\" style=\"color:red\">\r\n    <legend>Amend Flag</legend>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-4\" appearance='fill'>\r\n        <mat-label>Amend Flag</mat-label>\r\n        <select matNativeControl\r\n            required placeholder=\"Amend Flag\" formControlName=\"amendFlag\">\r\n          <option *ngFor=\"let amend of amends\" [value]=\"amend\">\r\n              {{ amend }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-md-8\" appearance='fill'>\r\n        <mat-label>Amend Reason</mat-label>\r\n        <select matNativeControl\r\n            required placeholder=\"Amend Reason\" formControlName=\"reason\">\r\n          <option *ngFor=\"let reas of reasons\" [value]=\"reas\">\r\n              {{ reas }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </fieldset>\r\n\r\n\r\n  </form>\r\n\r\n  <p> Form Value: {{ amsForm.value | json }}</p>\r\n\r\n</div>"
        },
        {
            "name": "AmsSummaryComponent",
            "id": "component-AmsSummaryComponent-d01330c7f626133d37297ba8b517430e5d5d3f7722722f6e66ee594d447e1dc3350876d91e27a912f00ec6c9cdedc94a7bb625a83ec1865898574fda1935e9f0",
            "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ams-summary",
            "styleUrls": [
                "./ams-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ams-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<UserData>",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n@Component({\r\n  selector: 'app-ams-summary',\r\n  templateUrl: './ams-summary.component.html',\r\n  styleUrls: ['./ams-summary.component.scss']\r\n})\r\nexport class AmsSummaryComponent {\r\n\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n    width: 100%\r\n}",
                    "styleUrl": "./ams-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 63
            },
            "templateData": "<mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Progress Column -->\r\n      <ng-container matColumnDef=\"progress\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Fruit Column -->\r\n      <ng-container matColumnDef=\"fruit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <!-- Price Column -->\r\n      <ng-container matColumnDef=\"price\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- In Stock Column -->\r\n      <ng-container matColumnDef=\"in-stock\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Stock </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Store Column -->\r\n      <ng-container matColumnDef=\"store\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Store At </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Add New</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='primary'>Add New</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>From Template</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='accent'>From Template</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Consolidator</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='warn'>Other Parties</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n</div>\r\n"
        },
        {
            "name": "AmsSummaryComponent",
            "id": "component-AmsSummaryComponent-c336958f31cee24ce0666c1e8b421e078e73fce9a00af52ef9f4139c6b1918a571eaa597b1532b4fd00a7036d0cb8df4e2d496733a5fa2a1bb2d248db2b13da6-1",
            "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ams-summary",
            "styleUrls": [
                "./ams-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ams-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<UserData>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n@Component({\r\n  selector: 'app-ams-summary',\r\n  templateUrl: './ams-summary.component.html',\r\n  styleUrls: ['./ams-summary.component.scss']\r\n})\r\nexport class AmsSummaryComponent {\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'price', 'in-stock', 'store'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n    width: 100%\r\n}",
                    "styleUrl": "./ams-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 62
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AmsSummaryComponent-1",
            "templateData": "<mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Progress Column -->\r\n      <ng-container matColumnDef=\"progress\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Fruit Column -->\r\n      <ng-container matColumnDef=\"fruit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n\r\n      <!-- Price Column -->\r\n      <ng-container matColumnDef=\"price\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- In Stock Column -->\r\n      <ng-container matColumnDef=\"in-stock\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Stock </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Store Column -->\r\n      <ng-container matColumnDef=\"store\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Store At </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Add New</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='primary'>Add New</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>From Template</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='accent'>From Template</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Consolidator</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='warn'>Other Parties</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n</div>\r\n"
        },
        {
            "name": "ApexChartComponent",
            "id": "component-ApexChartComponent-035b3ff31fce3137aefdbf71101dda8998afaf92479f04786a3e479fcd25c277a49a40342c221ee9095a953609d717e6553aa507a24e0a41dfdfd7b9b8f3df9a",
            "file": "src/app/widgets/apex-chart/apex-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-apex-chart",
            "styleUrls": [
                "./apex-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./apex-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexTitleSubtitle,\r\n  ApexXAxis,\r\n  ChartComponent\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from '@angular/core';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  title: ApexTitleSubtitle;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-apex-chart',\r\n  templateUrl: './apex-chart.component.html',\r\n  styleUrls: ['./apex-chart.component.scss']\r\n})\r\nexport class ApexChartComponent  {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions!: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"My-series\",\r\n          data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 550,\r\n        type: \"bar\"\r\n      },\r\n      title: {\r\n        text: \"My First Angular Chart\"\r\n      },\r\n      xaxis: {\r\n        categories: [\"Jan\", \"Feb\",  \"Mar\",  \"Apr\",  \"May\",  \"Jun\",  \"Jul\",  \"Aug\", \"Sep\"]\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart-box {\r\n  max-width: 650px;\r\n  margin: 35px auto;\r\n}\r\n",
                    "styleUrl": "./apex-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "templateData": "\r\n  <div style=\"text-align:center\" class=\"chart-box\">\r\n    <apx-chart\r\n      [series]=\"chartOptions.series\"\r\n      [chart]=\"chartOptions.chart\"\r\n      [xaxis]=\"chartOptions.xaxis\"\r\n      [title]=\"chartOptions.title\"\r\n    ></apx-chart>\r\n  </div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f68a5796c60b36dfacf9d86a2df4d5f03411dc0c88501df467c417fe11dc998a40088238a1b6b5365ecee86c51e1dd0271ab022b718522c80e659ebec8826040",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ANA Link'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { slideInAnimation } from './animations';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'ANA Link';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav a {\r\n  padding: 1rem;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "BarChartComponent",
            "id": "component-BarChartComponent-f45fbbf87057a51da5a0e55274c8bc7d9461fe808a52c2f56d779f13935374cfe2a89a16f6f5bda82714c780ef5ef97eb2568f476af281d182d985b0117241f6",
            "file": "src/app/widgets/bar-chart/bar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bar-chart",
            "styleUrls": [
                "./bar-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bar-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexLegend,\r\n  ApexPlotOptions,\r\n  ApexStroke,\r\n  ApexTooltip,\r\n  ApexXAxis,\r\n  ApexYAxis,\r\n  ChartComponent\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from \"@angular/core\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  stroke: ApexStroke;\r\n  legend: ApexLegend;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.scss']\r\n})\r\nexport class BarChartComponent {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Net Profit\",\r\n          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        },\r\n        {\r\n          name: \"Revenue\",\r\n          data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\r\n        },\r\n        {\r\n          name: \"Free Cash Flow\",\r\n          data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\r\n        }\r\n      ],\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"55%\",\r\n          endingShape: \"rounded\"\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"]\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\",\r\n          \"Oct\"\r\n        ]\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"$ (thousands)\"\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function(val: string) {\r\n            return \"$ \" + val + \" thousands\";\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\r\n  max-width: 650px;\r\n  margin: 35px auto;\r\n}\r\n",
                    "styleUrl": "./bar-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "templateData": "<div id=\"chart\">\r\n  <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [legend]=\"chartOptions.legend\"\r\n    [fill]=\"chartOptions.fill\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n  ></apx-chart>\r\n</div>\r\n"
        },
        {
            "name": "BrushChartComponent",
            "id": "component-BrushChartComponent-c57e444ca67300d1de0c727723901735dd292525a6058d68652a8afdd5fb623f3d10877c0c74ef7e5ac8d7329790ecb8e595d2b96bbf354e8748e42ac08eb80f",
            "file": "src/app/widgets/brush-chart/brush-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-brush-chart",
            "styleUrls": [
                "./brush-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./brush-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartBarOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "chartCandleOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexPlotOptions,\r\n  ApexStroke,\r\n  ApexXAxis,\r\n  ApexYAxis,\r\n  ChartComponent\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { seriesData, seriesDataLinear } from \"./ohlc\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  plotOptions: ApexPlotOptions;\r\n  dataLabels: ApexDataLabels;\r\n  stroke: ApexStroke;\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-brush-chart',\r\n  templateUrl: './brush-chart.component.html',\r\n  styleUrls: ['./brush-chart.component.scss']\r\n})\r\nexport class BrushChartComponent  {\r\n\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartCandleOptions: Partial<ChartOptions> | any;\r\n  public chartBarOptions: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartCandleOptions = {\r\n      series: [\r\n        {\r\n          name: \"candle\",\r\n          data: seriesData\r\n        }\r\n      ],\r\n      chart: {\r\n        type: \"candlestick\",\r\n        height: 290,\r\n        id: \"candles\",\r\n        toolbar: {\r\n          autoSelected: \"pan\",\r\n          show: false\r\n        },\r\n        zoom: {\r\n          enabled: false\r\n        }\r\n      },\r\n      plotOptions: {\r\n        candlestick: {\r\n          colors: {\r\n            upward: \"#3C90EB\",\r\n            downward: \"#DF7D46\"\r\n          }\r\n        }\r\n      },\r\n      xaxis: {\r\n        type: \"datetime\"\r\n      }\r\n    };\r\n\r\n    this.chartBarOptions = {\r\n      series: [\r\n        {\r\n          name: \"volume\",\r\n          data: seriesDataLinear\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 160,\r\n        type: \"bar\",\r\n        brush: {\r\n          enabled: true,\r\n          target: \"candles\"\r\n        },\r\n        selection: {\r\n          enabled: true,\r\n          xaxis: {\r\n            min: new Date(\"20 Jan 2017\").getTime(),\r\n            max: new Date(\"10 Dec 2017\").getTime()\r\n          },\r\n          fill: {\r\n            color: \"#ccc\",\r\n            opacity: 0.4\r\n          },\r\n          stroke: {\r\n            color: \"#0D47A1\"\r\n          }\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: \"80%\",\r\n          colors: {\r\n            ranges: [\r\n              {\r\n                from: -1000,\r\n                to: 0,\r\n                color: \"#F15B46\"\r\n              },\r\n              {\r\n                from: 1,\r\n                to: 10000,\r\n                color: \"#FEB019\"\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      stroke: {\r\n        width: 0\r\n      },\r\n      xaxis: {\r\n        type: \"datetime\",\r\n        axisBorder: {\r\n          offsetX: 13\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          show: false\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart-box {\r\n  max-width: 650px;\r\n  margin: 35px auto;\r\n}\r\n#chart-candlestick,\r\n#chart-bar {\r\n  max-width: 640px;\r\n}\r\n\r\n#chart-bar {\r\n  margin-top: -30px;\r\n}\r\n",
                    "styleUrl": "./brush-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 34
            },
            "templateData": "<div class=\"chart-box\">\r\n  <div id=\"chart-candlestick\">\r\n    <apx-chart\r\n      #chartCandle\r\n      [series]=\"chartCandleOptions.series\"\r\n      [chart]=\"chartCandleOptions.chart\"\r\n      [xaxis]=\"chartCandleOptions.xaxis\"\r\n      [plotOptions]=\"chartCandleOptions.plotOptions\"\r\n    ></apx-chart>\r\n  </div>\r\n  <div id=\"chart-bar\">\r\n    <apx-chart\r\n      #chartBar\r\n      [series]=\"chartBarOptions.series\"\r\n      [chart]=\"chartBarOptions.chart\"\r\n      [xaxis]=\"chartBarOptions.xaxis\"\r\n      [yaxis]=\"chartBarOptions.yaxis\"\r\n      [dataLabels]=\"chartBarOptions.dataLabels\"\r\n      [stroke]=\"chartBarOptions.stroke\"\r\n      [plotOptions]=\"chartBarOptions.plotOptions\"\r\n    ></apx-chart>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "BubbleChartComponent",
            "id": "component-BubbleChartComponent-e71f793581e8d95a7a581e64bc607d3e8c9e34bf16b7818a8ff3c78103509d89b5caea35479b090111e175216bace603a43cc26de966730939fac2555ccfd9d1",
            "file": "src/app/widgets/bubble-chart/bubble-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bubble-chart",
            "styleUrls": [
                "./bubble-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bubble-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "generateData",
                    "args": [
                        {
                            "name": "baseval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "yrange",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "baseval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "yrange",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexTheme,\r\n  ApexTitleSubtitle,\r\n  ApexTooltip,\r\n  ApexXAxis,\r\n  ApexYAxis,\r\n  ChartComponent\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from \"@angular/core\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  title: ApexTitleSubtitle;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  dataLabels: ApexDataLabels;\r\n  theme: ApexTheme\r\n};\r\n@Component({\r\n  selector: 'app-bubble-chart',\r\n  templateUrl: './bubble-chart.component.html',\r\n  styleUrls: ['./bubble-chart.component.scss']\r\n})\r\nexport class BubbleChartComponent {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Product1\",\r\n          data: this.generateData(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\r\n            min: 10,\r\n            max: 60\r\n          })\r\n        },\r\n        {\r\n          name: \"Product2\",\r\n          data: this.generateData(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\r\n            min: 10,\r\n            max: 60\r\n          })\r\n        },\r\n        {\r\n          name: \"Product3\",\r\n          data: this.generateData(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\r\n            min: 10,\r\n            max: 60\r\n          })\r\n        },\r\n        {\r\n          name: \"Product4\",\r\n          data: this.generateData(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\r\n            min: 10,\r\n            max: 60\r\n          })\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: \"bubble\"\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      fill: {\r\n        type: \"gradient\"\r\n      },\r\n      title: {\r\n        text: \"3D Bubble Chart\"\r\n      },\r\n      xaxis: {\r\n        tickAmount: 12,\r\n        type: \"datetime\",\r\n        labels: {\r\n          rotate: 0\r\n        }\r\n      },\r\n      yaxis: {\r\n        max: 70\r\n      },\r\n      theme: {\r\n        palette: \"palette2\"\r\n      }\r\n    };\r\n  }\r\n\r\n  public generateData(baseval: number, count: number, yrange: { min: any; max: any; }) {\r\n    var i = 0;\r\n    var series = [];\r\n    while (i < count) {\r\n      //var x =Math.floor(Math.random() * (750 - 1 + 1)) + 1;;\r\n      var y =\r\n        Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n      var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\r\n\r\n      series.push([baseval, y, z]);\r\n      baseval += 86400000;\r\n      i++;\r\n    }\r\n    return series;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\r\n  max-width: 650px;\r\n  margin: 35px auto;\r\n}\r\n",
                    "styleUrl": "./bubble-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "templateData": "<!--The content below is only a placeholder and can be replaced.-->\r\n<div id=\"chart\">\r\n  <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n    [fill]=\"chartOptions.fill\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [title]=\"chartOptions.title\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [theme]=\"chartOptions.theme\"\r\n  ></apx-chart>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CarriersComponent",
            "id": "component-CarriersComponent-37d8d60c42a11967a96a3c4ce2bd6dfa109fee8afbd7308bbb373214293bd6044570127212c201ff43d6d1c17d39dc177861f482696cc8ed9ae3731d5505a360",
            "file": "src/app/pages/parties/carriers/carriers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-carriers",
            "styleUrls": [
                "./carriers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./carriers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "crLimit",
                    "defaultValue": "50000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "cust",
                    "defaultValue": "'Korean Airlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "hasUnitNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "importerForm",
                    "defaultValue": "this.fb.group({\r\n    clientId: null,\r\n    name:  [null, Validators.required],\r\n    address1: [null, Validators.required],\r\n    address2: [null, Validators.required],\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    country: [null, Validators.required],\r\n    phone1:  [null, Validators.required],\r\n    email:  [null, Validators.required],\r\n    website: [null, Validators.required],\r\n\r\n    bond: this.fb.group({\r\n      effectiveDate: [''],\r\n      bondNo: [''],\r\n      amount: [''],\r\n      suretyCode: [''],\r\n      portFiled: [''],\r\n      holderName: ['']\r\n    }),\r\n\r\n    addInfo: this.fb.array([])\r\n\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "importers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Importer[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "openAmt",
                    "defaultValue": "20000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "overDue",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "states",
                    "defaultValue": "States",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "methodsClass": [
                {
                    "name": "addaddInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Importer } from 'src/app/models/importer';\r\nimport { ImportersService } from 'src/app/services/importers.service';\r\nimport  States from '../../../../assets/data/states.json'\r\n\r\n@Component({\r\n  selector: 'app-carriers',\r\n  templateUrl: './carriers.component.html',\r\n  styleUrls: ['./carriers.component.scss']\r\n})\r\nexport class CarriersComponent {\r\n  cust: string = 'Korean Airlines'\r\n  openAmt:number = 20000\r\n  overDue:number = 1000\r\n  crLimit: number = 50000\r\n\r\n  importerForm = this.fb.group({\r\n    clientId: null,\r\n    name:  [null, Validators.required],\r\n    address1: [null, Validators.required],\r\n    address2: [null, Validators.required],\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    country: [null, Validators.required],\r\n    phone1:  [null, Validators.required],\r\n    email:  [null, Validators.required],\r\n    website: [null, Validators.required],\r\n\r\n    bond: this.fb.group({\r\n      effectiveDate: [''],\r\n      bondNo: [''],\r\n      amount: [''],\r\n      suretyCode: [''],\r\n      portFiled: [''],\r\n      holderName: ['']\r\n    }),\r\n\r\n    addInfo: this.fb.array([])\r\n\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n  importers: Importer[] =[];\r\n\r\n  constructor(private fb: UntypedFormBuilder, private importerService : ImportersService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  get additional() {\r\n    return this.importerForm.controls[\"addInfo\"] as UntypedFormArray\r\n  }\r\n\r\n  addaddInfo() {\r\n    const addtionalInfo = this.fb.group({\r\n      tel2: ['', Validators.required],\r\n      email2: [''],\r\n      tel3: [''],\r\n      email3:['']\r\n    })\r\n    this.additional.push(addtionalInfo)\r\n  }\r\n\r\n  states = States\r\n\r\n  onSubmit(): void {\r\n    this.importerService.getAll()\r\n       .subscribe(data => (this.importers =data));\r\n    console.log(this.importers);\r\n\r\n    alert('Thanks!');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1 {\r\n  text-align: center;\r\n  color:darkslateblue\r\n}\r\n\r\n.wrapper {\r\n  width: 90%;\r\n  margin: 40px\r\n}\r\n\r\n.shipping-card {\r\n  width: 400px;\r\n  height: auto\r\n}\r\n\r\nmat-card-header {\r\n  font-size: xx-large;\r\n  height: auto\r\n}\r\n\r\n",
                    "styleUrl": "./carriers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "importerService",
                        "type": "ImportersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "importerService",
                        "type": "ImportersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "additional": {
                    "name": "additional",
                    "getSignature": {
                        "name": "additional",
                        "type": "",
                        "returnType": "",
                        "line": 56
                    }
                }
            },
            "templateData": "<div class=\"container\">\r\n  <h1>Carriers</h1>\r\n  <mat-card\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-around center\"\r\n    style=\"background-color: lightblue\"\r\n  >\r\n    <mat-card-header>\r\n      <mat-card-title> {{ cust }} </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>Open Amt: {{ openAmt | currency }}</p>\r\n      <p>Overdue Amt: {{ overDue | currency }}</p>\r\n      <p>Credit Limit: {{ crLimit | currency }}</p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <br />\r\n  <form [formGroup]=\"importerForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Address Information</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Client ID</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Client ID\"\r\n                formControlName=\"clientId\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Company Name</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Company name\"\r\n                formControlName=\"name\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['name'].hasError('required')\"\r\n              >\r\n                Company name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Address Line 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Address Line 1\"\r\n                formControlName=\"address1\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['address1'].hasError('required')\"\r\n              >\r\n                Address Line 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n            <button\r\n              mat-button\r\n              type=\"button\"\r\n              (click)=\"hasUnitNumber = !hasUnitNumber\"\r\n            >\r\n              + Add C/O, Apt, Suite, Unit\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Address Line 2</mat-label>\r\n              <textarea\r\n                matInput\r\n                placeholder=\"Address 2\"\r\n                formControlName=\"address2\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>City</mat-label>\r\n              <input matInput placeholder=\"City\" formControlName=\"city\" />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['city'].hasError('required')\"\r\n              >\r\n                City is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width col-6\" appearance=\"fill\">\r\n              <mat-label>State</mat-label>\r\n              <mat-select placeholder=\"State\" formControlName=\"state\">\r\n                <mat-option\r\n                  *ngFor=\"let state of states\"\r\n                  [value]=\"state.abbreviation\"\r\n                >\r\n                  {{ state.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['state'].hasError('required')\"\r\n              >\r\n                State is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width col-6\" appearance=\"fill\">\r\n              <mat-label>Zip Code</mat-label>\r\n              <input\r\n                matInput\r\n                #postalCode\r\n                maxlength=\"5\"\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                formControlName=\"postalCode\"\r\n              />\r\n              <mat-hint align=\"end\">{{ postalCode.value.length }} / 5</mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Country</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Country Name\"\r\n                type=\"text\"\r\n                formControlName=\"country\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Phone 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Telephone #\"\r\n                type=\"number\"\r\n                formControlName=\"phone1\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Email 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"EMail\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Website Addr:</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Website\"\r\n                type=\"text\"\r\n                formControlName=\"website\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Tax & Bond Information</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <div formGroupName=\"bond\">\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Effective Date</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Effective Date\"\r\n                  formControlName=\"effectiveDate\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Bond No.</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Number\"\r\n                  formControlName=\"bondNo\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Amount of bond</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Amount\"\r\n                  formControlName=\"amount\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Surety Code</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Surety Code\"\r\n                  formControlName=\"suretyCode\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Port Filed</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Port Filed\"\r\n                  formControlName=\"portFiled\"\r\n                />\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Bond Holder Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Holder Name\"\r\n                  formControlName=\"holderName\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Other Information</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Client ID\"\r\n                formControlName=\"clientId\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Company name\"\r\n                formControlName=\"name\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['name'].hasError('required')\"\r\n              >\r\n                Company name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Address Line 1\"\r\n                formControlName=\"address1\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['address1'].hasError('required')\"\r\n              >\r\n                Address Line 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n            <button\r\n              mat-button\r\n              type=\"button\"\r\n              (click)=\"hasUnitNumber = !hasUnitNumber\"\r\n            >\r\n              + Add C/O, Apt, Suite, Unit\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <textarea\r\n                matInput\r\n                placeholder=\"Address 2\"\r\n                formControlName=\"address2\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput placeholder=\"City\" formControlName=\"city\" />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['city'].hasError('required')\"\r\n              >\r\n                City is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select placeholder=\"State\" formControlName=\"state\">\r\n                <mat-option\r\n                  *ngFor=\"let state of states\"\r\n                  [value]=\"state.abbreviation\"\r\n                >\r\n                  {{ state.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['state'].hasError('required')\"\r\n              >\r\n                State is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                #postalCode\r\n                maxlength=\"5\"\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                formControlName=\"postalCode\"\r\n              />\r\n              <mat-hint align=\"end\">{{ postalCode.value.length }} / 5</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Country Name\"\r\n                type=\"text\"\r\n                formControlName=\"country\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Telephone #\"\r\n                type=\"number\"\r\n                formControlName=\"phone1\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"EMail\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Website\"\r\n                type=\"text\"\r\n                formControlName=\"website\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </form>\r\n\r\n  <p>Form Value: {{ importerForm.value | json }}</p>\r\n\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n    Get Importers\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "CarriersComponent",
            "id": "component-CarriersComponent-6a7546a4812fa6b29158ed35c989a2079a8b2337ac24571b41d7789a84a062d5eaeae573c40f16f399b6ad746c1b7db2e326577cbb395c9a7a9a82764b0f3765-1",
            "file": "src/app/pages/tables/carriers/carriers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-carriers",
            "styleUrls": [
                "./carriers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./carriers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CarriersDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<CarriersItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { CarriersDataSource, CarriersItem } from './carriers-datasource';\r\n\r\n@Component({\r\n  selector: 'app-carriers',\r\n  templateUrl: './carriers.component.html',\r\n  styleUrls: ['./carriers.component.scss']\r\n})\r\nexport class CarriersComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<CarriersItem>;\r\n  dataSource: CarriersDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new CarriersDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./carriers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CarriersComponent-1",
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Carriers\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "Chart01Component",
            "id": "component-Chart01Component-7a3f325056bdf7dcf7d96cfa4f384ba33de6518f89c32f00957fb1df91c0cd2963c246d8375623bf57a6c70c9f2bd373c7454117c900c504be8b582898e8a987",
            "file": "src/app/extrapages/chart01/chart01.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chart01",
            "styleUrls": [
                "./chart01.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart01.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chart01',\r\n  templateUrl: './chart01.component.html',\r\n  styleUrls: ['./chart01.component.scss']\r\n})\r\n\r\nexport class Chart01Component implements OnInit {\r\n  date1 = new Date()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\r\n  max-width: 400px;\r\n  margin-bottom: 8px;\r\n}\r\n",
                    "styleUrl": "./chart01.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Bar Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Bubble Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bubble-chart></app-bubble-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Radar Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-radar-chart></app-radar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\" >\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Apex Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-apex-chart></app-apex-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Brush  Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-brush-chart></app-brush-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Donut Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-donut-chart></app-donut-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Donut Monochrome Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-donut-monochrome></app-donut-monochrome>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Polar Area Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-polar-chart></app-polar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Multiple Y Axis Chart</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-multi-y></app-multi-y>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ChartsComponent",
            "id": "component-ChartsComponent-f92301770844418d87f620d56ccb17f50023b7986312b795b5b082186f916dbbe09c3df706ca2012a6684bd55ac6a4001251899a3391d51c2b8d88ad83ea34b8",
            "file": "src/app/widgets/charts/charts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-charts",
            "styleUrls": [
                "./charts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./charts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "areaChartColors",
                    "defaultValue": "[\r\n    {\r\n      borderColor: 'rgba(255,99,132,1)',\r\n      backgroundColor: 'rgba(255,99,132,.2)'\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "areaChartData",
                    "defaultValue": "[{\r\n    label: '# of Votes',\r\n    data: [10, 19, 3, 5, 2, 3],\r\n    borderWidth: 1,\r\n    fill: true\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "areaChartLabels",
                    "defaultValue": "[\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "areaChartOptions",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "barChartColors",
                    "defaultValue": "[\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ]\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "barChartData",
                    "defaultValue": "[{\r\n    label: '# of Votes',\r\n    data: [10, 19, 3, 5, 2, 3],\r\n    borderWidth: 1,\r\n    fill: false\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "barChartLabels",
                    "defaultValue": "[\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "barChartOptions",
                    "defaultValue": "{\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "doughnutPieChartColors",
                    "defaultValue": "[\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)'\r\n      ]\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "doughnutPieChartData",
                    "defaultValue": "[\r\n    {\r\n      data: [30, 40, 30],\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "doughnutPieChartLabels",
                    "defaultValue": "[\"Pink\", \"Blue\", \"Yellow\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "doughnutPieChartOptions",
                    "defaultValue": "{\r\n    responsive: true,\r\n    animation: {\r\n      animateScale: true,\r\n      animateRotate: true\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "lineChartColors",
                    "defaultValue": "[\r\n    {\r\n      borderColor: 'rgba(255,99,132,1)'\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "lineChartData",
                    "defaultValue": "[{\r\n    label: '# of Votes',\r\n    data: [10, 19, 3, 5, 2, 3],\r\n    borderWidth: 1,\r\n    fill: false\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lineChartLabels",
                    "defaultValue": "[\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "lineChartOptions",
                    "defaultValue": "{\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "lineChartType",
                    "defaultValue": "'line'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "scatterChartColors",
                    "defaultValue": "[\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)'      ]\r\n    },\r\n    {\r\n      backgroundColor: [\r\n        'rgba(54, 162, 235, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(54, 162, 235, 1)'\r\n      ]\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "scatterChartData",
                    "defaultValue": "[\r\n    {\r\n      label: 'First Dataset',\r\n      data: [{\r\n          x: -10,\r\n          y: 0\r\n        },\r\n        {\r\n          x: 0,\r\n          y: 3\r\n        },\r\n        {\r\n          x: -25,\r\n          y: 5\r\n        },\r\n        {\r\n          x: 40,\r\n          y: 5\r\n        }\r\n      ],\r\n      borderWidth: 1\r\n    },\r\n    {\r\n      label: 'Second Dataset',\r\n      data: [{\r\n          x: 10,\r\n          y: 5\r\n        },\r\n        {\r\n          x: 20,\r\n          y: -30\r\n        },\r\n        {\r\n          x: -25,\r\n          y: 15\r\n        },\r\n        {\r\n          x: -10,\r\n          y: 5\r\n        }\r\n      ],\r\n      borderWidth: 1\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "scatterChartOptions",
                    "defaultValue": "{\r\n    scales: {\r\n      xAxes: [{\r\n        type: 'linear',\r\n        position: 'bottom'\r\n      }]\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 189
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  templateUrl: './charts.component.html',\r\n  styleUrls: ['./charts.component.scss']\r\n})\r\nexport class ChartsComponent implements OnInit {\r\n\r\n  lineChartData = [{\r\n    label: '# of Votes',\r\n    data: [10, 19, 3, 5, 2, 3],\r\n    borderWidth: 1,\r\n    fill: false\r\n  }];\r\n\r\n  lineChartLabels = [\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"];\r\n\r\n  lineChartOptions = {\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  lineChartColors = [\r\n    {\r\n      borderColor: 'rgba(255,99,132,1)'\r\n    }\r\n  ];\r\n\r\n  lineChartType = 'line';\r\n\r\n  barChartData = [{\r\n    label: '# of Votes',\r\n    data: [10, 19, 3, 5, 2, 3],\r\n    borderWidth: 1,\r\n    fill: false\r\n  }];\r\n\r\n  barChartLabels = [\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"];\r\n\r\n  barChartOptions = {\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  barChartColors = [\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ]\r\n    }\r\n  ];\r\n\r\n  areaChartData = [{\r\n    label: '# of Votes',\r\n    data: [10, 19, 3, 5, 2, 3],\r\n    borderWidth: 1,\r\n    fill: true\r\n  }];\r\n\r\n  areaChartLabels = [\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"];\r\n\r\n  areaChartOptions = {};\r\n\r\n  areaChartColors = [\r\n    {\r\n      borderColor: 'rgba(255,99,132,1)',\r\n      backgroundColor: 'rgba(255,99,132,.2)'\r\n    }\r\n  ];\r\n\r\n\r\n  doughnutPieChartData = [\r\n    {\r\n      data: [30, 40, 30],\r\n    }\r\n  ];\r\n\r\n  doughnutPieChartLabels = [\"Pink\", \"Blue\", \"Yellow\"];\r\n\r\n  doughnutPieChartOptions = {\r\n    responsive: true,\r\n    animation: {\r\n      animateScale: true,\r\n      animateRotate: true\r\n    }\r\n  };\r\n\r\n  doughnutPieChartColors = [\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)'\r\n      ]\r\n    }\r\n  ];\r\n\r\n\r\n  scatterChartData = [\r\n    {\r\n      label: 'First Dataset',\r\n      data: [{\r\n          x: -10,\r\n          y: 0\r\n        },\r\n        {\r\n          x: 0,\r\n          y: 3\r\n        },\r\n        {\r\n          x: -25,\r\n          y: 5\r\n        },\r\n        {\r\n          x: 40,\r\n          y: 5\r\n        }\r\n      ],\r\n      borderWidth: 1\r\n    },\r\n    {\r\n      label: 'Second Dataset',\r\n      data: [{\r\n          x: 10,\r\n          y: 5\r\n        },\r\n        {\r\n          x: 20,\r\n          y: -30\r\n        },\r\n        {\r\n          x: -25,\r\n          y: 15\r\n        },\r\n        {\r\n          x: -10,\r\n          y: 5\r\n        }\r\n      ],\r\n      borderWidth: 1\r\n    }\r\n  ];\r\n\r\n  scatterChartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        type: 'linear',\r\n        position: 'bottom'\r\n      }]\r\n    }\r\n  };\r\n\r\n  scatterChartColors = [\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)'      ]\r\n    },\r\n    {\r\n      backgroundColor: [\r\n        'rgba(54, 162, 235, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(54, 162, 235, 1)'\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./charts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 214
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"page-header\">\r\n  <h3 class=\"page-title\">\r\n    ChartJs\r\n  </h3>\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Charts</a></li>\r\n      <li class=\"breadcrumb-item active\" aria-current=\"page\">ChartJs</li>\r\n    </ol>\r\n  </nav>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-lg-6 grid-margin stretch-card\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Line chart</h4>\r\n        <canvas baseChart \r\n         [datasets]=\"lineChartData\"\r\n         [labels]=\"lineChartLabels\"\r\n         [options]=\"lineChartOptions\" >\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-6 grid-margin stretch-card\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Bar chart</h4>\r\n        <canvas baseChart  [datasets]=\"barChartData\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\" ></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-lg-6 grid-margin stretch-card\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Area chart</h4>\r\n        <canvas baseChart \r\n          [datasets]=\"areaChartData\" \r\n          [labels]=\"areaChartLabels\" \r\n          [options]=\"areaChartOptions\" ></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-6 grid-margin stretch-card\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Doughnut chart</h4>\r\n        <canvas baseChart  [datasets]=\"doughnutPieChartData\" [labels]=\"doughnutPieChartLabels\" [options]=\"doughnutPieChartOptions\" ></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-lg-6 grid-margin grid-margin-lg-0 stretch-card\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Pie chart</h4>\r\n        <canvas baseChart  [datasets]=\"doughnutPieChartData\" [labels]=\"doughnutPieChartLabels\" [options]=\"doughnutPieChartOptions\" ></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-6 grid-margin grid-margin-lg-0 stretch-card\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Scatter chart</h4>\r\n        <canvas baseChart  [datasets]=\"scatterChartData\" [options]=\"scatterChartOptions\" ></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ClientsComponent",
            "id": "component-ClientsComponent-487648226f0f9df9f83e9f1ebd2d0f14cf2312ff4660d0483bfcfcf82a88a77d5474f156a27b774912bf71a8493393d10a519ca0e45e1a3c85a3e00e4dda62ef",
            "file": "src/app/pages/parties/clients/clients.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-clients",
            "styleUrls": [
                "./clients.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./clients.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "crLimit",
                    "defaultValue": "50000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "cust",
                    "defaultValue": "'Pointe International'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hasUnitNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "importerForm",
                    "defaultValue": "this.fb.group({\r\n    clientId: null,\r\n    name:  [null, Validators.required],\r\n    address1: [null, Validators.required],\r\n    address2: [null, Validators.required],\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    country: [null, Validators.required],\r\n    phone1:  [null, Validators.required],\r\n    email:  [null, Validators.required],\r\n    website: [null, Validators.required],\r\n\r\n    bond: this.fb.group({\r\n      effectiveDate: [''],\r\n      bondNo: [''],\r\n      amount: [''],\r\n      suretyCode: [''],\r\n      portFiled: [''],\r\n      holderName: ['']\r\n    }),\r\n\r\n    addInfo: this.fb.array([])\r\n\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "importers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Importer[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "openAmt",
                    "defaultValue": "20000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "overDue",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "states",
                    "defaultValue": "States",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                }
            ],
            "methodsClass": [
                {
                    "name": "addaddInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Importer } from 'src/app/models/importer';\r\nimport { ImportersService } from 'src/app/services/importers.service';\r\nimport  States from '../../../../assets/data/states.json'\r\n\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.scss']\r\n})\r\n\r\n\r\nexport class ClientsComponent implements OnInit {\r\n  cust: string = 'Pointe International'\r\n  openAmt:number = 20000\r\n  overDue:number = 1000\r\n  crLimit: number = 50000\r\n\r\n  importerForm = this.fb.group({\r\n    clientId: null,\r\n    name:  [null, Validators.required],\r\n    address1: [null, Validators.required],\r\n    address2: [null, Validators.required],\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    country: [null, Validators.required],\r\n    phone1:  [null, Validators.required],\r\n    email:  [null, Validators.required],\r\n    website: [null, Validators.required],\r\n\r\n    bond: this.fb.group({\r\n      effectiveDate: [''],\r\n      bondNo: [''],\r\n      amount: [''],\r\n      suretyCode: [''],\r\n      portFiled: [''],\r\n      holderName: ['']\r\n    }),\r\n\r\n    addInfo: this.fb.array([])\r\n\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n  importers: Importer[] =[];\r\n\r\n  constructor(private fb: UntypedFormBuilder, private importerService : ImportersService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  get additional() {\r\n    return this.importerForm.controls[\"addInfo\"] as UntypedFormArray\r\n  }\r\n\r\n  addaddInfo() {\r\n    const addtionalInfo = this.fb.group({\r\n      tel2: ['', Validators.required],\r\n      email2: [''],\r\n      tel3: [''],\r\n      email3:['']\r\n    })\r\n    this.additional.push(addtionalInfo)\r\n  }\r\n\r\n  states = States\r\n\r\n  onSubmit(): void {\r\n    this.importerService.getAll()\r\n       .subscribe(data => (this.importers= data));\r\n    console.log(this.importers);\r\n\r\n    alert(this.importers[5].clientId);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1 {\r\n  text-align: center;\r\n  color:darkslateblue\r\n}\r\n\r\n.wrapper {\r\n  width: 90%;\r\n  margin: 40px\r\n}\r\n\r\n.shipping-card {\r\n  width: 400px;\r\n  height: auto\r\n}\r\n\r\nmat-card-header {\r\n  font-size: xx-large;\r\n  height: auto\r\n}\r\n\r\n",
                    "styleUrl": "./clients.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "importerService",
                        "type": "ImportersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "importerService",
                        "type": "ImportersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "additional": {
                    "name": "additional",
                    "getSignature": {
                        "name": "additional",
                        "type": "",
                        "returnType": "",
                        "line": 58
                    }
                }
            },
            "templateData": "<div class=\"container\">\r\n  <h1>Clients</h1>\r\n  <mat-card\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-around center\"\r\n    style=\"background-color: lightblue\"\r\n  >\r\n    <mat-card-header>\r\n      <mat-card-title> {{ cust }} </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>Open Amt: {{ openAmt | currency }}</p>\r\n      <p>Overdue Amt: {{ overDue | currency }}</p>\r\n      <p>Credit Limit: {{ crLimit | currency }}</p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <br />\r\n  <form [formGroup]=\"importerForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Address Information</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Client ID</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Client ID\"\r\n                formControlName=\"clientId\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Company Name</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Company name\"\r\n                formControlName=\"name\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['name'].hasError('required')\"\r\n              >\r\n                Company name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Address Line 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Address Line 1\"\r\n                formControlName=\"address1\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['address1'].hasError('required')\"\r\n              >\r\n                Address Line 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n            <button\r\n              mat-button\r\n              type=\"button\"\r\n              (click)=\"hasUnitNumber = !hasUnitNumber\"\r\n            >\r\n              + Add C/O, Apt, Suite, Unit\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Address Line 2</mat-label>\r\n              <textarea\r\n                matInput\r\n                placeholder=\"Address 2\"\r\n                formControlName=\"address2\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>City</mat-label>\r\n              <input matInput placeholder=\"City\" formControlName=\"city\" />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['city'].hasError('required')\"\r\n              >\r\n                City is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width col-6\" appearance=\"fill\">\r\n              <mat-label>State</mat-label>\r\n              <mat-select placeholder=\"State\" formControlName=\"state\">\r\n                <mat-option\r\n                  *ngFor=\"let state of states\"\r\n                  [value]=\"state.abbreviation\"\r\n                >\r\n                  {{ state.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['state'].hasError('required')\"\r\n              >\r\n                State is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width col-6\" appearance=\"fill\">\r\n              <mat-label>Zip Code</mat-label>\r\n              <input\r\n                matInput\r\n                #postalCode\r\n                maxlength=\"5\"\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                formControlName=\"postalCode\"\r\n              />\r\n              <mat-hint align=\"end\">{{ postalCode.value.length }} / 5</mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Country</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Country Name\"\r\n                type=\"text\"\r\n                formControlName=\"country\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Phone 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Telephone #\"\r\n                type=\"number\"\r\n                formControlName=\"phone1\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Email 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"EMail\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Website Addr:</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Website\"\r\n                type=\"text\"\r\n                formControlName=\"website\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Tax & Bond Information</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <div formGroupName=\"bond\">\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Effective Date</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Effective Date\"\r\n                  formControlName=\"effectiveDate\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Bond No.</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Number\"\r\n                  formControlName=\"bondNo\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Amount of bond</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Amount\"\r\n                  formControlName=\"amount\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Surety Code</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Surety Code\"\r\n                  formControlName=\"suretyCode\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Port Filed</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Port Filed\"\r\n                  formControlName=\"portFiled\"\r\n                />\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Bond Holder Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Holder Name\"\r\n                  formControlName=\"holderName\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Other Information</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Client ID\"\r\n                formControlName=\"clientId\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Company name\"\r\n                formControlName=\"name\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['name'].hasError('required')\"\r\n              >\r\n                Company name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Address Line 1\"\r\n                formControlName=\"address1\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['address1'].hasError('required')\"\r\n              >\r\n                Address Line 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n            <button\r\n              mat-button\r\n              type=\"button\"\r\n              (click)=\"hasUnitNumber = !hasUnitNumber\"\r\n            >\r\n              + Add C/O, Apt, Suite, Unit\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <textarea\r\n                matInput\r\n                placeholder=\"Address 2\"\r\n                formControlName=\"address2\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput placeholder=\"City\" formControlName=\"city\" />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['city'].hasError('required')\"\r\n              >\r\n                City is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select placeholder=\"State\" formControlName=\"state\">\r\n                <mat-option\r\n                  *ngFor=\"let state of states\"\r\n                  [value]=\"state.abbreviation\"\r\n                >\r\n                  {{ state.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['state'].hasError('required')\"\r\n              >\r\n                State is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                #postalCode\r\n                maxlength=\"5\"\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                formControlName=\"postalCode\"\r\n              />\r\n              <mat-hint align=\"end\">{{ postalCode.value.length }} / 5</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Country Name\"\r\n                type=\"text\"\r\n                formControlName=\"country\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Telephone #\"\r\n                type=\"number\"\r\n                formControlName=\"phone1\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"EMail\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Website\"\r\n                type=\"text\"\r\n                formControlName=\"website\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </form>\r\n\r\n  <p>Form Value: {{ importerForm.value | json }}</p>\r\n\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n    Get Importers\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "CmsqComponent",
            "id": "component-CmsqComponent-a530b985de62884ae4701eee000e32326402503394d47ee2a755353adf53debeaa4de17e4d0d9d1c4fc4e73fca06c5b957834b70b073d0f76febf0e902f07c10",
            "file": "src/app/pages/cmsq/cmsq.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmsq",
            "styleUrls": [
                "./cmsq.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cmsq.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<PeriodicElement>(ELEMENT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['select', 'position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<PeriodicElement>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe label for the checkbox on the passed row",
                    "description": "<p>The label for the checkbox on the passed row</p>\n",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
                },
                {
                    "name": "masterToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n@Component({\r\n  selector: 'app-cmsq',\r\n  templateUrl: './cmsq.component.html',\r\n  styleUrls: ['./cmsq.component.scss']\r\n})\r\nexport class CmsqComponent {\r\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: PeriodicElement): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  width: 50%;\r\n  height: 200px;\r\n  margin: 10px 10px 10px 10px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n  min-height: 900px;\r\n}\r\n",
                    "styleUrl": "./cmsq.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(209, 209, 63);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Cargo Manifest Status Query\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"CMSQ Queries\">\r\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"select\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <mat-checkbox\r\n              (change)=\"$event ? masterToggle() : null\"\r\n              [checked]=\"selection.hasValue() && isAllSelected()\"\r\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n              [aria-label]=\"checkboxLabel()\"\r\n            >\r\n            </mat-checkbox>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let row\">\r\n            <mat-checkbox\r\n              (click)=\"$event.stopPropagation()\"\r\n              (change)=\"$event ? selection.toggle(row) : null\"\r\n              [checked]=\"selection.isSelected(row)\"\r\n              [aria-label]=\"checkboxLabel(row)\"\r\n            >\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef>No.</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"weight\">\r\n          <th mat-header-cell *matHeaderCellDef>Weight</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"symbol\">\r\n          <th mat-header-cell *matHeaderCellDef>Symbol</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr\r\n          mat-row\r\n          *matRowDef=\"let row; columns: displayedColumns\"\r\n          (click)=\"selection.toggle(row)\"\r\n        ></tr>\r\n      </table>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"History of Queries\">\r\n      <app-grid01></app-grid01>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Third\">\r\n      <app-grid01></app-grid01>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "ComingsoonComponent",
            "id": "component-ComingsoonComponent-03ddb4f82e70d1222b82acbbd270d259242f1785ffe08633214ce623eae3c50d86f60de9226a46e435585b3868044d06abffbb3beb87d28ab9421d243a2830fe",
            "file": "src/app/extrapages/comingsoon/comingsoon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-comingsoon",
            "styleUrls": [
                "./comingsoon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./comingsoon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "days",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "diff",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "minutes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "seconds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "trialEndsAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getDays",
                    "args": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHours",
                    "args": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMinutes",
                    "args": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSeconds",
                    "args": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "t",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { interval } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-comingsoon',\r\n  templateUrl: './comingsoon.component.html',\r\n  styleUrls: ['./comingsoon.component.scss']\r\n})\r\nexport class ComingsoonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  private diff!: number;\r\n  days!: number;\r\n  hours!: number;\r\n  minutes!: number;\r\n  seconds!: number;\r\n  private trialEndsAt!: string;\r\n\r\n  ngOnInit(): void {\r\n    this.trialEndsAt =\"2021-12-31\";\r\n\r\n    interval(1000).pipe(\r\n      map((x) => {\r\n        this.diff = Date.parse(this.trialEndsAt) - Date.parse(new Date().toString());\r\n      })).subscribe((x) => {\r\n        this.days = this.getDays(this.diff);\r\n        this.hours = this.getHours(this.diff);\r\n        this.minutes = this.getMinutes(this.diff);\r\n        this.seconds = this.getSeconds(this.diff);\r\n      });\r\n  }\r\n\r\n  getDays(t: number) {\r\n    return Math.floor(t / (1000 * 60 * 60 * 24));\r\n  }\r\n\r\n  getHours(t: number) {\r\n    return Math.floor((t / (1000 * 60 * 60)) % 24);\r\n  }\r\n\r\n  getMinutes(t: number) {\r\n    return Math.floor((t / 1000 / 60) % 60);\r\n  }\r\n\r\n  getSeconds(t: number) {\r\n    return Math.floor((t / 1000) % 60);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./comingsoon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home-btn d-none d-sm-block\">\r\n  <a routerLink=\"/\" class=\"text-white\"><i class=\"fas fa-home h2\"></i></a>\r\n</div>\r\n\r\n<div class=\"my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n              <div class=\"text-center\">\r\n                  <a routerLink=\"/\" class=\"d-block auth-logo\">\r\n                      <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"20\" class=\"auth-logo-dark mx-auto\">\r\n                      <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"20\" class=\"auth-logo-light mx-auto\">\r\n                  </a>\r\n                  <div class=\"row justify-content-center mt-5\">\r\n                      <div class=\"col-sm-4\">\r\n                          <div class=\"maintenance-img\">\r\n                              <img src=\"assets/images/YellowStone01.jpg\" alt=\"\" class=\"img-fluid mx-auto d-block\">\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <h4 class=\"mt-5\">Let's get started with ANA Link</h4>\r\n                  <p class=\"text-muted\">It will be as simple as Occidental in fact it will be Occidental.</p>\r\n\r\n                  <div class=\"row justify-content-center mt-5\">\r\n                      <div class=\"col-md-8\">\r\n                          <div inputDate=\"December 31, 2021\" class=\"counter-number ico-countdown\">\r\n                              <div class=\"coming-box\">{{days}}<span>Days</span>\r\n                              </div>\r\n                              <div class=\"coming-box\">{{hours}}<span>Hours</span>\r\n                              </div>\r\n                              <div class=\"coming-box\">{{minutes}}<span>Minutes</span>\r\n                              </div>\r\n                              <div class=\"coming-box\">{{seconds}}<span>Seconds</span>\r\n                              </div>\r\n                          </div>\r\n                      </div> <!-- end col-->\r\n                  </div> <!-- end row-->\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CountryComponent",
            "id": "component-CountryComponent-872b7b9bf2ff1a261967d8c5c03190fabd309e4c7cd81559e5789ffab5e700260c034eb42938ca5a54f8a39a6bef9201ffe6cc9bb707226e6bb68763900290a5",
            "file": "src/app/pages/tables/country/country.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-country",
            "styleUrls": [
                "./country.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./country.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CountryDataSource",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name', 'flag', 'area', 'population']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 20,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<Country>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { Country, CountryDataSource } from './country-datasource';\r\n\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  templateUrl: './country.component.html',\r\n  styleUrls: ['./country.component.scss']\r\n})\r\nexport class CountryComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<Country>;\r\n  dataSource: CountryDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name', 'flag', 'area', 'population'];\r\n\r\n  constructor() {\r\n    this.dataSource = new CountryDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./country.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Country Tables\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- flag Column -->\r\n    <ng-container matColumnDef=\"flag\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Flag</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.flag }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"area\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Area</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.area }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"population\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Population</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.population }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "CurrencyComponent",
            "id": "component-CurrencyComponent-3117d9a1b94fd364db10ed1baba53866df9f224be1dd174e0bac73f16323cccb64564e69b087b13274eeea0abd9e8589b44240a7f480f7e0c5ec8247066b7350",
            "file": "src/app/pages/tables/currency/currency.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-currency",
            "styleUrls": [
                "./currency.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./currency.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrencyDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<CurrencyItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { CurrencyDataSource, CurrencyItem } from './currency-datasource';\r\n\r\n@Component({\r\n  selector: 'app-currency',\r\n  templateUrl: './currency.component.html',\r\n  styleUrls: ['./currency.component.scss']\r\n})\r\nexport class CurrencyComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<CurrencyItem>;\r\n  dataSource: CurrencyDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new CurrencyDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./currency.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Currency Exchange Rates\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "CustomsBrokerageComponent",
            "id": "component-CustomsBrokerageComponent-9a14626c7a0e9961dfe6deb4010dea4939fd17c421a12b920fa2956ecf129d8abfc70d79ada621f99caae79f00fac36abebcdd6dfdf20ce51bb76a3256c5ae8a",
            "file": "src/app/pages/customs-brokerage/customs-brokerage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-customs-brokerage",
            "styleUrls": [
                "./customs-brokerage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customs-brokerage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customs-brokerage',\r\n  templateUrl: './customs-brokerage.component.html',\r\n  styleUrls: ['./customs-brokerage.component.scss']\r\n})\r\nexport class CustomsBrokerageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  max-width: 600px;\r\n  max-height: auto;\r\n  margin: 10px 10px 10px 10px;\r\n}\r\n\r\nmat-card-header {\r\n  font-size: 20px;\r\n  font-family: \"Times New Roman\", serif;\r\n}\r\n\r\nmat-tab {\r\n  font-size: 20px;\r\n  color: plum;\r\n}\r\n\r\nbody {\r\n  background: url(../../../assets/images/Antelope02.jpg) no-repeat center fixed;\r\n  background-size: cover;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./customs-brokerage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(225, 227, 235);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Customs Brokerage\r\n  </h1>\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Entry Grid\">\r\n      <app-entry-grid></app-entry-grid>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Dashboard\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n        <mat-card fxFlex=\"30\" class=\"example-card\">\r\n          <mat-card-header> List of Entries </mat-card-header>\r\n          <mat-card-content>\r\n            <app-entries-summary></app-entries-summary>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <mat-card fxFlex=\"30\" class=\"example-card\">\r\n          <mat-card-header> Entries Under Exam </mat-card-header>\r\n          <mat-card-content>\r\n            <app-entries-summary></app-entries-summary>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <mat-card fxFlex=\"30\" class=\"example-card\">\r\n          <mat-card-header> Entries with PGA Hold </mat-card-header>\r\n          <mat-card-content>\r\n            <app-entries-summary></app-entries-summary>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n        <mat-card fxFlex=\"30\" class=\"example-card\">\r\n          <mat-card-header> Entries Past Arrival Dates </mat-card-header>\r\n          <mat-card-content>\r\n            <app-entries-summary></app-entries-summary>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <mat-card fxFlex=\"30\" class=\"example-card\">\r\n          <mat-card-header> Duty Payments Due </mat-card-header>\r\n          <mat-card-content>\r\n            <app-entries-summary></app-entries-summary>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <mat-card fxFlex=\"30\" class=\"example-card\">\r\n          <mat-card-header> Liquidated Entries </mat-card-header>\r\n          <mat-card-content>\r\n            <app-entries-summary></app-entries-summary>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"New Entry\">\r\n      <app-entry-detail></app-entry-detail>\r\n    </mat-tab>\r\n    <mat-tab label=\"Charts\">\r\n      <app-charts></app-charts>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "Dashboard02Component",
            "id": "component-Dashboard02Component-878a594a92177c4dcfd955fed47d08f714652880ded25fc7f060eb5ca750cb0c6c557ff257a1a21ff4cb84c1a41d1d7692bb5de2c460900d80f4158bff7be4c3",
            "file": "src/app/dashboard02/dashboard02.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard02",
            "styleUrls": [
                "./dashboard02.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard02.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cards",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Based on the screen size, switch from standard to one column per row</p>\n",
                    "line": 12,
                    "rawdescription": "\nBased on the screen size, switch from standard to one column per row"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard02',\n  templateUrl: './dashboard02.component.html',\n  styleUrls: ['./dashboard02.component.scss']\n})\nexport class Dashboard02Component {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n",
                    "styleUrl": "./dashboard02.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-fdec836198b5ef376e3a89cccf7092fa373709e99b06f175ca951d4815f4b38255bf239336621f72ad64d1010428eb353fe0529add6cfbac73f90b7b2fbbced2",
            "file": "src/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cards",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Card 1', cols: 1, rows: 1 },\r\n          { title: 'Card 2', cols: 1, rows: 1 },\r\n          { title: 'Card 3', cols: 1, rows: 1 },\r\n          { title: 'Card 4', cols: 1, rows: 1 }\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Card 1', cols: 2, rows: 1 },\r\n        { title: 'Card 2', cols: 1, rows: 1 },\r\n        { title: 'Card 3', cols: 1, rows: 2 },\r\n        { title: 'Card 4', cols: 1, rows: 1 }\r\n      ];\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Based on the screen size, switch from standard to one column per row</p>\n",
                    "line": 12,
                    "rawdescription": "\nBased on the screen size, switch from standard to one column per row"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Card 1', cols: 1, rows: 1 },\r\n          { title: 'Card 2', cols: 1, rows: 1 },\r\n          { title: 'Card 3', cols: 1, rows: 1 },\r\n          { title: 'Card 4', cols: 1, rows: 1 }\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Card 1', cols: 2, rows: 1 },\r\n        { title: 'Card 2', cols: 1, rows: 1 },\r\n        { title: 'Card 3', cols: 1, rows: 2 },\r\n        { title: 'Card 4', cols: 1, rows: 1 }\r\n      ];\r\n    })\r\n  );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-container {\r\n  margin: 20px;\r\n}\r\n\r\n.dashboard-card {\r\n  position: absolute;\r\n  top: 15px;\r\n  left: 15px;\r\n  right: 15px;\r\n  bottom: 15px;\r\n}\r\n\r\n.more-button {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 10px;\r\n}\r\n\r\n.dashboard-card-content {\r\n  text-align: center;\r\n}\r\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid-container\">\r\n  <h1 class=\"mat-h1\">Dashboard</h1>\r\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\r\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            {{card.title}}\r\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <button mat-menu-item>Expand</button>\r\n              <button mat-menu-item>Remove</button>\r\n            </mat-menu>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div>Card Content Here</div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-7077bff6e13dd8161f4ed7be9b97388a47336fab1e7cd2368357378f6433077bf40fd804d8f57fbe6f11f6155c907e34848008b6e2584e97cff36a9da657ce03-1",
            "file": "src/app/home/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html,\r\nbody {\r\n  min-height: 100%;\r\n}\r\n\r\n.example-card {\r\n    max-width: 200px;\r\n    max-height:fit-content ;\r\n    margin: 10px 10px 10px 10px;\r\n}\r\n\r\nmat-card-header {\r\n  font-family: \"Times New Roman\", Times, serif;\r\n  font-size: 2em ;\r\n  font-weight: bolder;\r\n  margin: auto auto auto auto;\r\n}\r\n\r\nmat-card-actions {\r\n  display:block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 50%;\r\n}\r\n\r\nimg {\r\n  margin-top: 20px;\r\n}\r\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DashboardComponent-1",
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n\r\n        <mat-card fxFlex=\"25\"class='example-card'>\r\n            <mat-card-header>\r\n            Air Import\r\n            </mat-card-header>\r\n            <img mat-card-image src=\"https://cdn.pixabay.com/photo/2018/02/15/14/37/leaf-3155438__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n            <mat-card-actions>\r\n                <button mat-raised-button color=\"primary\" routerLink=\"pages/airImport\">Air Import</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n\r\n        <mat-card fxFlex=\"25\"class='example-card'>\r\n            <mat-card-header>\r\n            Air Export\r\n            </mat-card-header>\r\n            <img mat-card-image src=\"https://cdn.pixabay.com/photo/2021/04/26/20/53/ogwen-6209977__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n            <mat-card-actions>\r\n                <button mat-raised-button color=\"accent\" routerLink=\"pages/airExport\">Air Export</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n\r\n        <mat-card fxFlex=\"25\"class='example-card'>\r\n            <mat-card-header>\r\n            Ocean Import\r\n            </mat-card-header>\r\n            <img mat-card-image src=\"https://cdn.pixabay.com/photo/2021/10/09/05/33/cosmos-6693008__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n            <mat-card-actions>\r\n                <button mat-raised-button color=\"warn\" routerLink=\"pages/oceanImport\">Ocean Import</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n\r\n        <mat-card fxFlex=\"25\"class='example-card'>\r\n            <mat-card-header>\r\n            Customs Brokerage\r\n            </mat-card-header>\r\n            <img mat-card-image src=\"https://cdn.pixabay.com/photo/2022/01/11/17/04/city-6931092__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n            <mat-card-actions>\r\n                <button mat-raised-button color=\"primary\" routerLink=\"pages/customsBrokerage\">CHB</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n   \r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n            Importer Security Filing\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2022/01/16/20/38/coffee-6943139__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"accent\" routerLink=\"pages/isf\">ISF</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n            Air AMS\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2020/04/13/09/07/royal-mile-5037397__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"warn\" routerLink=\"pages/airAms\">Air AMS</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n        Truck AMS\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2022/01/16/13/25/cityscape-6942013__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"primary\" routerLink=\"pages/truckAms\">Truck AMS</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n        Ocean Export\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2021/10/02/07/40/ink-6674441__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"accent\" routerLink=\"pages/oceanExport\">Ocean Export</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    \r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n            Sea AMS\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2021/12/15/20/21/sea-6873335__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"warn\" routerLink=\"pages/seaAms\">Sea AMS</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n            Trucking\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2020/04/13/09/07/royal-mile-5037397__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"warn\" routerLink=\"pages/trucking\">Trucking</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n        Reports\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2022/01/16/13/25/cityscape-6942013__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"primary\" routerLink=\"pages/reports\">Reports</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\"class='example-card'>\r\n        <mat-card-header>\r\n        Track And Trace\r\n        </mat-card-header>\r\n        <img mat-card-image src=\"https://cdn.pixabay.com/photo/2021/10/02/07/40/ink-6674441__340.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-actions>\r\n            <button mat-raised-button color=\"accent\" routerLink=\"pages/trackAndTrace\">Track & Trace</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n    \r\n</div>\r\n"
        },
        {
            "name": "DomesticComponent",
            "id": "component-DomesticComponent-63311955d0ce7c9437e04c7ae0f5fb6e88a36486f07e5468c34814dfdf2dcc0544f15f84072fd76317094a25452d448fa06b6d2f62f330aacd0775c643f80ce9",
            "file": "src/app/pages/isf/domestic/domestic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-domestic",
            "styleUrls": [
                "./domestic.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./domestic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addressForm",
                    "defaultValue": "this.fb.group({\r\n    company: null,\r\n    firstName: [null, Validators.required],\r\n    lastName: [null, Validators.required],\r\n    address: [null, Validators.required],\r\n    address2: null,\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    shipping: ['free', Validators.required]\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "hasUnitNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "states",
                    "defaultValue": "[\r\n    {name: 'Alabama', abbreviation: 'AL'},\r\n    {name: 'Alaska', abbreviation: 'AK'},\r\n    {name: 'American Samoa', abbreviation: 'AS'},\r\n    {name: 'Arizona', abbreviation: 'AZ'},\r\n    {name: 'Arkansas', abbreviation: 'AR'},\r\n    {name: 'California', abbreviation: 'CA'},\r\n    {name: 'Colorado', abbreviation: 'CO'},\r\n    {name: 'Connecticut', abbreviation: 'CT'},\r\n    {name: 'Delaware', abbreviation: 'DE'},\r\n    {name: 'District Of Columbia', abbreviation: 'DC'},\r\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\r\n    {name: 'Florida', abbreviation: 'FL'},\r\n    {name: 'Georgia', abbreviation: 'GA'},\r\n    {name: 'Guam', abbreviation: 'GU'},\r\n    {name: 'Hawaii', abbreviation: 'HI'},\r\n    {name: 'Idaho', abbreviation: 'ID'},\r\n    {name: 'Illinois', abbreviation: 'IL'},\r\n    {name: 'Indiana', abbreviation: 'IN'},\r\n    {name: 'Iowa', abbreviation: 'IA'},\r\n    {name: 'Kansas', abbreviation: 'KS'},\r\n    {name: 'Kentucky', abbreviation: 'KY'},\r\n    {name: 'Louisiana', abbreviation: 'LA'},\r\n    {name: 'Maine', abbreviation: 'ME'},\r\n    {name: 'Marshall Islands', abbreviation: 'MH'},\r\n    {name: 'Maryland', abbreviation: 'MD'},\r\n    {name: 'Massachusetts', abbreviation: 'MA'},\r\n    {name: 'Michigan', abbreviation: 'MI'},\r\n    {name: 'Minnesota', abbreviation: 'MN'},\r\n    {name: 'Mississippi', abbreviation: 'MS'},\r\n    {name: 'Missouri', abbreviation: 'MO'},\r\n    {name: 'Montana', abbreviation: 'MT'},\r\n    {name: 'Nebraska', abbreviation: 'NE'},\r\n    {name: 'Nevada', abbreviation: 'NV'},\r\n    {name: 'New Hampshire', abbreviation: 'NH'},\r\n    {name: 'New Jersey', abbreviation: 'NJ'},\r\n    {name: 'New Mexico', abbreviation: 'NM'},\r\n    {name: 'New York', abbreviation: 'NY'},\r\n    {name: 'North Carolina', abbreviation: 'NC'},\r\n    {name: 'North Dakota', abbreviation: 'ND'},\r\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n    {name: 'Ohio', abbreviation: 'OH'},\r\n    {name: 'Oklahoma', abbreviation: 'OK'},\r\n    {name: 'Oregon', abbreviation: 'OR'},\r\n    {name: 'Palau', abbreviation: 'PW'},\r\n    {name: 'Pennsylvania', abbreviation: 'PA'},\r\n    {name: 'Puerto Rico', abbreviation: 'PR'},\r\n    {name: 'Rhode Island', abbreviation: 'RI'},\r\n    {name: 'South Carolina', abbreviation: 'SC'},\r\n    {name: 'South Dakota', abbreviation: 'SD'},\r\n    {name: 'Tennessee', abbreviation: 'TN'},\r\n    {name: 'Texas', abbreviation: 'TX'},\r\n    {name: 'Utah', abbreviation: 'UT'},\r\n    {name: 'Vermont', abbreviation: 'VT'},\r\n    {name: 'Virgin Islands', abbreviation: 'VI'},\r\n    {name: 'Virginia', abbreviation: 'VA'},\r\n    {name: 'Washington', abbreviation: 'WA'},\r\n    {name: 'West Virginia', abbreviation: 'WV'},\r\n    {name: 'Wisconsin', abbreviation: 'WI'},\r\n    {name: 'Wyoming', abbreviation: 'WY'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-domestic',\r\n  templateUrl: './domestic.component.html',\r\n  styleUrls: ['./domestic.component.scss']\r\n})\r\nexport class DomesticComponent {\r\n  addressForm = this.fb.group({\r\n    company: null,\r\n    firstName: [null, Validators.required],\r\n    lastName: [null, Validators.required],\r\n    address: [null, Validators.required],\r\n    address2: null,\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    shipping: ['free', Validators.required]\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n\r\n  states = [\r\n    {name: 'Alabama', abbreviation: 'AL'},\r\n    {name: 'Alaska', abbreviation: 'AK'},\r\n    {name: 'American Samoa', abbreviation: 'AS'},\r\n    {name: 'Arizona', abbreviation: 'AZ'},\r\n    {name: 'Arkansas', abbreviation: 'AR'},\r\n    {name: 'California', abbreviation: 'CA'},\r\n    {name: 'Colorado', abbreviation: 'CO'},\r\n    {name: 'Connecticut', abbreviation: 'CT'},\r\n    {name: 'Delaware', abbreviation: 'DE'},\r\n    {name: 'District Of Columbia', abbreviation: 'DC'},\r\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\r\n    {name: 'Florida', abbreviation: 'FL'},\r\n    {name: 'Georgia', abbreviation: 'GA'},\r\n    {name: 'Guam', abbreviation: 'GU'},\r\n    {name: 'Hawaii', abbreviation: 'HI'},\r\n    {name: 'Idaho', abbreviation: 'ID'},\r\n    {name: 'Illinois', abbreviation: 'IL'},\r\n    {name: 'Indiana', abbreviation: 'IN'},\r\n    {name: 'Iowa', abbreviation: 'IA'},\r\n    {name: 'Kansas', abbreviation: 'KS'},\r\n    {name: 'Kentucky', abbreviation: 'KY'},\r\n    {name: 'Louisiana', abbreviation: 'LA'},\r\n    {name: 'Maine', abbreviation: 'ME'},\r\n    {name: 'Marshall Islands', abbreviation: 'MH'},\r\n    {name: 'Maryland', abbreviation: 'MD'},\r\n    {name: 'Massachusetts', abbreviation: 'MA'},\r\n    {name: 'Michigan', abbreviation: 'MI'},\r\n    {name: 'Minnesota', abbreviation: 'MN'},\r\n    {name: 'Mississippi', abbreviation: 'MS'},\r\n    {name: 'Missouri', abbreviation: 'MO'},\r\n    {name: 'Montana', abbreviation: 'MT'},\r\n    {name: 'Nebraska', abbreviation: 'NE'},\r\n    {name: 'Nevada', abbreviation: 'NV'},\r\n    {name: 'New Hampshire', abbreviation: 'NH'},\r\n    {name: 'New Jersey', abbreviation: 'NJ'},\r\n    {name: 'New Mexico', abbreviation: 'NM'},\r\n    {name: 'New York', abbreviation: 'NY'},\r\n    {name: 'North Carolina', abbreviation: 'NC'},\r\n    {name: 'North Dakota', abbreviation: 'ND'},\r\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n    {name: 'Ohio', abbreviation: 'OH'},\r\n    {name: 'Oklahoma', abbreviation: 'OK'},\r\n    {name: 'Oregon', abbreviation: 'OR'},\r\n    {name: 'Palau', abbreviation: 'PW'},\r\n    {name: 'Pennsylvania', abbreviation: 'PA'},\r\n    {name: 'Puerto Rico', abbreviation: 'PR'},\r\n    {name: 'Rhode Island', abbreviation: 'RI'},\r\n    {name: 'South Carolina', abbreviation: 'SC'},\r\n    {name: 'South Dakota', abbreviation: 'SD'},\r\n    {name: 'Tennessee', abbreviation: 'TN'},\r\n    {name: 'Texas', abbreviation: 'TX'},\r\n    {name: 'Utah', abbreviation: 'UT'},\r\n    {name: 'Vermont', abbreviation: 'VT'},\r\n    {name: 'Virgin Islands', abbreviation: 'VI'},\r\n    {name: 'Virginia', abbreviation: 'VA'},\r\n    {name: 'Washington', abbreviation: 'WA'},\r\n    {name: 'West Virginia', abbreviation: 'WV'},\r\n    {name: 'Wisconsin', abbreviation: 'WI'},\r\n    {name: 'Wyoming', abbreviation: 'WY'}\r\n  ];\r\n\r\n  constructor(private fb: UntypedFormBuilder) {}\r\n\r\n  onSubmit(): void {\r\n    alert('Thanks!');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width {\r\n  width: 100%;\r\n}\r\n\r\n.shipping-card {\r\n  min-width: 120px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.mat-radio-button {\r\n  display: block;\r\n  margin: 5px 0;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.col {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.col:last-child {\r\n  margin-right: 0;\r\n}\r\n",
                    "styleUrl": "./domestic.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 86,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"shipping-card\">\r\n\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\r\n              First name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\r\n              Last name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\r\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\r\n              Address is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\r\n            + Add C/O, Apt, Suite, Unit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"City\" formControlName=\"city\">\r\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\r\n              City is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-select placeholder=\"State\" formControlName=\"state\">\r\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\r\n                {{ state.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\r\n              State is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\r\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n    </mat-card-content>\r\n    </mat-card>\r\n</form>\r\n"
        },
        {
            "name": "DonutChartComponent",
            "id": "component-DonutChartComponent-6d3276393dc62212ddb388441b2b55e7d9dd323497ab60a7a577b28a89d8788bfe65eefc1dbdbb36cb93aa2e45839dbd826669812b0aee2afbca509076625c15",
            "file": "src/app/widgets/donut-chart/donut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-donut-chart",
            "styleUrls": [
                "./donut-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./donut-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexLegend,\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexResponsive,\r\n  ApexStates,\r\n  ApexStroke,\r\n  ApexTheme,\r\n  ApexTitleSubtitle\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from '@angular/core';\r\n\r\nimport { ChartComponent } from \"ng-apexcharts\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  responsive: ApexResponsive[];\r\n  labels: any;\r\n  fill: any;\r\n  stroke: ApexStroke;\r\n  states: ApexStates;\r\n  legend: ApexLegend;\r\n  title: ApexTitleSubtitle;\r\n  theme: ApexTheme;\r\n  plotOptions: ApexPlotOptions;\r\n  dataLabels: ApexDataLabels;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-donut-chart',\r\n  templateUrl: './donut-chart.component.html',\r\n  styleUrls: ['./donut-chart.component.scss']\r\n})\r\nexport class DonutChartComponent {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [44, 55, 41, 17, 15],\r\n      chart: {\r\n        width: 380,\r\n        type: \"donut\",\r\n        dropShadow: {\r\n          enabled: true,\r\n          color: \"#111\",\r\n          top: -1,\r\n          left: 3,\r\n          blur: 3,\r\n          opacity: 0.2\r\n        }\r\n      },\r\n      stroke: {\r\n        width: 0\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                showAlways: true,\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"],\r\n      dataLabels: {\r\n        dropShadow: {\r\n          blur: 3,\r\n          opacity: 0.8\r\n        }\r\n      },\r\n      fill: {\r\n        type: \"pattern\",\r\n        opacity: 1,\r\n        pattern: {\r\n          enabled: true,\r\n          style: [\r\n            \"verticalLines\",\r\n            \"squares\",\r\n            \"horizontalLines\",\r\n            \"circles\",\r\n            \"slantedLines\"\r\n          ]\r\n        }\r\n      },\r\n      states: {\r\n        hover: {\r\n          filter: {\r\n            type: \"none\"\r\n          }\r\n        }\r\n      },\r\n      theme: {\r\n        palette: \"palette2\"\r\n      },\r\n      title: {\r\n        text: \"Favourite Movie Type\"\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: \"bottom\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\r\n  max-width: 380px;\r\n  margin: 35px auto;\r\n  padding: 0;\r\n}\r\n",
                    "styleUrl": "./donut-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 39
            },
            "templateData": "<!--The content below is only a placeholder and can be replaced.-->\r\n<div id=\"chart\">\r\n  <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [title]=\"chartOptions.title\"\r\n    [fill]=\"chartOptions.fill\"\r\n    [states]=\"chartOptions.states\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [theme]=\"chartOptions.theme\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n  ></apx-chart>\r\n</div>\r\n"
        },
        {
            "name": "DonutMonochromeComponent",
            "id": "component-DonutMonochromeComponent-5b773ec34fecbd6cee28a6f3f442fe21fd60e582d6a6e685ee040f2bb7ba6ddc6cf12a455e7654cc21451bb80eea9fc24f18bf185101d517ee1b692f155f0c7b",
            "file": "src/app/widgets/donut-monochrome/donut-monochrome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-donut-monochrome",
            "styleUrls": [
                "./donut-monochrome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./donut-monochrome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexChart,\r\n  ApexNonAxisChartSeries,\r\n  ApexResponsive,\r\n  ApexTheme,\r\n  ApexTitleSubtitle\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from \"@angular/core\";\r\n\r\nimport { ChartComponent } from \"ng-apexcharts\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  responsive: ApexResponsive[];\r\n  labels: any;\r\n  theme: ApexTheme;\r\n  title: ApexTitleSubtitle;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-donut-monochrome',\r\n  templateUrl: './donut-monochrome.component.html',\r\n  styleUrls: ['./donut-monochrome.component.scss']\r\n})\r\nexport class DonutMonochromeComponent {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [25, 15, 44, 55, 41, 17],\r\n      chart: {\r\n        width: \"100%\",\r\n        type: \"pie\"\r\n      },\r\n      labels: [\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n      ],\r\n      theme: {\r\n        monochrome: {\r\n          enabled: true\r\n        }\r\n      },\r\n      title: {\r\n        text: \"Number of leads\"\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: \"bottom\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\r\n  max-width: 380px;\r\n  margin: 35px auto;\r\n  padding: 0;\r\n}\r\n",
                    "styleUrl": "./donut-monochrome.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 28
            },
            "templateData": "<!--The content below is only a placeholder and can be replaced.-->\r\n<div id=\"chart\">\r\n  <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [title]=\"chartOptions.title\"\r\n    [theme]=\"chartOptions.theme\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n  ></apx-chart>\r\n</div>\r\n"
        },
        {
            "name": "EntriesComponent",
            "id": "component-EntriesComponent-3cee6efc65bbcb65950ce4ae98d40a144cf1808859bb643d8b45b83e27f91a28d3a945c64b5d73a7c156fe12b2b73abdc8b60f082ee99b46a87ec409e3397d75",
            "file": "src/app/pages/track-and-trace/entries/entries.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-entries",
            "styleUrls": [
                "./entries.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entries.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-entries',\r\n  templateUrl: './entries.component.html',\r\n  styleUrls: ['./entries.component.scss']\r\n})\r\nexport class EntriesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n  background-color: #E4F0FF;\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr 200px;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-gap: 12px;\r\n  grid-template-areas:\r\n  \"header header header\"\r\n  \"nav content side\"\r\n  \"footer footer footer\";\r\n  height: 80vh;\r\n}\r\nheader {\r\n  color: white;\r\n  font-size: 14px;\r\n  grid-area: header;\r\n  text-align: center;\r\n  background-color: #FA7D44;\r\n}\r\n\r\nnav {\r\n  grid-area: nav;\r\n  margin-left: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\napp-privacy-policy,\r\nmain {\r\n  grid-area: content;\r\n  background-color: #F4CE46;\r\n  padding: 25px;\r\n}\r\n\r\naside {\r\n  grid-area: side;\r\n  margin-right: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background-color:#2BB961;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 25px 0;\r\n}\r\nul li {\r\n  color: white;\r\n}\r\nul li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n}\r\n",
                    "styleUrl": "./entries.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"container\">\r\n  <header>\r\n    <!-- Header -->\r\n    <h1 style=\"font-weight: bolder; text-align: center;\">Customs Entries</h1>\r\n  </header>\r\n  <nav>\r\n    <!-- Nav Bar -->\r\n    <ul>\r\n      <li><a routerLink=\"/home\">Home</a></li>\r\n      <li><a routerLink=\"/privacy-policy\">Privacy Policy</a></li>\r\n  </ul>\r\n  </nav>\r\n  <main>\r\n    <!-- Main Content -->\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Iste voluptates sint excepturi non nam ratione velit libero eius,\r\n      asperiores, temporibus vero beatae perspiciatis maxime iure repellat\r\n      quam ut ducimus maiores!\r\n    </p>\r\n  </main>\r\n  <aside>\r\n    <!-- Sidebar -->\r\n    <h3>Sidebar</h3>\r\n  </aside>\r\n  <footer>\r\n    <!-- Footer -->\r\n    <span>\r\n      Copyright 2019-2020\r\n  </span>\r\n  </footer>\r\n</div>\r\n"
        },
        {
            "name": "EntriesSummaryComponent",
            "id": "component-EntriesSummaryComponent-f84ffa22f21728b2193451219db2d8c1aa5b6b210dd1ca47f0c5f7feccd02bf1f8c28cdb94a046e413578cca2e4033ca63a1087d49c2cee5013ec325b373bfe1",
            "file": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DecimalPipe",
                    "type": "pipe"
                }
            ],
            "selector": "app-entries-summary",
            "styleUrls": [
                "./entries-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entries-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countries$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Country[]>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "filter",
                    "defaultValue": "new UntypedFormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, PipeTransform } from '@angular/core';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface Country {\r\n  name: string;\r\n  flag: string;\r\n  area: number;\r\n  population: number;\r\n}\r\n\r\nconst COUNTRIES: Country[] = [\r\n  {\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n];\r\n\r\nfunction search(text: string, pipe: PipeTransform): Country[] {\r\n  return COUNTRIES.filter(country => {\r\n    const term = text.toLowerCase();\r\n    return country.name.toLowerCase().includes(term)\r\n        || pipe.transform(country.area).includes(term)\r\n        || pipe.transform(country.population).includes(term);\r\n  });\r\n}\r\n@Component({\r\n  selector: 'app-entries-summary',\r\n  templateUrl: './entries-summary.component.html',\r\n  styleUrls: ['./entries-summary.component.scss'],\r\n  providers: [DecimalPipe]\r\n})\r\nexport class EntriesSummaryComponent {\r\n  \r\n  countries$: Observable<Country[]>;\r\n  filter = new UntypedFormControl('');\r\n\r\n  constructor(pipe: DecimalPipe) {\r\n    this.countries$ = this.filter.valueChanges.pipe(\r\n      startWith(''),\r\n      map(text => search(text!, pipe))\r\n    );\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./entries-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pipe",
                        "type": "DecimalPipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "pipe",
                        "type": "DecimalPipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p>You can do filter table data, in this case with observables and our <code>NgbHighlight</code> component used in Typeahead</p>\r\n\r\n<form>\r\n  <div class=\"form-group form-inline\">\r\n      Full text search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n  </div>\r\n</form>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Country</th>\r\n    <th scope=\"col\">Area</th>\r\n    <th scope=\"col\">Population</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let country of countries$ | async; index as i\">\r\n    <th scope=\"row\">{{ i + 1 }}</th>\r\n    <td>\r\n      <img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/' + country.flag\" class=\"mr-2\" style=\"width: 20px\">\r\n      <ngb-highlight [result]=\"country.name\" ></ngb-highlight>\r\n    </td>\r\n    <td><ngb-highlight [result]=\"country.area | number\" ></ngb-highlight></td>\r\n    <td><ngb-highlight [result]=\"country.population | number\" ></ngb-highlight></td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n"
        },
        {
            "name": "EntryComponent",
            "id": "component-EntryComponent-afcd4b0cc5209ada2958deef04293e4a755e82dcb1019e2ceb5deda882f66e0fb417be2193a8d50e91dd515ff8a495bc5632db4b8d13fd1fb702dc53916a510d",
            "file": "src/app/pages/reports/entry/entry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-entry",
            "styleUrls": [
                "./entry.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-entry',\r\n  templateUrl: './entry.component.html',\r\n  styleUrls: ['./entry.component.scss']\r\n})\r\nexport class EntryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./entry.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>entry works!</p>\r\n"
        },
        {
            "name": "EntryDetailComponent",
            "id": "component-EntryDetailComponent-1d4f29fef03b72f1940433a5aac5ab7ff80a02eb5c620d168de879d2272bd43ef9cbfc1d484c9414de46d8419d1573d8fb9b12421046f302135e2c5e974e3a6b",
            "file": "src/app/pages/customs-brokerage/entry-detail/entry-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-entry-detail",
            "styleUrls": [
                "./entry-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-entry-detail',\r\n  templateUrl: './entry-detail.component.html',\r\n  styleUrls: ['./entry-detail.component.scss']\r\n})\r\nexport class EntryDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav ol li {\r\n  font-size: 20px;\r\n}\r\n",
                    "styleUrl": "./entry-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"page-header\">\r\n    <h3 class=\"page-title\">Entry Detail</h3>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\">\r\n          <a href=\"javascript:;\">Shipment Details</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item\">\r\n          <a href=\"javascript:;\">Invoice Details</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item\">\r\n          <a href=\"javascript:;\">HTSUSA Details</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">PGA Details</a></li>\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">ABI History</a></li>\r\n      </ol>\r\n    </nav>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Default form</h4>\r\n          <p class=\"card-description\">Basic form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputUsername1\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputUsername1\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputConfirmPassword1\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputConfirmPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Dates</h4>\r\n          <p class=\"card-description\">Important Dates</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputUsername2\" class=\"col-sm-3 col-form-label\"\r\n                >Loading</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputUsername2\"\r\n                  placeholder=\"Loading Date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputEmail2\" class=\"col-sm-3 col-form-label\"\r\n                >Export</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  placeholder=\"Export Date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputMobile\" class=\"col-sm-3 col-form-label\"\r\n                >Import</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputMobile\"\r\n                  placeholder=\"Import Date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputPassword2\" class=\"col-sm-3 col-form-label\"\r\n                >Arrival</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword2\"\r\n                  placeholder=\"Arrival Date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label\r\n                for=\"exampleInputConfirmPassword2\"\r\n                class=\"col-sm-3 col-form-label\"\r\n                >Entry</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputConfirmPassword2\"\r\n                  placeholder=\"Entry Date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Form</h4>\r\n          <p class=\"card-description\">Horizontal form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputUsername2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputUsername2\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputEmail2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputMobile\" class=\"col-sm-3 col-form-label\"\r\n                >Mobile</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputMobile\"\r\n                  placeholder=\"Mobile number\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputPassword2\" class=\"col-sm-3 col-form-label\"\r\n                >Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label\r\n                for=\"exampleInputConfirmPassword2\"\r\n                class=\"col-sm-3 col-form-label\"\r\n                >Re Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputConfirmPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic form elements</h4>\r\n          <p class=\"card-description\">Basic form elements</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputName1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputName1\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail3\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail3\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword4\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword4\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleSelectGender\">Gender</label>\r\n              <select class=\"form-control\" id=\"exampleSelectGender\">\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>File upload</label>\r\n              <input type=\"file\" name=\"img[]\" class=\"file-upload-default\" />\r\n              <div class=\"input-group col-xs-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control file-upload-info\"\r\n                  disabled\r\n                  placeholder=\"Upload Image\"\r\n                />\r\n                <span class=\"input-group-append\">\r\n                  <button\r\n                    class=\"file-upload-browse btn btn-gradient-primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputCity1\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputCity1\"\r\n                placeholder=\"Location\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleTextarea1\">Textarea</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"exampleTextarea1\"\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Input size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label>Large input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Default input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Small input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-sm\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Select size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Large select</label>\r\n            <select\r\n              class=\"form-control form-control-lg\"\r\n              id=\"exampleFormControlSelect1\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect2\">Default select</label>\r\n            <select class=\"form-control\" id=\"exampleFormControlSelect2\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect3\">Small select</label>\r\n            <select\r\n              class=\"form-control form-control-sm\"\r\n              id=\"exampleFormControlSelect3\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic input groups</h4>\r\n          <p class=\"card-description\">Basic bootstrap input groups</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">@</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text bg-primary text-white\">$</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">.00</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">$</span>\r\n              </div>\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">0.00</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Recipient's username\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-gradient-primary\" type=\"button\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div ngbDropdown class=\"input-group-prepend\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-sm btn-outline-primary\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </button>\r\n                <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                  <a class=\"dropdown-item\">Action</a>\r\n                  <a class=\"dropdown-item\">Another action</a>\r\n                  <a class=\"dropdown-item\">Something else here</a>\r\n                  <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\">Separated link</a>\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Text input with dropdown button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Find in facebook\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-facebook\" type=\"button\">\r\n                  <i class=\"mdi mdi-facebook\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Checkbox Controls</h4>\r\n          <p class=\"card-description\">\r\n            Checkbox and radio controls (default appearance is in primary color)\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Disabled checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios1\"\r\n                        value=\"\"\r\n                      />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios2\"\r\n                        value=\"option2\"\r\n                        checked\r\n                      />\r\n                      Selected\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios2\"\r\n                        id=\"optionsRadios3\"\r\n                        value=\"option3\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadio2\"\r\n                        id=\"optionsRadios4\"\r\n                        value=\"option4\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Selected and disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-description\">\r\n            Add class <code>.form-check-{{ \"{\" }}color{{ \"}\" }}</code> for\r\n            checkbox and radio controls in theme colors\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio1\"\r\n                        id=\"ExampleRadio1\"\r\n                        checked\r\n                      />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio2\"\r\n                        id=\"ExampleRadio2\"\r\n                        checked\r\n                      />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio3\"\r\n                        id=\"ExampleRadio3\"\r\n                        checked\r\n                      />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio4\"\r\n                        id=\"ExampleRadio4\"\r\n                        checked\r\n                      />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio5\"\r\n                        id=\"ExampleRadio5\"\r\n                        checked\r\n                      />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Inline forms</h4>\r\n          <p class=\"card-description\">\r\n            Use the <code>.form-inline</code> class to display a series of\r\n            labels, form controls, and buttons on a single horizontal row\r\n          </p>\r\n          <form class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control mb-2 mr-sm-2\"\r\n              id=\"inlineFormInputName2\"\r\n              placeholder=\"Jane Doe\"\r\n            />\r\n\r\n            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\"\r\n              >Username</label\r\n            >\r\n            <div class=\"input-group mb-2 mr-sm-2\">\r\n              <div class=\"input-group-prepend\">\r\n                <div class=\"input-group-text\">@</div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inlineFormInputGroupUsername2\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check mx-sm-2\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mb-2\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 grid-margin\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Two column</h4>\r\n          <form class=\"form-sample\">\r\n            <p class=\"card-description\">Personal info</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">First Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Last Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Gender</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Male</option>\r\n                      <option>Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input class=\"form-control\" placeholder=\"dd/mm/yyyy\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Category</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Category1</option>\r\n                      <option>Category2</option>\r\n                      <option>Category3</option>\r\n                      <option>Category4</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Membership</label>\r\n                  <div class=\"col-sm-4\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios1\"\r\n                          value=\"\"\r\n                          checked\r\n                        />\r\n                        Free\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-5\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios2\"\r\n                          value=\"option2\"\r\n                        />\r\n                        Professional\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-description\">Address</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 1</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">State</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 2</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Postcode</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">City</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Country</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>America</option>\r\n                      <option>Italy</option>\r\n                      <option>Russia</option>\r\n                      <option>Britain</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EntryGridComponent",
            "id": "component-EntryGridComponent-008c86d88b452c1a23bc0d6715296908cda53cbd2d3fba7bac061569aa309d665f395610b1438984cdeb8161eb5b3c42987b23daf843c03c1b8d858e1e622c8c",
            "file": "src/app/pages/customs-brokerage/entry-grid/entry-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-entry-grid",
            "styleUrls": [
                "./entry-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    {\r\n      field: 'refNo',\r\n      sortable: true,\r\n      filter: true,\r\n      resizable: true,\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    {\r\n      field: 'entryType',\r\n      sortable: true,\r\n      filter: true,\r\n      resizable: true,\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true },\r\n    { field: 'description', sortable: true, filter: true, resizable: true },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true },\r\n    { field: 'user', sortable: true, filter: true, resizable: true },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true },\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "gridApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridApi",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "rowData",
                    "defaultValue": "Entry",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "entrySummary[]",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "rowSelection",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"single\" | \"multiple\"",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "onGridReady",
                    "args": [
                        {
                            "name": "params",
                            "type": "GridReadyEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "GridReadyEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRowClicked",
                    "args": [
                        {
                            "name": "params",
                            "type": "RowClickedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "RowClickedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  ColDef,\r\n  GridApi,\r\n  RowClickedEvent,\r\n  GridReadyEvent,\r\n} from 'ag-grid-community';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { entrySummary } from '../../interfaces/entrySummary';\r\nimport Entry from '../../../../assets/data/entrySummary.json';\r\n\r\n@Component({\r\n  selector: 'app-entry-grid',\r\n  templateUrl: './entry-grid.component.html',\r\n  styleUrls: ['./entry-grid.component.scss'],\r\n})\r\nexport class EntryGridComponent {\r\n  rowSelection: 'single' | 'multiple' = 'single';\r\n  private gridApi!: GridApi;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      field: 'refNo',\r\n      sortable: true,\r\n      filter: true,\r\n      resizable: true,\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    {\r\n      field: 'entryType',\r\n      sortable: true,\r\n      filter: true,\r\n      resizable: true,\r\n      checkboxSelection: true,\r\n    },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true },\r\n    { field: 'description', sortable: true, filter: true, resizable: true },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true },\r\n    { field: 'user', sortable: true, filter: true, resizable: true },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true },\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true },\r\n  ];\r\n\r\n  rowData: entrySummary[] = Entry;\r\n\r\n  onRowClicked(params: RowClickedEvent) {\r\n    let refNo = params.node.data.refNo;\r\n    // window.alert(refNo)     // Picks up correct ref #\r\n    this.router.navigate([refNo], { relativeTo: this.route }); //Navigate to correct Url with selected Ref#\r\n    // window.alert(refNo)   // refNo is correct here\r\n    // const isf = Isf.find(i => i.reffNo === refNo)\r\n    // console.log(isf);\r\n  }\r\n\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.gridApi = params.api;\r\n    this.router.navigate([this.rowData[1].refNo], { relativeTo: this.route });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./entry-grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ag-grid-angular\r\n  style=\"width: auto; height: 700px\"\r\n  class=\"ag-theme-alpine\"\r\n  [rowData]=\"rowData\"\r\n  [columnDefs]=\"columnDefs\"\r\n  [pagination]=\"true\"\r\n  [paginationPageSize]=\"20\"\r\n  [animateRows]=\"true\"\r\n  [sideBar]=\"true\"\r\n  [colWidth]=\"120\"\r\n  [rowSelection]=\"rowSelection\"\r\n  (rowClicked)=\"onRowClicked($event)\"\r\n>\r\n</ag-grid-angular>\r\n"
        },
        {
            "name": "ExamComponent",
            "id": "component-ExamComponent-0de2fffc03c5c709077c8f7933fbff5e946c65fe46090adcdb0dd3ad0ea5071c8227681e8691df93969c890fd323fe6d5b0889c4b8a57e215ce5ea53cd28c2db",
            "file": "src/app/pages/reports/exam/exam.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-exam",
            "styleUrls": [
                "./exam.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./exam.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-exam',\r\n  templateUrl: './exam.component.html',\r\n  styleUrls: ['./exam.component.scss']\r\n})\r\nexport class ExamComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./exam.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>exam works!</p>\r\n"
        },
        {
            "name": "ExportSummaryComponent",
            "id": "component-ExportSummaryComponent-3ae662f3c0593740121f163ffe4478a1e2c6b7221e8a5436bfbdcbe0ffc9a6469b9bbdab75300a0666baf4ac0a81732b3adc427042d5050b99d1b173c854c4ee",
            "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-export-summary",
            "styleUrls": [
                "./export-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./export-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<UserData>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name', 'progress', 'fruit', 'Price', 'In Stock', 'In Store At']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n];\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n\r\n@Component({\r\n  selector: 'app-export-summary',\r\n  templateUrl: './export-summary.component.html',\r\n  styleUrls: ['./export-summary.component.scss']\r\n})\r\nexport class ExportSummaryComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit', 'Price', 'In Stock', 'In Store At'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n    ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n    '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n    width: 100%;\r\n  }\r\n\r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n\r\n  td, th {\r\n    width: auto;\r\n  }\r\n",
                    "styleUrl": "./export-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 62
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Progress Column -->\r\n      <ng-container matColumnDef=\"progress\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Fruit Column -->\r\n      <ng-container matColumnDef=\"fruit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n      <!-- In Store At -->\r\n      <ng-container matColumnDef=\"In Store At\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Store At </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n\r\n      <!-- Price Column -->\r\n      <ng-container matColumnDef=\"Price\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n\r\n      <!-- In Strock Column -->\r\n      <ng-container matColumnDef=\"In Stock\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> In Stock </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Add New</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='primary'>Add New</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>From Template</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='accent'>From Template</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"33\">\r\n        <mat-card-title>Consolidator</mat-card-title>\r\n        <mat-card-content></mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color='warn'>Other Parties</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <br>\r\n</div>\r\n"
        },
        {
            "name": "ExtrapagesComponent",
            "id": "component-ExtrapagesComponent-bf306a13316cfa1c247393a25ada295c78623a5d4666fbfe5ea69ace6c818600ea3888b6a7e52ba316aa9ac8de1a0e554382c4b7e4c4f8236a5eb6323ec6cc2c",
            "file": "src/app/extrapages/extrapages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-extrapages",
            "styleUrls": [
                "./extrapages.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./extrapages.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-extrapages',\r\n  templateUrl: './extrapages.component.html',\r\n  styleUrls: ['./extrapages.component.scss']\r\n})\r\nexport class ExtrapagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./extrapages.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: rgb(0, 183, 255); text-align: center;\">Extra Pages</h1>\r\n<div class=\"container g-2 bg-warning\">\r\n  <div class=\"row\">\r\n    <div class=\"input-group mb-3 col\">\r\n        <label class=\"input-group-text\" for=\"inputGroupSelect01\">Options</label>\r\n        <select class=\"form-select\" id=\"inputGroupSelect01\">\r\n          <option selected>Choose...</option>\r\n          <option value=\"1\">One</option>\r\n          <option value=\"2\">Two</option>\r\n          <option value=\"3\">Three</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"input-group mb-3 col\">\r\n        <select class=\"form-select\" id=\"inputGroupSelect02\">\r\n          <option selected>Choose...</option>\r\n          <option value=\"1\">One</option>\r\n          <option value=\"2\">Two</option>\r\n          <option value=\"3\">Three</option>\r\n        </select>\r\n        <label class=\"input-group-text\" for=\"inputGroupSelect02\">Options</label>\r\n      </div>\r\n\r\n      <div class=\"input-group mb-3 col\">\r\n        <button class=\"btn btn-outline-secondary\" type=\"button\">Button</button>\r\n        <select class=\"form-select\" id=\"inputGroupSelect03\" aria-label=\"Example select with button addon\">\r\n          <option selected>Choose...</option>\r\n          <option value=\"1\">One</option>\r\n          <option value=\"2\">Two</option>\r\n          <option value=\"3\">Three</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"input-group\">\r\n      <select class=\"form-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\">\r\n        <option selected>Choose...</option>\r\n        <option value=\"1\">One</option>\r\n        <option value=\"2\">Two</option>\r\n        <option value=\"3\">Three</option>\r\n      </select>\r\n      <button class=\"btn btn-outline-secondary\" type=\"button\">Button</button>\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\r\n      <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\r\n    </div>\r\n\r\n    <label for=\"basic-url\" class=\"form-label\">Your vanity URL</label>\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\r\n      <input type=\"text\" class=\"form-control\" id=\"basic-url\" aria-describedby=\"basic-addon3\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\">$</span>\r\n      <input type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\">\r\n      <span class=\"input-group-text\">.00</span>\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\">\r\n      <span class=\"input-group-text\">@</span>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Server\" aria-label=\"Server\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\">With textarea</span>\r\n      <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\r\n      <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\r\n    </div>\r\n\r\n    <label for=\"basic-url\" class=\"form-label\">Your vanity URL</label>\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\r\n      <input type=\"text\" class=\"form-control\" id=\"basic-url\" aria-describedby=\"basic-addon3\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\">$</span>\r\n      <input type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\">\r\n      <span class=\"input-group-text\">.00</span>\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\">\r\n      <span class=\"input-group-text\">@</span>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Server\" aria-label=\"Server\">\r\n    </div>\r\n\r\n    <div class=\"input-group\">\r\n      <span class=\"input-group-text\">With textarea</span>\r\n      <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\r\n    </div>\r\n\r\n    <label for=\"basic-url\" class=\"form-label\">Your vanity URL</label>\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\r\n      <input type=\"text\" class=\"form-control\" id=\"basic-url\" aria-describedby=\"basic-addon3\">\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <span class=\"input-group-text\">$</span>\r\n      <input type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\">\r\n      <span class=\"input-group-text\">.00</span>\r\n    </div>\r\n\r\n    <div class=\"input-group mb-3\">\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\">\r\n      <span class=\"input-group-text\">@</span>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Server\" aria-label=\"Server\">\r\n    </div>\r\n\r\n    <div class=\"input-group\">\r\n      <span class=\"input-group-text\">With textarea</span>\r\n      <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\r\n    </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "FclComponent",
            "id": "component-FclComponent-f7c55709b2fb978a2ea8dc0017381e0b1896cdbd00a6a4783bbeeb9f1e119b16614895162f5edaa2ea23a7bbf9decd08dcffd9c4c0876e9d0832536d9f156057",
            "file": "src/app/pages/trucking/fcl/fcl.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fcl",
            "styleUrls": [
                "./fcl.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fcl.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fcl',\r\n  templateUrl: './fcl.component.html',\r\n  styleUrls: ['./fcl.component.scss']\r\n})\r\nexport class FclComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {  display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-template-rows: repeat(6, 1fr);\r\n    gap: 10px 10px;\r\n    grid-auto-flow: row;\r\n    grid-template-areas:\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . \"\r\n      \". . . . \"\r\n      \". . . . .\"\r\n      \". . . . . .\"\r\n      \". . . . . .\"\r\n      \". . . . . .\"\r\n      \". . . . . .\";\r\n  }\r\n  ",
                    "styleUrl": "./fcl.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center;\">FCL Trucking Schedule</h1>\r\n\r\n\r\n<div class=\"container\">\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n    <select for=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select><br> <br>\r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br><br>\r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n    </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  <div>\r\n    <label for=\"coName\">Company:</label><br>\r\n    <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n    <label for=\"delDate\">Delivery Date:</label><br>\r\n    <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n    <label for=\"delTime\">AM or PM ?</label>\r\n\r\n    <select name=\"delTime\" id=\"delTime\">\r\n      <option value=\"am\">AM</option>\r\n      <option value=\"pm\">PM</option>\r\n    </select> <br> <br> \r\n  </div>\r\n  \r\n</div>"
        },
        {
            "name": "FdaProductComponent",
            "id": "component-FdaProductComponent-214a3538f13a4393031e587f70836c65e52a1315fdf3f803da05c20906c42e9fe225daec4cf8de8d5ae1ca889313c072bd161da7121943f32cfd715130ca82bd",
            "file": "src/app/pages/tables/fda-product/fda-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fda-product",
            "styleUrls": [
                "./fda-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fda-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FdaProductDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<FdaProductItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { FdaProductDataSource, FdaProductItem } from './fda-product-datasource';\r\n\r\n@Component({\r\n  selector: 'app-fda-product',\r\n  templateUrl: './fda-product.component.html',\r\n  styleUrls: ['./fda-product.component.scss']\r\n})\r\nexport class FdaProductComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<FdaProductItem>;\r\n  dataSource: FdaProductDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new FdaProductDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./fda-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  FDA Product Codes\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "FirmsComponent",
            "id": "component-FirmsComponent-859705d9b39aeca758fc376e93e6663a4f12b115544ae128ba7a6848b448dd474c017bed9deb3ac6a4131bead230de1393253f13c92440e03a8f6cb0a73dd673",
            "file": "src/app/pages/tables/firms/firms.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-firms",
            "styleUrls": [
                "./firms.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./firms.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirmsDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<FirmsItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { FirmsDataSource, FirmsItem } from './firms-datasource';\r\n\r\n@Component({\r\n  selector: 'app-firms',\r\n  templateUrl: './firms.component.html',\r\n  styleUrls: ['./firms.component.scss']\r\n})\r\nexport class FirmsComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<FirmsItem>;\r\n  dataSource: FirmsDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new FirmsDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./firms.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Facility Codes\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-2cea057ef2dda45ddd849e4449252fc80e2a29691d4b64615a8a94be98a1505ce546c1fa46e24988de5cfad819c3a6c44b388da0d3c23d6d4692e6c42eb7440d",
            "file": "src/app/layouts/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  // set the current year\r\n  year: number = new Date().getFullYear();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer class=\"footer\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-6\">\r\n              {{year}} © ANA Link, Ltd.\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n              <div class=\"text-sm-end d-none d-sm-block\">\r\n                  Design & Developed by ANA Link, Ltd.\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</footer>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-6c290628b84a1abe1bdfb878464bc2b706fefca858c51621202ab34ffddd486d19c7b04ea6e2c5d71d1bb1dffcb9099de70b3a4f92b6e5c31ebf472a97986eb5-1",
            "file": "src/app/account/auth/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "footer {\r\n  text-align: center;\r\n  font-size: 2em;\r\n  color: darkcyan;\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FooterComponent-1",
            "templateData": ""
        },
        {
            "name": "ForeignComponent",
            "id": "component-ForeignComponent-6a40c73d9dc3710cd54091675b2ff3b9e2ee1dba31825879026998e5620772702d6cdf0c9f7e4645630f9ff912d536d9cd86d51a767ce580b6d8820b4a658201",
            "file": "src/app/pages/isf/foreign/foreign.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-foreign",
            "styleUrls": [
                "./foreign.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./foreign.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addressForm",
                    "defaultValue": "this.fb.group({\r\n    company: null,\r\n    firstName: [null, Validators.required],\r\n    lastName: [null, Validators.required],\r\n    address: [null, Validators.required],\r\n    address2: null,\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    shipping: ['free', Validators.required]\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "hasUnitNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "states",
                    "defaultValue": "[\r\n    {name: 'Alabama', abbreviation: 'AL'},\r\n    {name: 'Alaska', abbreviation: 'AK'},\r\n    {name: 'American Samoa', abbreviation: 'AS'},\r\n    {name: 'Arizona', abbreviation: 'AZ'},\r\n    {name: 'Arkansas', abbreviation: 'AR'},\r\n    {name: 'California', abbreviation: 'CA'},\r\n    {name: 'Colorado', abbreviation: 'CO'},\r\n    {name: 'Connecticut', abbreviation: 'CT'},\r\n    {name: 'Delaware', abbreviation: 'DE'},\r\n    {name: 'District Of Columbia', abbreviation: 'DC'},\r\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\r\n    {name: 'Florida', abbreviation: 'FL'},\r\n    {name: 'Georgia', abbreviation: 'GA'},\r\n    {name: 'Guam', abbreviation: 'GU'},\r\n    {name: 'Hawaii', abbreviation: 'HI'},\r\n    {name: 'Idaho', abbreviation: 'ID'},\r\n    {name: 'Illinois', abbreviation: 'IL'},\r\n    {name: 'Indiana', abbreviation: 'IN'},\r\n    {name: 'Iowa', abbreviation: 'IA'},\r\n    {name: 'Kansas', abbreviation: 'KS'},\r\n    {name: 'Kentucky', abbreviation: 'KY'},\r\n    {name: 'Louisiana', abbreviation: 'LA'},\r\n    {name: 'Maine', abbreviation: 'ME'},\r\n    {name: 'Marshall Islands', abbreviation: 'MH'},\r\n    {name: 'Maryland', abbreviation: 'MD'},\r\n    {name: 'Massachusetts', abbreviation: 'MA'},\r\n    {name: 'Michigan', abbreviation: 'MI'},\r\n    {name: 'Minnesota', abbreviation: 'MN'},\r\n    {name: 'Mississippi', abbreviation: 'MS'},\r\n    {name: 'Missouri', abbreviation: 'MO'},\r\n    {name: 'Montana', abbreviation: 'MT'},\r\n    {name: 'Nebraska', abbreviation: 'NE'},\r\n    {name: 'Nevada', abbreviation: 'NV'},\r\n    {name: 'New Hampshire', abbreviation: 'NH'},\r\n    {name: 'New Jersey', abbreviation: 'NJ'},\r\n    {name: 'New Mexico', abbreviation: 'NM'},\r\n    {name: 'New York', abbreviation: 'NY'},\r\n    {name: 'North Carolina', abbreviation: 'NC'},\r\n    {name: 'North Dakota', abbreviation: 'ND'},\r\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n    {name: 'Ohio', abbreviation: 'OH'},\r\n    {name: 'Oklahoma', abbreviation: 'OK'},\r\n    {name: 'Oregon', abbreviation: 'OR'},\r\n    {name: 'Palau', abbreviation: 'PW'},\r\n    {name: 'Pennsylvania', abbreviation: 'PA'},\r\n    {name: 'Puerto Rico', abbreviation: 'PR'},\r\n    {name: 'Rhode Island', abbreviation: 'RI'},\r\n    {name: 'South Carolina', abbreviation: 'SC'},\r\n    {name: 'South Dakota', abbreviation: 'SD'},\r\n    {name: 'Tennessee', abbreviation: 'TN'},\r\n    {name: 'Texas', abbreviation: 'TX'},\r\n    {name: 'Utah', abbreviation: 'UT'},\r\n    {name: 'Vermont', abbreviation: 'VT'},\r\n    {name: 'Virgin Islands', abbreviation: 'VI'},\r\n    {name: 'Virginia', abbreviation: 'VA'},\r\n    {name: 'Washington', abbreviation: 'WA'},\r\n    {name: 'West Virginia', abbreviation: 'WV'},\r\n    {name: 'Wisconsin', abbreviation: 'WI'},\r\n    {name: 'Wyoming', abbreviation: 'WY'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-foreign',\r\n  templateUrl: './foreign.component.html',\r\n  styleUrls: ['./foreign.component.scss']\r\n})\r\nexport class ForeignComponent {\r\n  addressForm = this.fb.group({\r\n    company: null,\r\n    firstName: [null, Validators.required],\r\n    lastName: [null, Validators.required],\r\n    address: [null, Validators.required],\r\n    address2: null,\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    shipping: ['free', Validators.required]\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n\r\n  states = [\r\n    {name: 'Alabama', abbreviation: 'AL'},\r\n    {name: 'Alaska', abbreviation: 'AK'},\r\n    {name: 'American Samoa', abbreviation: 'AS'},\r\n    {name: 'Arizona', abbreviation: 'AZ'},\r\n    {name: 'Arkansas', abbreviation: 'AR'},\r\n    {name: 'California', abbreviation: 'CA'},\r\n    {name: 'Colorado', abbreviation: 'CO'},\r\n    {name: 'Connecticut', abbreviation: 'CT'},\r\n    {name: 'Delaware', abbreviation: 'DE'},\r\n    {name: 'District Of Columbia', abbreviation: 'DC'},\r\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\r\n    {name: 'Florida', abbreviation: 'FL'},\r\n    {name: 'Georgia', abbreviation: 'GA'},\r\n    {name: 'Guam', abbreviation: 'GU'},\r\n    {name: 'Hawaii', abbreviation: 'HI'},\r\n    {name: 'Idaho', abbreviation: 'ID'},\r\n    {name: 'Illinois', abbreviation: 'IL'},\r\n    {name: 'Indiana', abbreviation: 'IN'},\r\n    {name: 'Iowa', abbreviation: 'IA'},\r\n    {name: 'Kansas', abbreviation: 'KS'},\r\n    {name: 'Kentucky', abbreviation: 'KY'},\r\n    {name: 'Louisiana', abbreviation: 'LA'},\r\n    {name: 'Maine', abbreviation: 'ME'},\r\n    {name: 'Marshall Islands', abbreviation: 'MH'},\r\n    {name: 'Maryland', abbreviation: 'MD'},\r\n    {name: 'Massachusetts', abbreviation: 'MA'},\r\n    {name: 'Michigan', abbreviation: 'MI'},\r\n    {name: 'Minnesota', abbreviation: 'MN'},\r\n    {name: 'Mississippi', abbreviation: 'MS'},\r\n    {name: 'Missouri', abbreviation: 'MO'},\r\n    {name: 'Montana', abbreviation: 'MT'},\r\n    {name: 'Nebraska', abbreviation: 'NE'},\r\n    {name: 'Nevada', abbreviation: 'NV'},\r\n    {name: 'New Hampshire', abbreviation: 'NH'},\r\n    {name: 'New Jersey', abbreviation: 'NJ'},\r\n    {name: 'New Mexico', abbreviation: 'NM'},\r\n    {name: 'New York', abbreviation: 'NY'},\r\n    {name: 'North Carolina', abbreviation: 'NC'},\r\n    {name: 'North Dakota', abbreviation: 'ND'},\r\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n    {name: 'Ohio', abbreviation: 'OH'},\r\n    {name: 'Oklahoma', abbreviation: 'OK'},\r\n    {name: 'Oregon', abbreviation: 'OR'},\r\n    {name: 'Palau', abbreviation: 'PW'},\r\n    {name: 'Pennsylvania', abbreviation: 'PA'},\r\n    {name: 'Puerto Rico', abbreviation: 'PR'},\r\n    {name: 'Rhode Island', abbreviation: 'RI'},\r\n    {name: 'South Carolina', abbreviation: 'SC'},\r\n    {name: 'South Dakota', abbreviation: 'SD'},\r\n    {name: 'Tennessee', abbreviation: 'TN'},\r\n    {name: 'Texas', abbreviation: 'TX'},\r\n    {name: 'Utah', abbreviation: 'UT'},\r\n    {name: 'Vermont', abbreviation: 'VT'},\r\n    {name: 'Virgin Islands', abbreviation: 'VI'},\r\n    {name: 'Virginia', abbreviation: 'VA'},\r\n    {name: 'Washington', abbreviation: 'WA'},\r\n    {name: 'West Virginia', abbreviation: 'WV'},\r\n    {name: 'Wisconsin', abbreviation: 'WI'},\r\n    {name: 'Wyoming', abbreviation: 'WY'}\r\n  ];\r\n\r\n  constructor(private fb: UntypedFormBuilder) {}\r\n\r\n  onSubmit(): void {\r\n    alert('Thanks!');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width {\r\n  width: 100%;\r\n}\r\n\r\n.shipping-card {\r\n  min-width: 120px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.mat-radio-button {\r\n  display: block;\r\n  margin: 5px 0;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.col {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.col:last-child {\r\n  margin-right: 0;\r\n}\r\n",
                    "styleUrl": "./foreign.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 86,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"shipping-card\">\r\n\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\r\n              First name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\r\n              Last name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\r\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\r\n              Address is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\r\n            + Add C/O, Apt, Suite, Unit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"City\" formControlName=\"city\">\r\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\r\n              City is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-select placeholder=\"State\" formControlName=\"state\">\r\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\r\n                {{ state.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\r\n              State is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\r\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      </mat-card-content>\r\n\r\n  </mat-card>\r\n</form>\r\n"
        },
        {
            "name": "ForeignPortsComponent",
            "id": "component-ForeignPortsComponent-4019d611b846e00d726c34bad4c45e42d2ae75a47aef4ed20130d20c5a5ba79c3323cccfb9ba6717de2f0525da4a9307b3f1b8c48b1a40ec8d036c0402f5bf2f",
            "file": "src/app/pages/tables/foreign-ports/foreign-ports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-foreign-ports",
            "styleUrls": [
                "./foreign-ports.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./foreign-ports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ForeignPortsDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<ForeignPortsItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ForeignPortsDataSource, ForeignPortsItem } from './foreign-ports-datasource';\r\n\r\n@Component({\r\n  selector: 'app-foreign-ports',\r\n  templateUrl: './foreign-ports.component.html',\r\n  styleUrls: ['./foreign-ports.component.scss']\r\n})\r\nexport class ForeignPortsComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<ForeignPortsItem>;\r\n  dataSource: ForeignPortsDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new ForeignPortsDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./foreign-ports.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Foreign Ports Codes\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "Grid01Component",
            "id": "component-Grid01Component-aca29346d152d75161bc5f801c0e08908cbcd01054ab226ea4a444a80257abf723e293cff535f9b0cd2c7f6964f16b18ee7691fbc4282352d54322d436d50247",
            "file": "src/app/pages/cmsq/grid01/grid01.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grid01",
            "styleUrls": [
                "./grid01.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./grid01.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tiles",
                    "defaultValue": "[\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Six', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Seven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Eight', cols: 2, rows: 1, color: '#DDBDF1'},\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tile[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grid01',\r\n  templateUrl: './grid01.component.html',\r\n  styleUrls: ['./grid01.component.scss']\r\n})\r\nexport class Grid01Component {\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Six', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Seven', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Eight', cols: 2, rows: 1, color: '#DDBDF1'},\r\n\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./grid01.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n    <mat-grid-tile\r\n        *ngFor=\"let tile of tiles\"\r\n        [colspan]=\"tile.cols\"\r\n        [rowspan]=\"tile.rows\"\r\n        [style.background]=\"tile.color\">\r\n      {{tile.text}}\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n  "
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-eea6c50dcbfc212e1786538d8cb80a5e55362195e00e08af82537e32024c41f55df79dbe90d1974c8b5fda7d6665a68686369ff324c3377050a5f94d821155cd-1",
            "file": "src/app/home/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "toggleSidebarForMe",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output() toggleSidebarForMe: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n    toggleSidebar() {\r\n      this.toggleSidebarForMe.emit();\r\n    }\r\n  }\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-toolbar {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\nul {\r\n  li {\r\n    list-style: none;\r\n  }\r\n}\r\nbutton {\r\n  outline: none;\r\n  border: 0;\r\n  background: transparent;\r\n}\r\n.user {\r\n  font-size: 14px;\r\n}\r\nmat-toolbar {\r\n  background: #f7f7f7;\r\n}\r\n.user-image {\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  &-icon {\r\n    height: 18px;\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n::ng-deep {\r\n  .mat-menu-content {\r\n    width: 160px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<mat-toolbar>\r\n  <mat-toolbar-row class=\"justify-content-between\">\r\n    <button mat-icon-button (click)=\"toggleSidebar()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <div class=\"row mr-2 ml-auto\">\r\n      <ul class=\"row m-0 align-items-center\">\r\n        <li>\r\n          <button\r\n            mat-button\r\n            [matMenuTriggerFor]=\"menu\"\r\n            class=\"user mt-2 d-flex align-items-center\"\r\n          >\r\n            <img src=\"./assets/user.jpg\" alt=\"\" class=\"user-image mr-1 p-2\" />\r\n\r\n            User Name\r\n            <mat-icon class=\"user-image-icon ml-1\"\r\n              >keyboard_arrow_down</mat-icon\r\n            >\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item>\r\n              <mat-icon>exit_to_app</mat-icon>\r\n              Logout\r\n            </button>\r\n          </mat-menu>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-66aab1b24c0d8854e1f82fba28138804b4b85580f247fc5033dd7baf800ad39c3ed2312637667e7b335e90cb144fdbd62673e2ce34182a65e43f7cecfaa900cc-2",
            "file": "src/app/account/auth/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "HeaderComponent-2",
            "templateData": "<mat-toolbar>\r\n  <span class=\"material-icons\">face</span>\r\n  <h1>ANA Link, Ltd</h1>\r\n</mat-toolbar>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-bbc067f0d75a358ea3326a56db6ef5cddfbb2c048f1860a753c61823c4b01bd5cf3920bc43b5c517e7f732feb82be6d3eeeb6256dda5e22f518883a56b93b638",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sideBarOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "'admin-panel-layout'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "sideBarToggler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nimport { of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent {\r\n  title = 'admin-panel-layout';\r\n  sideBarOpen = true;\r\n\r\n  sideBarToggler() {\r\n    this.sideBarOpen = !this.sideBarOpen;\r\n  }\r\n}\r\n\r\nconst squareOdd = of(1, 2, 3, 4, 5, 6).pipe(\r\n  filter(n => n % 2 !== 0), map((n) => n * n)\r\n);\r\n\r\nsquareOdd.subscribe((x) => console.log(x));\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\nmat-drawer {\r\n  width: 260px;\r\n  background: #0f172a;\r\n}\r\nmat-drawer-container {\r\n\r\n  height: 100%;\r\n}\r\n\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h1>Home Component</h1>\r\n<mat-drawer-container>\r\n\r\n  <mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\r\n  </mat-drawer>\r\n  <mat-drawer-content>\r\n    <app-header (toggleSidebarForMe)=\"sideBarToggler()\"></app-header>\r\n    <router-outlet></router-outlet>\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n"
        },
        {
            "name": "HorizontalComponent",
            "id": "component-HorizontalComponent-c6851cfacf944ec62d7943a3f893ab4a0b8478bed0e256b8810901601d2a632ed07ea0d9b3d511ce34d040ee08430f0d3ae86254820d6f8a101a75f7082b0829",
            "file": "src/app/layouts/horizontal/horizontal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-horizontal",
            "styleUrls": [
                "./horizontal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./horizontal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-horizontal',\r\n  templateUrl: './horizontal.component.html',\r\n  styleUrls: ['./horizontal.component.scss']\r\n})\r\nexport class HorizontalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./horizontal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>horizontal works!</p>\r\n"
        },
        {
            "name": "HorizontaltopbarComponent",
            "id": "component-HorizontaltopbarComponent-5d2d809a8b422c704798a76ae54bea906472dcf49b849f79a684d4a4d33c0e1d029db13387c69ab15f1a2d43e8f78dddb7a6a4e17bc1318982e9d6ee475ef5c2",
            "file": "src/app/layouts/horizontaltopbar/horizontaltopbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-horizontaltopbar",
            "styleUrls": [
                "./horizontaltopbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./horizontaltopbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-horizontaltopbar',\r\n  templateUrl: './horizontaltopbar.component.html',\r\n  styleUrls: ['./horizontaltopbar.component.scss']\r\n})\r\nexport class HorizontaltopbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-spacer {\r\n  flex: 1 1 auto;\r\n}\r\n",
                    "styleUrl": "./horizontaltopbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\r\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <span>My App</span>\r\n  <span class=\"example-spacer\"></span>\r\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\r\n    <mat-icon>share</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n"
        },
        {
            "name": "HtsComponent",
            "id": "component-HtsComponent-19be5ca791a0948d9e16bb05059b0d5d892745da805dd394a4494809e88cb1a11d3736d112edb30df56936a1d242b4ecb20686bb2d0c7279e311b23b918706ea",
            "file": "src/app/pages/isf/hts/hts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hts",
            "styleUrls": [
                "./hts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./hts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hts',\r\n  templateUrl: './hts.component.html',\r\n  styleUrls: ['./hts.component.scss']\r\n})\r\nexport class HtsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.example-full-width {\r\n  width: 100%;\r\n}\r\n\r\ntd {\r\n  padding-right: 8px;\r\n}\r\n",
                    "styleUrl": "./hts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n  <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n    <mat-label>HTS #</mat-label>\r\n    <input matInput>\r\n  </mat-form-field></td>\r\n  </tr>\r\n  <tr>\r\n  <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n    <mat-label>Description</mat-label>\r\n    <input matInput>\r\n  </mat-form-field></td>\r\n  </tr></table>\r\n\r\n"
        },
        {
            "name": "HTSComponent",
            "id": "component-HTSComponent-79e77a410a1925cc90ddc8b7bf682f477eef85675d98a7804706d45ccb99bd7d8ba4ac8788db1467359363cb8d9b0ae2be29eba303e1681f61a5343793c834ad",
            "file": "src/app/pages/tables/hts/hts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hts",
            "styleUrls": [
                "./hts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./hts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gridOptions",
                    "defaultValue": "{\r\n    rowModelType: 'serverside',\r\n\r\n    columnDefs: [\r\n      { field: 'other' },\r\n      { field: 'superior' },\r\n      { field: 'description' },\r\n      { field: 'quotaQuantity' },\r\n      { field: 'special' },\r\n      { field: 'htsno' },\r\n      { field: 'additionalDuties' },\r\n      { field: 'footnote' },\r\n      { field: 'general' },\r\n      { field: 'units' },\r\n    ],\r\n\r\n    defaultColDef: {\r\n      sortable: true,\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "rowData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTS[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\ninterface HTS {\r\n  seqNo: Number;\r\n  refNo: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-hts',\r\n  templateUrl: './hts.component.html',\r\n  styleUrls: ['./hts.component.scss'],\r\n})\r\nexport class HTSComponent {\r\n  rowData: HTS[] = [];\r\n\r\n  gridOptions = {\r\n    rowModelType: 'serverside',\r\n\r\n    columnDefs: [\r\n      { field: 'other' },\r\n      { field: 'superior' },\r\n      { field: 'description' },\r\n      { field: 'quotaQuantity' },\r\n      { field: 'special' },\r\n      { field: 'htsno' },\r\n      { field: 'additionalDuties' },\r\n      { field: 'footnote' },\r\n      { field: 'general' },\r\n      { field: 'units' },\r\n    ],\r\n\r\n    defaultColDef: {\r\n      sortable: true,\r\n    },\r\n  };\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./hts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Harmonized Tariff Schedule of US\r\n  </h1>\r\n</div>\r\n"
        },
        {
            "name": "IsfComponent",
            "id": "component-IsfComponent-d03c935f65eef5fa43f6ed7a78d96ea9bfbcf28d9e04aabdd3fc8354d4555ae030399f8b99a01137e8202a2417925bfac8bb9d279b4a5a880431ee27ba6b99e3",
            "file": "src/app/pages/isf/isf.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-isf",
            "styleUrls": [
                "./isf.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./isf.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-isf',\r\n  templateUrl: './isf.component.html',\r\n  styleUrls: ['./isf.component.scss']\r\n})\r\nexport class IsfComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./isf.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(255, 0, 170);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Importer Security Filing\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Shipment Information\">\r\n      <app-isf-grid></app-isf-grid>\r\n    </mat-tab>\r\n    <mat-tab label=\"Related Parties\">\r\n      <app-shipment></app-shipment>\r\n      <app-parties></app-parties>\r\n    </mat-tab>\r\n    <mat-tab label=\"HTS Info\">\r\n      <app-hts></app-hts>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "IsfDetailComponent",
            "id": "component-IsfDetailComponent-74b833f43e38627610f6912667acfa6170d3e4292705a1fb0c4c2597030c9d2a207d1d15c7d6a1ef468890f597b3ac9a02093976d6c8db47a692d044f516dedc",
            "file": "src/app/pages/isf/isf-detail/isf-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-isf-detail",
            "styleUrls": [
                "./isf-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./isf-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISF",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isfDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { ISF } from '../../interfaces/isf';\r\nimport Isf from '../../../../assets/data/isf.json';\r\nimport { IsfService } from '../isf.service';\r\nimport { Location } from '@angular/common';\r\nimport { findIndex } from 'rxjs';\r\n\r\n//will need later to process the Observable route parameters\r\n\r\n@Component({\r\n  selector: 'app-isf-detail',\r\n  templateUrl: './isf-detail.component.html',\r\n  styleUrls: ['./isf-detail.component.scss']\r\n})\r\n\r\nexport class IsfDetailComponent implements OnInit {\r\n\r\n  public isf!: ISF\r\n  public id!: number\r\n  public isfDetail : any\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isfService: IsfService,\r\n    private location: Location,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    const refNo =  Number(this.route.snapshot.paramMap.get('id'))\r\n    // window.alert(refNo)\r\n    this.isfService.getIsf(refNo).subscribe(isf => this.isf = isf)\r\n    // window.alert(this.isf)\r\n\r\n\r\n    // this.route.params.forEach((params: Params) => {\r\n    //   window.alert(params)\r\n    //   this.refNo = params['refNo']                // this.refNo undefined\r\n      // let ISF = this.isfService.getIsf(this.refNo)\r\n      // let i = (Isf.indexOf(this.refNo))\r\n      // window.alert(i)\r\n      // if (Isf.length > 0) {\r\n      //   this.isfDetail = Isf[10]\r\n      // }\r\n    // })\r\n  }\r\n\r\n  // getIsf(): void {\r\n  //   this.isfService.getIsf(this.refNo)\r\n  //     .subscribe(isf => this.isf = isf)\r\n  //   window.alert(this.refNo)\r\n    // this.route.params.forEach((params: Params) => {\r\n    //     this.refNo = params['refNo']\r\n    // })\r\n    //     const isf = Isf.find(i => i.reffNo === this.refNo)\r\n    // console.log(isf);\r\n  // }\r\n\r\n  goBack(): void {\r\n    this.location.back()\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./isf-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isfService",
                        "type": "IsfService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isfService",
                        "type": "IsfService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1\r\n  style=\"\r\n    font-weight: bolder;\r\n    background-color: rgb(255, 0, 170);\r\n    text-align: center;\r\n  \"\r\n>\r\n  Importer Security Detail\r\n</h1>\r\n\r\n<div *ngIf=\"isf\" class=\"container\">\r\n  <h2>\r\n    Ref #: {{ isf.refNo }} Details\r\n    <span\r\n      ><button type=\"button\" class=\"btn btn-link\" (click)=\"goBack()\">\r\n        Back to ISFMainpage\r\n      </button>\r\n    </span>\r\n  </h2>\r\n\r\n  <form class=\"row g-3\">\r\n    <div class=\"col-md-3\">\r\n      <label for=\"inputEmail4\" class=\"form-label\">File No</label>\r\n      <input type=\"email\" class=\"form-control\" placeholder=\"{{ isf.fileNo }}\" />\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <label for=\"inputPassword4\" class=\"form-label\">Branch</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ isf.branch }}\"\r\n      />\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <label for=\"inputAddress\" class=\"form-label\">ISF No</label>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"{{ isf.isfNo }}\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-3\">\r\n      <label for=\"inputAddress2\" class=\"form-label\">ISF Status</label>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"{{ isf.status }}\" />\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <label for=\"inputCity\" class=\"form-label\">Disposition</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ isf.disposition }}\"\r\n      />\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <label for=\"inputState\" class=\"form-label\">Shipment Type</label>\r\n      <input id=\"inputState\" class=\"form-select\" placeholder=\"{{ isf.type }}\" />\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <label for=\"inputZip\" class=\"form-label\">Action Reason</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ isf.actReason }}\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-md-3\">\r\n      <label class=\"form-label\" for=\"gridCheck\"> Importer Code </label>\r\n      <input class=\"form-control\" placeholder=\"{{ isf.importerCode }}\" />\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <label class=\"form-label\" for=\"gridCheck\"> Importer Name </label>\r\n      <input class=\"form-control\" placeholder=\"{{ isf.importerName }}\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-2\">\r\n      <label for=\"inputZip\" class=\"form-label\">Bond Holder Id</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ isf.bondHolderId }}\"\r\n      />\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <label class=\"form-label\" for=\"gridCheck\"> House Bill of Lading </label>\r\n      <input class=\"form-control\" placeholder=\"{{ isf.houseBL }}\" />\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <label class=\"form-label\" for=\"gridCheck\"> Master Bill of Lading </label>\r\n      <input class=\"form-control\" placeholder=\"{{ isf.masterBL }}\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-2\">\r\n      <label for=\"inputZip\" class=\"form-label\">Ocean Import Ref #</label>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"{{ isf.oiRefNo }}\" />\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <label class=\"form-label\" for=\"gridCheck\"> ISF Filed By </label>\r\n      <input class=\"form-control\" placeholder=\"{{ isf.user }}\" />\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <label class=\"form-label\" for=\"gridCheck\"> Last Updated On </label>\r\n      <input class=\"form-control\" placeholder=\"{{ isf.updatedDate }}\" />\r\n    </div>\r\n  </form>\r\n</div>\r\n<br />\r\n<br />\r\n<div class=\"container\">\r\n  <app-parties></app-parties>\r\n</div>\r\n"
        },
        {
            "name": "IsfFormComponent",
            "id": "component-IsfFormComponent-da9284208bca913e18f3ca171f24926de775c4641d9eb56a1d5cecd760f0abe08b9e25e11704e0661c6ba01709c752af63aaf9ed00c7de8ba64123c2df058b2f",
            "file": "src/app/extrapages/isf-form/isf-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-isf-form",
            "styleUrls": [
                "./isf-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./isf-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-isf-form',\r\n  templateUrl: './isf-form.component.html',\r\n  styleUrls: ['./isf-form.component.scss']\r\n})\r\nexport class IsfFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\r\n    max-width: 400px;\r\n    margin: 10px 10px 10px 10px;\r\n}\r\n",
                    "styleUrl": "./isf-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container bg-info\">\r\n<div class=\"row\">\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>ISF No</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>ISF Type</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Mode of Transportation</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Shipment Type</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Action</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>ISF No</mat-label>\r\n      <input type=\"date\" matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>ISF Type</mat-label>\r\n      <input type=\"date\" matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Mode of Transportation</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Shipment Type</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n  <p class=\"col\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Action</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n    </mat-form-field>\r\n  </p>\r\n\r\n</div>\r\n\r\n<p class=\"col\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Phone Number</mat-label>\r\n    <span matPrefix>+1 &nbsp;</span>\r\n    <input type=\"tel\" matInput #phone placeholder=\"555-555-1234\">\r\n  </mat-form-field>\r\n</p>\r\n\r\n<button type=\"button\" class=\"btn btn-primary\"  (click)=\"(phone.value)\">Call the number</button>\r\n\r\n</div>\r\n\r\n<div class=\"container bg-warning\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxFlex=\"30\"  class=\"example-card\">\r\n      <mat-card-header>\r\n        Entries Past Arrival Dates\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>ISF No</mat-label>\r\n              <input type=\"date\" matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>ISF Type</mat-label>\r\n              <input type=\"date\" matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Mode of Transportation</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"30\" class=\"example-card\">\r\n      <mat-card-header>\r\n        Duty Payments Due\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n       <div class=\"row\">\r\n        <p class=\"col\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Mode of Transportation</mat-label>\r\n            <input matInput placeholder=\"Placeholder\">\r\n            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n            <mat-hint>Hint</mat-hint>\r\n          </mat-form-field>\r\n        </p>\r\n\r\n        <p class=\"col\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Shipment Type</mat-label>\r\n            <input matInput placeholder=\"Placeholder\">\r\n            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n            <mat-hint>Hint</mat-hint>\r\n          </mat-form-field>\r\n        </p>\r\n\r\n        <p class=\"col\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Action</mat-label>\r\n            <input matInput placeholder=\"Placeholder\">\r\n            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n            <mat-hint>Hint</mat-hint>\r\n          </mat-form-field>\r\n        </p>\r\n       </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"30\"  class=\"col example-card\">\r\n      <mat-card-header>\r\n        Liquidated Entries\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>ISF No</mat-label>\r\n              <input type=\"date\" matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>ISF Type</mat-label>\r\n              <input type=\"date\" matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Mode of Transportation</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxFlex=\"30\"class='example-card'>\r\n      <mat-card-header>\r\n        Entries Past Arrival Dates\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Mode of Transportation</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Shipment Type</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Action</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n         </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxFlex=\"30\"class='example-card'>\r\n      <mat-card-header>\r\n        Duty Payments Due\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Mode of Transportation</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Shipment Type</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Action</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n         </div>\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n    <mat-card fxFlex=\"30\"class='example-card'>\r\n      <mat-card-header>\r\n        Liquidated Entries\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Mode of Transportation</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Shipment Type</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p class=\"col\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Action</mat-label>\r\n              <input matInput placeholder=\"Placeholder\">\r\n              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n              <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n          </p>\r\n         </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "IsfGridComponent",
            "id": "component-IsfGridComponent-88c8da84fcc3f40d2650b5ccaa5c3f507dc9e157610a76ff4fa930296894554852b43ed1b3918978da8031979206e9da37abb8d40046e965174893ef6b6c40bb",
            "file": "src/app/pages/isf/isf-grid/isf-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-isf-grid",
            "styleUrls": [
                "./isf-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./isf-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    { field: 'seqNo' },\r\n    { field: 'refNo', checkboxSelection: true },\r\n    { field: 'fileNo' },\r\n    { field: 'branch' },\r\n    { field: 'status' },\r\n    { field: 'disposition' },\r\n    { field: 'type' },\r\n    { field: 'shipmentType' },\r\n    { field: 'actReason' },\r\n    { field: 'importerCode' },\r\n    { field: 'importerName' },\r\n    { field: 'bondType' },\r\n    { field: 'houseBL' },\r\n    { field: 'regularBL' },\r\n    { field: 'masterBL' },\r\n    { field: 'oiRefNo' },\r\n    { field: 'updatedDate' },\r\n    { field: 'user' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "defaultColDef",
                    "defaultValue": "{\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "rowData",
                    "defaultValue": "Isf",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISF[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "rowSelection",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"single\" | \"multiple\"",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onRowClicked",
                    "args": [
                        {
                            "name": "params",
                            "type": "RowClickedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "RowClickedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ActivatedRoute, Router } from '@angular/router';\r\nimport { ColDef, RowClickedEvent } from 'ag-grid-community';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { ISF } from '../../interfaces/isf';\r\nimport Isf from '../../../../assets/data/isf.json';\r\n\r\n@Component({\r\n  selector: 'app-isf-grid',\r\n  templateUrl: './isf-grid.component.html',\r\n  styleUrls: ['./isf-grid.component.scss'],\r\n})\r\nexport class IsfGridComponent {\r\n  rowSelection: 'single' | 'multiple' = 'single';\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n  columnDefs: ColDef[] = [\r\n    { field: 'seqNo' },\r\n    { field: 'refNo', checkboxSelection: true },\r\n    { field: 'fileNo' },\r\n    { field: 'branch' },\r\n    { field: 'status' },\r\n    { field: 'disposition' },\r\n    { field: 'type' },\r\n    { field: 'shipmentType' },\r\n    { field: 'actReason' },\r\n    { field: 'importerCode' },\r\n    { field: 'importerName' },\r\n    { field: 'bondType' },\r\n    { field: 'houseBL' },\r\n    { field: 'regularBL' },\r\n    { field: 'masterBL' },\r\n    { field: 'oiRefNo' },\r\n    { field: 'updatedDate' },\r\n    { field: 'user' },\r\n  ];\r\n\r\n  defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n  };\r\n\r\n  rowData: ISF[] = Isf;\r\n\r\n  onRowClicked(params: RowClickedEvent) {\r\n    let refNo = params.node.data.refNo;\r\n    // window.alert(refNo)     // Picks up correct ref #\r\n    this.router.navigate([refNo], { relativeTo: this.route }); //Navigate to correct Url with selected Ref#\r\n    // window.alert(refNo)   // refNo is correct here\r\n    // const isf = Isf.find(i => i.reffNo === refNo)\r\n    // console.log(isf);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./isf-grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ag-grid-angular\r\n  style=\"width: auto; height: 700px\"\r\n  class=\"ag-theme-alpine\"\r\n  [rowData]=\"rowData\"\r\n  [columnDefs]=\"columnDefs\"\r\n  [defaultColDef]=\"defaultColDef\"\r\n  [pagination]=\"true\"\r\n  [paginationPageSize]=\"20\"\r\n  [animateRows]=\"true\"\r\n  [sideBar]=\"true\"\r\n  [colWidth]=\"120\"\r\n  [rowSelection]=\"rowSelection\"\r\n  (rowClicked)=\"onRowClicked($event)\"\r\n>\r\n</ag-grid-angular>\r\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-dcb507e5ac3c2ed46e872316f613b2fd15f45782ef2510900aa5b2e47434a144bdc143c87daf22b933a0f637b285f839334d0421821eda81646e2e8314f8a7b9",
            "file": "src/app/layouts/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "layoutwidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "topbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "isHorizontalLayoutRequested",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCheck if the horizontal layout is requested\n",
                    "description": "<p>Check if the horizontal layout is requested</p>\n"
                },
                {
                    "name": "isVerticalLayoutRequested",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCheck if the vertical layout is requested\n",
                    "description": "<p>Check if the vertical layout is requested</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  LAYOUT_HORIZONTAL,\r\n  LAYOUT_VERTICAL,\r\n  LAYOUT_WIDTH,\r\n  TOPBAR\r\n} from './layouts.model';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  // layout related config\r\n  // layout related config\r\n  layoutType!: string;\r\n  layoutwidth!: string;\r\n  topbar!: string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n     // default settings\r\n     this.layoutType = LAYOUT_VERTICAL;\r\n     this.layoutwidth = LAYOUT_WIDTH;\r\n     this.topbar = TOPBAR;\r\n  }\r\n\r\n  /**\r\n   * Check if the vertical layout is requested\r\n   */\r\n   isVerticalLayoutRequested() {\r\n    return this.layoutType === LAYOUT_VERTICAL;\r\n  }\r\n\r\n  /**\r\n   * Check if the horizontal layout is requested\r\n   */\r\n  isHorizontalLayoutRequested() {\r\n    return this.layoutType === LAYOUT_HORIZONTAL;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  font-family: \"Tangerine\", serif;\r\n  font-size: 48px;\r\n}\r\n",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- vertical layout\r\n<app-vertical *ngIf=\"isVerticalLayoutRequested()\"></app-vertical> -->\r\n\r\n\r\n<!-- horizontal layout -->\r\n<!-- <app-horizontal *ngIf=\"isHorizontalLayoutRequested()\"></app-horizontal> -->\r\n"
        },
        {
            "name": "LclComponent",
            "id": "component-LclComponent-f77ca5d7165aa6d5dc9a5f5043c48e767cf769be3856e4ce8d3187baf34e9defe600d3e0f0654adc4337f581f85bd6c2bf899d6c173e662a323e3b7b25acc91c",
            "file": "src/app/pages/trucking/lcl/lcl.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lcl",
            "styleUrls": [
                "./lcl.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lcl.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lcl',\r\n  templateUrl: './lcl.component.html',\r\n  styleUrls: ['./lcl.component.scss']\r\n})\r\nexport class LclComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {  display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-template-rows: repeat(7, 1fr);\r\n    gap: 10px 10px;\r\n    grid-auto-flow: row;\r\n    grid-template-areas:\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . . . .\"\r\n      \". . . . \"\r\n      \". . . . \"\r\n      \". . . . .\"\r\n      \". . . . . .\";\r\n  }\r\n  ",
                    "styleUrl": "./lcl.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: rgb(156, 156, 148); text-align: center;\">LCL Delivery Schedule</h1>\r\n\r\n<div class=\"container\">\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n      <select for=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br>\r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select><br> <br>\r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br><br>\r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n  \r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n      </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    <div>\r\n      <label for=\"coName\">Company:</label><br>\r\n      <input type=\"text\" id=\"coName\" name=\"coName\" value=\"ABC Co., Ltd.\"><br>\r\n      <label for=\"delDate\">Delivery Date:</label><br>\r\n      <input type=\"date\" id=\"delDate\" name=\"delDate\" value=\"\"><br>\r\n      <label for=\"delTime\">AM or PM ?</label>\r\n  \r\n      <select name=\"delTime\" id=\"delTime\">\r\n        <option value=\"am\">AM</option>\r\n        <option value=\"pm\">PM</option>\r\n      </select> <br> <br> \r\n    </div>\r\n    \r\n  </div>"
        },
        {
            "name": "LiquidationComponent",
            "id": "component-LiquidationComponent-cc3ec35fc53f0efed63cfb72d8d61891fd51c3d0a309ddae9d1a08cab9f39b8b8c77a41c4492f64a9167b2552a07b37836c3021e56032b02e000bd11c3f69ec8",
            "file": "src/app/pages/reports/liquidation/liquidation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-liquidation",
            "styleUrls": [
                "./liquidation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./liquidation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-liquidation',\r\n  templateUrl: './liquidation.component.html',\r\n  styleUrls: ['./liquidation.component.scss']\r\n})\r\nexport class LiquidationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./liquidation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>liquidation works!</p>\r\n"
        },
        {
            "name": "Login02Component",
            "id": "component-Login02Component-6d607f687bc65ab534c218f3f828dfb8ba9915a2e043ad6aa707c8a91120984791564e40ca3059fd2b3af7aa8b68be4cdb48bb1ca995df96bcc238a48fff8003",
            "file": "src/app/account/auth/login02/login02.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login02",
            "styleUrls": [
                "./login02.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login02.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'loginform', {static: false}"
                        }
                    ]
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.fb.group({\r\n    username: ['', Validators.required],\r\n    password: ['', [Validators.required, Validators.minLength(6)]],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoginSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { NgForm, UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login02',\r\n  templateUrl: './login02.component.html',\r\n  styleUrls: ['./login02.component.scss'],\r\n})\r\nexport class Login02Component implements OnInit {\r\n  @ViewChild('loginform', { static: false }) loginform!: NgForm;\r\n\r\n  loginForm = this.fb.group({\r\n    username: ['', Validators.required],\r\n    password: ['', [Validators.required, Validators.minLength(6)]],\r\n  });\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  onLoginSubmit() {\r\n    const username = this.loginForm.value.username;\r\n    const password = this.loginForm.value.password;\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-type': 'application/json',\r\n        'Access-Control-Allow-Methods': 'GET, POST, PATCH, DELETE, OPTIONS',\r\n      }),\r\n    };\r\n\r\n    const reqObject = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    this.router.navigate(['/home/nav']);\r\n  }\r\n  //   const myObserver = {\r\n  //     // The response data\r\n  //     next: (response: any) => {\r\n  //       // If the user authenticates successfully, we need to store the JWT returned in localStorage\r\n  //       this.authService.setSessionStorage(response);\r\n  //     },\r\n\r\n  //     // If there is an error\r\n  //     error: (err: Error) => {\r\n  //       console.log(err);\r\n  //     },\r\n\r\n  //     // When observable completes\r\n  //     complete: () => {\r\n  //       console.log('done!');\r\n  //       this.router.navigate(['/home/nav']);\r\n  //     },\r\n  //   };\r\n\r\n  //   this.http\r\n  //     .post('http://localhost:8080/auth/signin', reqObject, httpOptions)\r\n  //     .subscribe(myObserver);\r\n\r\n  //   // this.http\r\n  //   //   .post(\r\n  //   //     'https://git.heroku.com/nodejs01-app.git/auth/signin',\r\n  //   //     reqObject,\r\n  //   //     httpOptions\r\n  //   //   )\r\n  //   //   .subscribe(myObserver);\r\n\r\n  //   //   // The response data\r\n  //   //   response => {\r\n\r\n  //   //     // If the user authenticates successfully, we need to store the JWT returned in localStorage\r\n  //   //     this.authService.setSessionStorage(response);\r\n\r\n  //   //   },\r\n\r\n  //   //   // If there is an error\r\n  //   //   error => {\r\n  //   //     console.log(error);\r\n  //   //   },\r\n\r\n  //   //   // When observable completes\r\n  //   //   () => {\r\n  //   //     console.log('done!');\r\n  //   //     this.router.navigate(['/home/nav']);\r\n  //   //   }\r\n\r\n  //   // );\r\n  // }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html,\r\nbody {\r\n  height: 100%;\r\n}\r\n\r\n// body {\r\n//   margin: 0;\r\n//   font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n//   min-height: 50vh;\r\n//   background: #e2e2e2;\r\n// }\r\n\r\n// .app-header {\r\n//   justify-content: space-between;\r\n//   position: fixed;\r\n//   top: 0;\r\n//   left: 0;\r\n//   right: 0;\r\n//   z-index: 2;\r\n//   box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2),\r\n//     0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\r\n// }\r\n\r\n.login-wrapper {\r\n  height: 100%;\r\n}\r\n\r\n// .positronx {\r\n//   text-decoration: none;\r\n//   color: #ffffff;\r\n// }\r\n\r\n.box {\r\n  position: relative;\r\n  top: 0;\r\n  opacity: 1;\r\n  float: left;\r\n  padding: 10px;\r\n  width: 100%;\r\n  background: rgb(240, 210, 210);\r\n  border-radius: 10px;\r\n  transform: scale(1);\r\n  -webkit-transform: scale(1);\r\n  -ms-transform: scale(1);\r\n  z-index: 2;\r\n  max-width: 400px;\r\n  border: 2px double blue;\r\n}\r\n\r\n// .box.back {\r\n//   transform: scale(0.95);\r\n//   -webkit-transform: scale(0.95);\r\n//   -ms-transform: scale(0.95);\r\n//   top: -20px;\r\n//   opacity: 0.8;\r\n//   z-index: -1;\r\n// }\r\n\r\n// .box:before {\r\n//   content: \"\";\r\n//   width: 100%;\r\n//   height: 30px;\r\n//   border-radius: 10px;\r\n//   position: absolute;\r\n//   top: -10px;\r\n//   background: rgba(255, 255, 255, 0.6);\r\n//   left: 0;\r\n//   transform: scale(0.95);\r\n//   -webkit-transform: scale(0.95);\r\n//   -ms-transform: scale(0.95);\r\n//   z-index: -1;\r\n// }\r\n\r\n.login-wrapper .example-form {\r\n  max-width: 600px;\r\n}\r\n\r\n// .login-wrapper .example-full-width,\r\n// .login-wrapper .btn-block {\r\n//   width: 100%;\r\n// }\r\n\r\n.login-wrapper mat-card-header {\r\n  text-align: center;\r\n  width: 100%;\r\n  display: block;\r\n  font-weight: 700;\r\n}\r\n\r\n// .login-wrapper mat-card-header mat-card-title {\r\n//   font-size: 30px;\r\n//   margin: 20;\r\n// }\r\n\r\n.login-wrapper .mat-card {\r\n  padding: 40px 70px 50px;\r\n}\r\n\r\n// .login-wrapper .mat-stroked-button {\r\n//   border: 2px double blue;\r\n//   line-height: 54px;\r\n//   background: #fff7fa;\r\n// }\r\n\r\n// .login-wrapper .mat-form-field-appearance-legacy .mat-form-field-infix {\r\n//   padding: 0.8375em 0;\r\n// }\r\n\r\n.example-card {\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin-top: 20px;\r\n}\r\n\r\n.wrapper {\r\n  background-image: url(\"https://cdn.pixabay.com/photo/2022/01/13/16/37/trees-6935614__340.jpg\");\r\n}\r\n\r\n// background-image {\r\n//   background-size: auto;\r\n//   background-size: cover;\r\n// }\r\n\r\n// li {\r\n//   border: 20px;\r\n// }\r\n\r\n// ul {\r\n//   padding: 20px;\r\n//   font-size: larger;\r\n// }\r\n\r\n// mat-card-content {\r\n//   text-align: center;\r\n// }\r\n",
                    "styleUrl": "./login02.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"wrapper\">\r\n  <div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <form\r\n      name=\"form\"\r\n      (ngSubmit)=\"onLoginSubmit()\"\r\n      #loginform=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <mat-card class=\"box\">\r\n        <mat-card-header>\r\n          <mat-card-title>Log In</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <form\r\n          class=\"example-form\"\r\n          [formGroup]=\"loginForm\"\r\n          (ngSubmit)=\"onLoginSubmit()\"\r\n        >\r\n          <mat-card-content>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n              <mat-label>Username</mat-label>\r\n              <input\r\n                matInput\r\n                id=\"username\"\r\n                type=\"text\"\r\n                formControlName=\"username\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n              <mat-label>Password</mat-label>\r\n              <input\r\n                matInput\r\n                id=\"password\"\r\n                type=\"password\"\r\n                formControlName=\"password\"\r\n                placeholder=\"Password\"\r\n                autocomplete=\"current-password\"\r\n              />\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n          <!-- <a routerLink=\"/home/nav\"><button mat-stroked-button color=\"accent\" class=\"btn-block\" >Log in</button> </a> -->\r\n          <button\r\n            mat-stroked-button\r\n            color=\"accent\"\r\n            class=\"btn-block\"\r\n            (click)=\"onLoginSubmit()\"\r\n          >\r\n            Log in\r\n          </button>\r\n        </form>\r\n      </mat-card>\r\n    </form>\r\n  </div>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70%\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> Manufacturers / Shippers </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2022/01/16/13/25/cityscape-6942013__340.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: blanchedalmond\">\r\n        <li>Apply for Customs' assigned number</li>\r\n        <li>Obtain a continuous/annual bond</li>\r\n        <li>Clear U.S. Customs</li>\r\n        <li>Pay the duty online</li>\r\n        <li>Proof of Delivery</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button\r\n            mat-button\r\n            class=\"btn btn-primary\"\r\n            style=\"margin-left: 120px\"\r\n          >\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70%\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> Importers / Exporters </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2022/01/10/15/29/wind-mills-6928590__340.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: chartreuse\">\r\n        <li>Check duty payments</li>\r\n        <li>Detailed entry report</li>\r\n        <li>Liquidaiton report</li>\r\n        <li>Entry & PGA status</li>\r\n        <li>Delivery Status</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button\r\n            mat-button\r\n            class=\"btn btn-secondary\"\r\n            style=\"margin-left: 120px\"\r\n          >\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70%\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> Freight Forwarders </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2015/01/09/11/08/startup-594090_960_720.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: darkkhaki\">\r\n        <li>Check the entry status for clients</li>\r\n        <li>Upload documents for Customs' clearance</li>\r\n        <li>Duty reports for each client</li>\r\n        <li>Delivery status</li>\r\n        <li>Print entry documents</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button\r\n            mat-button\r\n            class=\"btn btn-warning\"\r\n            style=\"margin-left: 120px\"\r\n          >\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70%\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> Truckers </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2018/05/11/23/45/highway-3392100_960_720.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: rgb(238, 222, 5)\">\r\n        <li>Receive the delivery order</li>\r\n        <li>Generate the invoice</li>\r\n        <li>Get paid</li>\r\n        <li>Upload documents</li>\r\n        <li>Contact the issuer</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button mat-button class=\"btn btn-info\" style=\"margin-left: 120px\">\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70%\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> CFS / Terminal Operators </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2018/01/14/15/53/hamburg-3082070_960_720.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: aliceblue\">\r\n        <li>Download Manifest</li>\r\n        <li>Receive payments</li>\r\n        <li>Shipment tracking</li>\r\n        <li>Arrange Trucking</li>\r\n        <li>Generate invoices</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button\r\n            mat-button\r\n            class=\"btn btn-primary\"\r\n            style=\"margin-left: 120px\"\r\n          >\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> Air Carriers </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2015/03/24/09/02/airport-687256_960_720.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: greenyellow\">\r\n        <li>File AMS</li>\r\n        <li>Cargo Manifest Status Query</li>\r\n        <li>Receive payments</li>\r\n        <li>Customs' status</li>\r\n        <li>Shipment tracking</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button mat-button class=\"btn btn-danger\" style=\"margin-left: 120px\">\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70\" class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title> Sea Carriers </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2018/01/14/15/53/hamburg-3082070_960_720.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: magenta\">\r\n        <li>File AMS</li>\r\n        <li>Shipment Status</li>\r\n        <li>Route delivery</li>\r\n        <li>Customs' Status</li>\r\n        <li>Receive payments</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button\r\n            mat-button\r\n            class=\"btn btn-warning\"\r\n            style=\"margin-left: 120px\"\r\n          >\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <mat-card fxFlex=\"70\">\r\n    <mat-card-header>\r\n      <mat-card-title> Other Service Providers </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content\r\n      style=\"\r\n        background-image: url('https://cdn.pixabay.com/photo/2022/01/10/15/29/wind-mills-6928590__340.jpg');\r\n        background-size: cover;\r\n      \"\r\n    >\r\n      <ul style=\"font-weight: bolder; color: darkkhaki\">\r\n        <li>Upload documents</li>\r\n        <li>Download documents</li>\r\n        <li>Generate invoices</li>\r\n        <li>Get paid</li>\r\n        <li>Reports</li>\r\n      </ul>\r\n      <mat-card-actions>\r\n        <a routerLink=\"/account/register\"\r\n          ><button mat-button class=\"btn btn-info\" style=\"margin-left: 120px\">\r\n            Log In or Sign Up\r\n          </button>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n"
        },
        {
            "name": "ManufacturersComponent",
            "id": "component-ManufacturersComponent-2bd3f235c91a2ea51b09e2dda04359eedb4f5ac4c7f0659f7311cdc5186c6ef92ee26d3492ffcb933129aa26b242d3da9f5d677280df2b9395c1cd6a245739b7",
            "file": "src/app/pages/tables/manufacturers/manufacturers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-manufacturers",
            "styleUrls": [
                "./manufacturers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./manufacturers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ManufacturersDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<ManufacturersItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ManufacturersDataSource, ManufacturersItem } from './manufacturers-datasource';\r\n\r\n@Component({\r\n  selector: 'app-manufacturers',\r\n  templateUrl: './manufacturers.component.html',\r\n  styleUrls: ['./manufacturers.component.scss']\r\n})\r\nexport class ManufacturersComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<ManufacturersItem>;\r\n  dataSource: ManufacturersDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new ManufacturersDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./manufacturers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Manufactures Information\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "MonthlySummaryComponent",
            "id": "component-MonthlySummaryComponent-3837747c802c2caff0f58bda956f6b9a6d84917dfceaf54c7bef60b035f9e4159fea3db109f2afb47a9f877ed0cc4bde6252376ee9bdf6efa7a1e383b3a54c25",
            "file": "src/app/widgets/monthly-summary/monthly-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-monthly-summary",
            "styleUrls": [
                "./monthly-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./monthly-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-monthly-summary',\r\n  templateUrl: './monthly-summary.component.html',\r\n  styleUrls: ['./monthly-summary.component.scss']\r\n})\r\nexport class MonthlySummaryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./monthly-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<ul>\r\n  <li>Air AMS</li>\r\n  <li>Air Export</li>\r\n  <li>Air Import</li>\r\n  <li>Customs Brokerage</li>\r\n  <li>ISF</li>\r\n  <li>Ocean Export</li>\r\n  <li>Ocean Import</li>\r\n  <li>Sea AMS</li>\r\n  <li>Truck AMS</li>\r\n</ul>\r\n"
        },
        {
            "name": "MultiYComponent",
            "id": "component-MultiYComponent-3a91ebfe040baf75804820ab8de5eeb40e29cd0d794a514355e30e4a9db3a9954cf85f857dd23f4bbb07f4c892c2bd82774ee2fd87afd9db277c45f930754cd4",
            "file": "src/app/widgets/multi-y/multi-y.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-multi-y",
            "styleUrls": [
                "./multi-y.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-y.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexLegend,\r\n  ApexTitleSubtitle,\r\n  ApexTooltip,\r\n  ApexXAxis,\r\n  ApexYAxis,\r\n  ChartComponent\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from \"@angular/core\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  markers: any; //ApexMarkers;\r\n  stroke: any; //ApexStroke;\r\n  yaxis: ApexYAxis | ApexYAxis[];\r\n  dataLabels: ApexDataLabels;\r\n  title: ApexTitleSubtitle;\r\n  legend: ApexLegend;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-multi-y',\r\n  templateUrl: './multi-y.component.html',\r\n  styleUrls: ['./multi-y.component.scss']\r\n})\r\nexport class MultiYComponent {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Income\",\r\n          type: \"column\",\r\n          data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\r\n        },\r\n        {\r\n          name: \"Cashflow\",\r\n          type: \"column\",\r\n          data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\r\n        },\r\n        {\r\n          name: \"Revenue\",\r\n          type: \"line\",\r\n          data: [20, 29, 37, 36, 44, 45, 50, 58]\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: \"line\",\r\n        stacked: false\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        width: [1, 1, 4]\r\n      },\r\n      title: {\r\n        text: \"XYZ - Stock Analysis (2009 - 2016)\",\r\n        align: \"left\",\r\n        offsetX: 110\r\n      },\r\n      xaxis: {\r\n        categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\r\n      },\r\n      yaxis: [\r\n        {\r\n          axisTicks: {\r\n            show: true\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: \"#008FFB\"\r\n          },\r\n          labels: {\r\n            style: {\r\n              color: \"#008FFB\"\r\n            }\r\n          },\r\n          title: {\r\n            text: \"Income (thousand crores)\",\r\n            style: {\r\n              color: \"#008FFB\"\r\n            }\r\n          },\r\n          tooltip: {\r\n            enabled: true\r\n          }\r\n        },\r\n        {\r\n          seriesName: \"Income\",\r\n          opposite: true,\r\n          axisTicks: {\r\n            show: true\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: \"#00E396\"\r\n          },\r\n          labels: {\r\n            style: {\r\n              color: \"#00E396\"\r\n            }\r\n          },\r\n          title: {\r\n            text: \"Operating Cashflow (thousand crores)\",\r\n            style: {\r\n              color: \"#00E396\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          seriesName: \"Revenue\",\r\n          opposite: true,\r\n          axisTicks: {\r\n            show: true\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: \"#FEB019\"\r\n          },\r\n          labels: {\r\n            style: {\r\n              color: \"#FEB019\"\r\n            }\r\n          },\r\n          title: {\r\n            text: \"Revenue (thousand crores)\",\r\n            style: {\r\n              color: \"#FEB019\"\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      tooltip: {\r\n        fixed: {\r\n          enabled: true,\r\n          position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\r\n          offsetY: 30,\r\n          offsetX: 60\r\n        }\r\n      },\r\n      legend: {\r\n        horizontalAlign: \"left\",\r\n        offsetX: 40\r\n      }\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\r\n  max-width: 650px;\r\n  margin: 35px auto;\r\n}\r\n",
                    "styleUrl": "./multi-y.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "templateData": "<!--The content below is only a placeholder and can be replaced.-->\r\n<div id=\"chart\">\r\n  <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [xaxis]=\"chartOptions.xaxis\"\r\n    [markers]=\"chartOptions.markers\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [dataLabels]=\"chartOptions.dataLabels\"\r\n    [title]=\"chartOptions.title\"\r\n    [fill]=\"chartOptions.fill\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [legend]=\"chartOptions.legend\"\r\n  ></apx-chart>\r\n</div>\r\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-5245cae1fcf2a42bc9f23c25af436a92ca8ed328ed097d889eef1c7de96102f061d8cf7f2d5554bf53461ab1da08b67873e34682d0549211b7f7f79cf3552672",
            "file": "src/app/home/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation",
            "styleUrls": [
                "./navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasChild",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "this.authService.isLoggedIn()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "menuItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SideBarMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "showDefaultMessage",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDefaultMessage",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../../services/auth.service'\r\nimport { MenuService } from '../../services/menu.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SideBarMenuItem } from '../../layouts/sidebar/sidebar.menu.model';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\n\r\n\r\nexport class NavigationComponent implements OnInit  {\r\n\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  menuItem! : SideBarMenuItem[]\r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n              private menuService: MenuService,\r\n              private authService: AuthService,\r\n              private route: Router) {}\r\n\r\n  hasChild = (_: number, node: SideBarMenuItem) => !!node.children && node.children.length >0;\r\n\r\n  public showDefaultMessage = true;\r\n\r\n  ngOnInit(): void {\r\n    this.menuService.getMenuitems().subscribe((data: SideBarMenuItem[]) =>\r\n    {\r\n      this.menuItem = data;\r\n    })\r\n\r\n    // this.route.navigate(['/dashboard'])\r\n\r\n  }\r\n\r\n  toggleDefaultMessage(state: boolean){\r\n    this.showDefaultMessage = state;\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.route.navigate(['/'])\r\n  }\r\n\r\n  isLoggedIn = this.authService.isLoggedIn()\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav-container {\r\n  height: auto;\r\n  bottom: auto;\r\n  margin: auto;\r\n  background-color: #d4daf7;\r\n  border-radius: 5px;\r\n}\r\n\r\nmat-sidenav-content {\r\n  height: auto;\r\n  background-color: #fba90a; /* For browsers that do not support gradients */\r\n  background-image: linear-gradient(beige, rgb(255, 255, 255));\r\n  margin: auto;\r\n}\r\n\r\nmat-sidenav {\r\n  width: 200px;\r\n  padding: 20px;\r\n  background-color: rgb(94, 94, 63);\r\n  a:hover {\r\n    color: #b88114;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.mat-toolbar.mat-primary {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 0;\r\n}\r\n\r\n.toolbar-filler {\r\n  flex: 1 1 auto;\r\n}\r\n\r\nmat-menu-item {\r\n  font-size: medium;\r\n  padding: 8px 0;\r\n  display: flex;\r\n  width: auto;\r\n\r\n  .routeIcon {\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\nh1 {\r\n  margin: auto;\r\n  font-weight: bolder;\r\n  text-shadow: 0 0 3px #ff0000;\r\n}\r\n\r\n.a {\r\n  border-radius: 5px;\r\n  margin: 0 8px;\r\n}\r\n\r\nh3,\r\nmat-icon {\r\n  margin: auto;\r\n}\r\n\r\n.name1 {\r\n  font-weight: bolder;\r\n  font-size: 2em;\r\n  color: burlywood;\r\n}\r\n\r\nimg {\r\n  background-color: rgb(20, 72, 216);\r\n  border-radius: 50%;\r\n}\r\n\r\nexample-spacer {\r\n  flex: 1 1 auto;\r\n}\r\n\r\na {\r\n  color: #263409;\r\n}\r\n\r\nbutton {\r\n  width: 150px;\r\n  border-radius: 10%;\r\n}\r\n",
                    "styleUrl": "./navigation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar style=\"color: #d4daf7\">\r\n  <button\r\n    mat-icon-button\r\n    aria-label=\"Toggle sidenav\"\r\n    mat-icon-button\r\n    (click)=\"drawer.toggle()\"\r\n  >\r\n    <!-- *ngIf=\"isHandset$ | async\"> -->\r\n    <mat-icon style=\"color: #183bf0\">menu</mat-icon>\r\n  </button>\r\n\r\n  <span>\r\n    <img\r\n      src=\"../../../assets/images/logo.jpg\"\r\n      alt=\"ANA Link. Ltd\"\r\n      width=\"70\"\r\n      height=\"40\"\r\n    />\r\n  </span>\r\n\r\n  <span class=\"name1\">ANA Link</span>\r\n\r\n  <span class=\"example-spacer\"></span>\r\n  <button\r\n    mat-icon-button\r\n    class=\"example-icon favorite-icon\"\r\n    aria-label=\"Example icon-button with heart icon\"\r\n  >\r\n    <mat-icon style=\"color: #2d14b8\">favorite</mat-icon>\r\n  </button>\r\n  <button\r\n    mat-icon-button\r\n    class=\"example-icon\"\r\n    aria-label=\"Example icon-button with share icon\"\r\n  >\r\n    <mat-icon style=\"color: #b88114\">share</mat-icon>\r\n  </button>\r\n\r\n  <span class=\"toolbar-filler\"></span>\r\n  <input type=\"search\" value=\"search\" />\r\n  <button\r\n    id=\"button-logout\"\r\n    type=\"button\"\r\n    class=\"btn btn-warning\"\r\n    (click)=\"logout()\"\r\n  >\r\n    Log Out\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <button type=\"button\" class=\"btn btn-primary btn-lg\">New</button>\r\n    <mat-menu-item\r\n      *ngFor=\"let menu of menuItem\"\r\n      [ngStyle]=\"{ 'padding-left': '20px' }\"\r\n    >\r\n      <a mat-list-item routerLink=\"{{ menu.route }}\">\r\n        <mat-icon>{{ menu.iconName }}</mat-icon>\r\n        {{ menu.label }}</a\r\n      >\r\n    </mat-menu-item>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <app-dashboard *ngIf=\"showDefaultMessage\"></app-dashboard>\r\n\r\n    <router-outlet\r\n      (activate)=\"toggleDefaultMessage(false)\"\r\n      (deactivate)=\"toggleDefaultMessage(true)\"\r\n    ></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n<h1>Footer here?</h1>\r\n"
        },
        {
            "name": "OceanExportComponent",
            "id": "component-OceanExportComponent-05bfc9f9922d6e2aee309452c5f149a05b98ab0885fc4e5d71ce98ab78861731de2a4beca175f318ac66d055f4736ee754ab2aaa9bbdc4154d2c91dde46e9120",
            "file": "src/app/pages/ocean-export/ocean-export.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-export",
            "styleUrls": [
                "./ocean-export.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-export.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-export',\r\n  templateUrl: './ocean-export.component.html',\r\n  styleUrls: ['./ocean-export.component.scss']\r\n})\r\nexport class OceanExportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./ocean-export.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(209, 209, 193);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Ocean Export\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Ocean Export Dashboard\">\r\n      <app-ocean-export-dashboard></app-ocean-export-dashboard>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Ocean Export Grid\">\r\n      <app-oe-grid></app-oe-grid>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"New Ocean Export\">\r\n      <app-ocean-export-detail></app-ocean-export-detail>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "OceanExportComponent",
            "id": "component-OceanExportComponent-05bfc9f9922d6e2aee309452c5f149a05b98ab0885fc4e5d71ce98ab78861731de2a4beca175f318ac66d055f4736ee754ab2aaa9bbdc4154d2c91dde46e9120-1",
            "file": "src/app/pages/track-and-trace/ocean-export/ocean-export.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-export",
            "styleUrls": [
                "./ocean-export.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-export.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-export',\r\n  templateUrl: './ocean-export.component.html',\r\n  styleUrls: ['./ocean-export.component.scss']\r\n})\r\nexport class OceanExportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n  background-color: #E4F0FF;\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr 200px;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-gap: 12px;\r\n  grid-template-areas:\r\n  \"header header header\"\r\n  \"nav content side\"\r\n  \"footer footer footer\";\r\n  height: 80vh;\r\n}\r\nheader {\r\n  color: white;\r\n  font-size: 14px;\r\n  grid-area: header;\r\n  text-align: center;\r\n  background-color: #FA7D44;\r\n}\r\n\r\nnav {\r\n  grid-area: nav;\r\n  margin-left: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\napp-privacy-policy,\r\nmain {\r\n  grid-area: content;\r\n  background-color: #F4CE46;\r\n  padding: 25px;\r\n}\r\n\r\naside {\r\n  grid-area: side;\r\n  margin-right: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background-color:#2BB961;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 25px 0;\r\n}\r\nul li {\r\n  color: white;\r\n}\r\nul li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n}\r\n",
                    "styleUrl": "./ocean-export.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "OceanExportComponent-1",
            "templateData": "\r\n<div class=\"container\">\r\n  <header>\r\n    <!-- Header -->\r\n    <h1 style=\"font-weight: bolder; text-align: center;\">Ocean Export Tracking</h1>\r\n  </header>\r\n  <nav>\r\n    <!-- Nav Bar -->\r\n    <ul>\r\n      <li><a routerLink=\"/home\">Home</a></li>\r\n      <li><a routerLink=\"/privacy-policy\">Privacy Policy</a></li>\r\n  </ul>\r\n  </nav>\r\n  <main>\r\n    <!-- Main Content -->\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Iste voluptates sint excepturi non nam ratione velit libero eius,\r\n      asperiores, temporibus vero beatae perspiciatis maxime iure repellat\r\n      quam ut ducimus maiores!\r\n    </p>\r\n  </main>\r\n  <aside>\r\n    <!-- Sidebar -->\r\n    <h3>Sidebar</h3>\r\n  </aside>\r\n  <footer>\r\n    <!-- Footer -->\r\n    <span>\r\n      Copyright 2019-2020\r\n  </span>\r\n  </footer>\r\n</div>\r\n"
        },
        {
            "name": "OceanExportDashboardComponent",
            "id": "component-OceanExportDashboardComponent-69850a68edea68bfa4e718ed47d75b55b019f54c411a96111486a1bef0edd61bc34d782e0df323adf788ad8abcd626c86187432e8fd85a90c8993cdfb933a9ce",
            "file": "src/app/pages/ocean-export/ocean-export-dashboard/ocean-export-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-export-dashboard",
            "styleUrls": [
                "./ocean-export-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-export-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-export-dashboard',\r\n  templateUrl: './ocean-export-dashboard.component.html',\r\n  styleUrls: ['./ocean-export-dashboard.component.scss']\r\n})\r\nexport class OceanExportDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./ocean-export-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-radar-chart></app-radar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-multi-y></app-multi-y>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "OceanExportDetailComponent",
            "id": "component-OceanExportDetailComponent-6e65ea4e51e6dc3df47da774d5da7b279e5f93c8dc7350eb64f6a26f0c6c3de3e9aceb008ccf81f2ac9d8165606ba947fadc3085b49905d3de109fb1744beff6",
            "file": "src/app/pages/ocean-export/ocean-export-detail/ocean-export-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-export-detail",
            "styleUrls": [
                "./ocean-export-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-export-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-export-detail',\r\n  templateUrl: './ocean-export-detail.component.html',\r\n  styleUrls: ['./ocean-export-detail.component.scss']\r\n})\r\nexport class OceanExportDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ocean-export-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"page-header\">\r\n    <h3 class=\"page-title\">Form elements</h3>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Forms</a></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n          Form elements\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Default form</h4>\r\n          <p class=\"card-description\">Basic form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputUsername1\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputUsername1\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputConfirmPassword1\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputConfirmPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Form</h4>\r\n          <p class=\"card-description\">Horizontal form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputUsername2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputUsername2\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputEmail2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputMobile\" class=\"col-sm-3 col-form-label\"\r\n                >Mobile</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputMobile\"\r\n                  placeholder=\"Mobile number\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputPassword2\" class=\"col-sm-3 col-form-label\"\r\n                >Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label\r\n                for=\"exampleInputConfirmPassword2\"\r\n                class=\"col-sm-3 col-form-label\"\r\n                >Re Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputConfirmPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic form elements</h4>\r\n          <p class=\"card-description\">Basic form elements</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputName1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputName1\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail3\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail3\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword4\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword4\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleSelectGender\">Gender</label>\r\n              <select class=\"form-control\" id=\"exampleSelectGender\">\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>File upload</label>\r\n              <input type=\"file\" name=\"img[]\" class=\"file-upload-default\" />\r\n              <div class=\"input-group col-xs-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control file-upload-info\"\r\n                  disabled\r\n                  placeholder=\"Upload Image\"\r\n                />\r\n                <span class=\"input-group-append\">\r\n                  <button\r\n                    class=\"file-upload-browse btn btn-gradient-primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputCity1\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputCity1\"\r\n                placeholder=\"Location\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleTextarea1\">Textarea</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"exampleTextarea1\"\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Input size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label>Large input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Default input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Small input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-sm\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Select size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Large select</label>\r\n            <select\r\n              class=\"form-control form-control-lg\"\r\n              id=\"exampleFormControlSelect1\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect2\">Default select</label>\r\n            <select class=\"form-control\" id=\"exampleFormControlSelect2\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect3\">Small select</label>\r\n            <select\r\n              class=\"form-control form-control-sm\"\r\n              id=\"exampleFormControlSelect3\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic input groups</h4>\r\n          <p class=\"card-description\">Basic bootstrap input groups</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">@</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text bg-primary text-white\">$</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">.00</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">$</span>\r\n              </div>\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">0.00</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Recipient's username\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-gradient-primary\" type=\"button\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div ngbDropdown class=\"input-group-prepend\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-sm btn-outline-primary\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </button>\r\n                <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                  <a class=\"dropdown-item\">Action</a>\r\n                  <a class=\"dropdown-item\">Another action</a>\r\n                  <a class=\"dropdown-item\">Something else here</a>\r\n                  <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\">Separated link</a>\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Text input with dropdown button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Find in facebook\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-facebook\" type=\"button\">\r\n                  <i class=\"mdi mdi-facebook\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Checkbox Controls</h4>\r\n          <p class=\"card-description\">\r\n            Checkbox and radio controls (default appearance is in primary color)\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Disabled checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios1\"\r\n                        value=\"\"\r\n                      />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios2\"\r\n                        value=\"option2\"\r\n                        checked\r\n                      />\r\n                      Selected\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios2\"\r\n                        id=\"optionsRadios3\"\r\n                        value=\"option3\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadio2\"\r\n                        id=\"optionsRadios4\"\r\n                        value=\"option4\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Selected and disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-description\">\r\n            Add class <code>.form-check-{{ \"{\" }}color{{ \"}\" }}</code> for\r\n            checkbox and radio controls in theme colors\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio1\"\r\n                        id=\"ExampleRadio1\"\r\n                        checked\r\n                      />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio2\"\r\n                        id=\"ExampleRadio2\"\r\n                        checked\r\n                      />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio3\"\r\n                        id=\"ExampleRadio3\"\r\n                        checked\r\n                      />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio4\"\r\n                        id=\"ExampleRadio4\"\r\n                        checked\r\n                      />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio5\"\r\n                        id=\"ExampleRadio5\"\r\n                        checked\r\n                      />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Inline forms</h4>\r\n          <p class=\"card-description\">\r\n            Use the <code>.form-inline</code> class to display a series of\r\n            labels, form controls, and buttons on a single horizontal row\r\n          </p>\r\n          <form class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control mb-2 mr-sm-2\"\r\n              id=\"inlineFormInputName2\"\r\n              placeholder=\"Jane Doe\"\r\n            />\r\n\r\n            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\"\r\n              >Username</label\r\n            >\r\n            <div class=\"input-group mb-2 mr-sm-2\">\r\n              <div class=\"input-group-prepend\">\r\n                <div class=\"input-group-text\">@</div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inlineFormInputGroupUsername2\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check mx-sm-2\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mb-2\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 grid-margin\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Two column</h4>\r\n          <form class=\"form-sample\">\r\n            <p class=\"card-description\">Personal info</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">First Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Last Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Gender</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Male</option>\r\n                      <option>Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input class=\"form-control\" placeholder=\"dd/mm/yyyy\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Category</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Category1</option>\r\n                      <option>Category2</option>\r\n                      <option>Category3</option>\r\n                      <option>Category4</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Membership</label>\r\n                  <div class=\"col-sm-4\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios1\"\r\n                          value=\"\"\r\n                          checked\r\n                        />\r\n                        Free\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-5\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios2\"\r\n                          value=\"option2\"\r\n                        />\r\n                        Professional\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-description\">Address</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 1</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">State</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 2</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Postcode</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">City</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Country</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>America</option>\r\n                      <option>Italy</option>\r\n                      <option>Russia</option>\r\n                      <option>Britain</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OceanExportSummaryComponent",
            "id": "component-OceanExportSummaryComponent-23d16f58bec83090f62119790447ea181dda5f9e48feb507d4b17326bae0750c8e7c2eeada486e1f1df5370125c7e33437406101ddc5f1fbfce10ebcfb8884a9",
            "file": "src/app/pages/ocean-export/ocean-export-summary/ocean-export-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-export-summary",
            "styleUrls": [
                "./ocean-export-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-export-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-export-summary',\r\n  templateUrl: './ocean-export-summary.component.html',\r\n  styleUrls: ['./ocean-export-summary.component.scss']\r\n})\r\nexport class OceanExportSummaryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ocean-export-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>ocean-export-summary works!</p>\r\n"
        },
        {
            "name": "OceanImportComponent",
            "id": "component-OceanImportComponent-2f3bb15540ce53075619b3e54e360b517f2013a166968911f901561a74987de527e9a170e1af00c2324a51b0792b587ef814933e358d287f05efab5acdab44a2",
            "file": "src/app/pages/ocean-import/ocean-import.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-import",
            "styleUrls": [
                "./ocean-import.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-import.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-import',\r\n  templateUrl: './ocean-import.component.html',\r\n  styleUrls: ['./ocean-import.component.scss']\r\n})\r\nexport class OceanImportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./ocean-import.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1\r\n    style=\"\r\n      font-weight: bolder;\r\n      background-color: rgb(139, 139, 136);\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Air Import\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Ocean Import Dashboard\">\r\n      <app-ocean-import-dashboard></app-ocean-import-dashboard>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Ocean Import Grid\">\r\n      <app-oi-grid></app-oi-grid>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"New Ocean Import\">\r\n      <app-ocean-import-detail></app-ocean-import-detail>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "OceanImportComponent",
            "id": "component-OceanImportComponent-2f3bb15540ce53075619b3e54e360b517f2013a166968911f901561a74987de527e9a170e1af00c2324a51b0792b587ef814933e358d287f05efab5acdab44a2-1",
            "file": "src/app/pages/track-and-trace/ocean-import/ocean-import.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-import",
            "styleUrls": [
                "./ocean-import.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-import.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-import',\r\n  templateUrl: './ocean-import.component.html',\r\n  styleUrls: ['./ocean-import.component.scss']\r\n})\r\nexport class OceanImportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n  background-color: #E4F0FF;\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr 200px;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-gap: 12px;\r\n  grid-template-areas:\r\n  \"header header header\"\r\n  \"nav content side\"\r\n  \"footer footer footer\";\r\n  height: 80vh;\r\n}\r\nheader {\r\n  color: white;\r\n  font-size: 14px;\r\n  grid-area: header;\r\n  text-align: center;\r\n  background-color: #FA7D44;\r\n}\r\n\r\nnav {\r\n  grid-area: nav;\r\n  margin-left: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\napp-privacy-policy,\r\nmain {\r\n  grid-area: content;\r\n  background-color: #F4CE46;\r\n  padding: 25px;\r\n}\r\n\r\naside {\r\n  grid-area: side;\r\n  margin-right: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background-color:#2BB961;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 25px 0;\r\n}\r\nul li {\r\n  color: white;\r\n}\r\nul li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n}\r\n",
                    "styleUrl": "./ocean-import.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "OceanImportComponent-1",
            "templateData": "\r\n<div class=\"container\">\r\n  <header>\r\n    <!-- Header -->\r\n    <h1 style=\"font-weight: bolder; text-align: center;\">Ocean Import Tracking</h1>\r\n  </header>\r\n  <nav>\r\n    <!-- Nav Bar -->\r\n    <ul>\r\n      <li><a routerLink=\"/home\">Home</a></li>\r\n      <li><a routerLink=\"/privacy-policy\">Privacy Policy</a></li>\r\n  </ul>\r\n  </nav>\r\n  <main>\r\n    <!-- Main Content -->\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Iste voluptates sint excepturi non nam ratione velit libero eius,\r\n      asperiores, temporibus vero beatae perspiciatis maxime iure repellat\r\n      quam ut ducimus maiores!\r\n    </p>\r\n  </main>\r\n  <aside>\r\n    <!-- Sidebar -->\r\n    <h3>Sidebar</h3>\r\n  </aside>\r\n  <footer>\r\n    <!-- Footer -->\r\n    <span>\r\n      Copyright 2019-2020\r\n  </span>\r\n  </footer>\r\n</div>\r\n"
        },
        {
            "name": "OceanImportDashboardComponent",
            "id": "component-OceanImportDashboardComponent-9a64d0c99fa6ccfb363620fc072bcd1b6f26801cdb4db8b5c80da9e397dd3dfcbe4575ff7c09d931b251e91cbd9ea2ddca7329f283991b5963dceeea720da097",
            "file": "src/app/pages/ocean-import/ocean-import-dashboard/ocean-import-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-import-dashboard",
            "styleUrls": [
                "./ocean-import-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-import-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-import-dashboard',\r\n  templateUrl: './ocean-import-dashboard.component.html',\r\n  styleUrls: ['./ocean-import-dashboard.component.scss']\r\n})\r\nexport class OceanImportDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./ocean-import-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-brush-chart></app-brush-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bubble-chart></app-bubble-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "OceanImportDetailComponent",
            "id": "component-OceanImportDetailComponent-0e025e46d70b99790ab6f883851e524091641e9da6a0739f04e50b6ec603ec52c746c673db10cbfc8191ba74c4432ce6d21e3b5f1270ec7de383c6f0ea01b955",
            "file": "src/app/pages/ocean-import/ocean-import-detail/ocean-import-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-import-detail",
            "styleUrls": [
                "./ocean-import-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-import-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-import-detail',\r\n  templateUrl: './ocean-import-detail.component.html',\r\n  styleUrls: ['./ocean-import-detail.component.scss']\r\n})\r\nexport class OceanImportDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ocean-import-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"page-header\">\r\n    <h3 class=\"page-title\">Form elements</h3>\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Forms</a></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n          Form elements\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Default form</h4>\r\n          <p class=\"card-description\">Basic form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputUsername1\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputUsername1\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputConfirmPassword1\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputConfirmPassword1\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Form</h4>\r\n          <p class=\"card-description\">Horizontal form layout</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputUsername2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputUsername2\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputEmail2\" class=\"col-sm-3 col-form-label\"\r\n                >Email</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail2\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputMobile\" class=\"col-sm-3 col-form-label\"\r\n                >Mobile</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputMobile\"\r\n                  placeholder=\"Mobile number\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"exampleInputPassword2\" class=\"col-sm-3 col-form-label\"\r\n                >Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label\r\n                for=\"exampleInputConfirmPassword2\"\r\n                class=\"col-sm-3 col-form-label\"\r\n                >Re Password</label\r\n              >\r\n              <div class=\"col-sm-9\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputConfirmPassword2\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check form-check-flat form-check-primary\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic form elements</h4>\r\n          <p class=\"card-description\">Basic form elements</p>\r\n          <form class=\"forms-sample\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputName1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputName1\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail3\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputEmail3\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword4\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputPassword4\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleSelectGender\">Gender</label>\r\n              <select class=\"form-control\" id=\"exampleSelectGender\">\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>File upload</label>\r\n              <input type=\"file\" name=\"img[]\" class=\"file-upload-default\" />\r\n              <div class=\"input-group col-xs-12\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control file-upload-info\"\r\n                  disabled\r\n                  placeholder=\"Upload Image\"\r\n                />\r\n                <span class=\"input-group-append\">\r\n                  <button\r\n                    class=\"file-upload-browse btn btn-gradient-primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputCity1\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputCity1\"\r\n                placeholder=\"Location\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleTextarea1\">Textarea</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"exampleTextarea1\"\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mr-2\">\r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-light\">Cancel</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Input size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label>Large input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-lg\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Default input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Small input</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-sm\"\r\n              placeholder=\"Username\"\r\n              aria-label=\"Username\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Select size</h4>\r\n          <p class=\"card-description\">\r\n            Add classes like <code>.form-control-lg</code> and\r\n            <code>.form-control-sm</code>.\r\n          </p>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Large select</label>\r\n            <select\r\n              class=\"form-control form-control-lg\"\r\n              id=\"exampleFormControlSelect1\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect2\">Default select</label>\r\n            <select class=\"form-control\" id=\"exampleFormControlSelect2\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect3\">Small select</label>\r\n            <select\r\n              class=\"form-control form-control-sm\"\r\n              id=\"exampleFormControlSelect3\"\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Basic input groups</h4>\r\n          <p class=\"card-description\">Basic bootstrap input groups</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">@</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text bg-primary text-white\">$</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">.00</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">$</span>\r\n              </div>\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">0.00</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Amount (to the nearest dollar)\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Recipient's username\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-gradient-primary\" type=\"button\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <div ngbDropdown class=\"input-group-prepend\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-sm btn-outline-primary\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </button>\r\n                <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                  <a class=\"dropdown-item\">Action</a>\r\n                  <a class=\"dropdown-item\">Another action</a>\r\n                  <a class=\"dropdown-item\">Something else here</a>\r\n                  <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\">Separated link</a>\r\n                </div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                aria-label=\"Text input with dropdown button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Find in facebook\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-sm btn-facebook\" type=\"button\">\r\n                  <i class=\"mdi mdi-facebook\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Checkbox Controls</h4>\r\n          <p class=\"card-description\">\r\n            Checkbox and radio controls (default appearance is in primary color)\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Disabled checked\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios1\"\r\n                        value=\"\"\r\n                      />\r\n                      Default\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios\"\r\n                        id=\"optionsRadios2\"\r\n                        value=\"option2\"\r\n                        checked\r\n                      />\r\n                      Selected\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadios2\"\r\n                        id=\"optionsRadios3\"\r\n                        value=\"option3\"\r\n                        disabled\r\n                      />\r\n                      Disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"optionsRadio2\"\r\n                        id=\"optionsRadios4\"\r\n                        value=\"option4\"\r\n                        disabled\r\n                        checked\r\n                      />\r\n                      Selected and disabled\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-description\">\r\n            Add class <code>.form-check-{{ \"{\" }}color{{ \"}\" }}</code> for\r\n            checkbox and radio controls in theme colors\r\n          </p>\r\n          <form>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"form-check form-check-primary\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio1\"\r\n                        id=\"ExampleRadio1\"\r\n                        checked\r\n                      />\r\n                      Primary\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-success\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio2\"\r\n                        id=\"ExampleRadio2\"\r\n                        checked\r\n                      />\r\n                      Success\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-info\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio3\"\r\n                        id=\"ExampleRadio3\"\r\n                        checked\r\n                      />\r\n                      Info\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-danger\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio4\"\r\n                        id=\"ExampleRadio4\"\r\n                        checked\r\n                      />\r\n                      Danger\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-warning\">\r\n                    <label class=\"form-check-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        class=\"form-check-input\"\r\n                        name=\"ExampleRadio5\"\r\n                        id=\"ExampleRadio5\"\r\n                        checked\r\n                      />\r\n                      Warning\r\n                      <i class=\"input-helper\"></i>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Inline forms</h4>\r\n          <p class=\"card-description\">\r\n            Use the <code>.form-inline</code> class to display a series of\r\n            labels, form controls, and buttons on a single horizontal row\r\n          </p>\r\n          <form class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control mb-2 mr-sm-2\"\r\n              id=\"inlineFormInputName2\"\r\n              placeholder=\"Jane Doe\"\r\n            />\r\n\r\n            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\"\r\n              >Username</label\r\n            >\r\n            <div class=\"input-group mb-2 mr-sm-2\">\r\n              <div class=\"input-group-prepend\">\r\n                <div class=\"input-group-text\">@</div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inlineFormInputGroupUsername2\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-check mx-sm-2\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" checked />\r\n                Remember me\r\n                <i class=\"input-helper\"></i>\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-gradient-primary mb-2\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 grid-margin\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">Horizontal Two column</h4>\r\n          <form class=\"form-sample\">\r\n            <p class=\"card-description\">Personal info</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">First Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Last Name</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Gender</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Male</option>\r\n                      <option>Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input class=\"form-control\" placeholder=\"dd/mm/yyyy\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Category</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>Category1</option>\r\n                      <option>Category2</option>\r\n                      <option>Category3</option>\r\n                      <option>Category4</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Membership</label>\r\n                  <div class=\"col-sm-4\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios1\"\r\n                          value=\"\"\r\n                          checked\r\n                        />\r\n                        Free\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-5\">\r\n                    <div class=\"form-check\">\r\n                      <label class=\"form-check-label\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          class=\"form-check-input\"\r\n                          name=\"membershipRadios\"\r\n                          id=\"membershipRadios2\"\r\n                          value=\"option2\"\r\n                        />\r\n                        Professional\r\n                        <i class=\"input-helper\"></i>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-description\">Address</p>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 1</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">State</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Address 2</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Postcode</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">City</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <input type=\"text\" class=\"form-control\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group row\">\r\n                  <label class=\"col-sm-3 col-form-label\">Country</label>\r\n                  <div class=\"col-sm-9\">\r\n                    <select class=\"form-control\">\r\n                      <option>America</option>\r\n                      <option>Italy</option>\r\n                      <option>Russia</option>\r\n                      <option>Britain</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OceanImportSummaryComponent",
            "id": "component-OceanImportSummaryComponent-dcb7bd0993972b5e5a53501d200c42fdbd255967efef51fd6ab48d09e8956104dfd10831d955a2e210c0a737e01e514f899c13c926412b2fb791ad2bf97079eb",
            "file": "src/app/pages/ocean-import/ocean-import-summary/ocean-import-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ocean-import-summary",
            "styleUrls": [
                "./ocean-import-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ocean-import-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ocean-import-summary',\r\n  templateUrl: './ocean-import-summary.component.html',\r\n  styleUrls: ['./ocean-import-summary.component.scss']\r\n})\r\nexport class OceanImportSummaryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ocean-import-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>ocean-import-summary works!</p>\r\n"
        },
        {
            "name": "OeGridComponent",
            "id": "component-OeGridComponent-c6ed1511ce49f3d8693b359db1344a98042e662a91f037c3c926a6b9ae31268939ccf6e444eec7bb1a71f8c0486bbd442166cde2433652ada41a04d30f1e4042",
            "file": "src/app/pages/ocean-export/oe-grid/oe-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-oe-grid",
            "styleUrls": [
                "./oe-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./oe-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    { field: 'refNo', sortable: true, filter: true, resizable: true, checkboxSelection: true  },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryType', sortable: true, filter: true, resizable: true, checkboxSelection: true },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true  },\r\n    { field: 'description', sortable: true, filter: true, resizable: true  },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true  },\r\n    { field: 'user', sortable: true, filter: true, resizable: true  },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true},\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "rowData",
                    "defaultValue": "[\r\n      {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColDef } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-oe-grid',\r\n  templateUrl: './oe-grid.component.html',\r\n  styleUrls: ['./oe-grid.component.scss']\r\n})\r\nexport class OeGridComponent {\r\n\r\n  columnDefs: ColDef[] = [\r\n    { field: 'refNo', sortable: true, filter: true, resizable: true, checkboxSelection: true  },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryType', sortable: true, filter: true, resizable: true, checkboxSelection: true },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true  },\r\n    { field: 'description', sortable: true, filter: true, resizable: true  },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true  },\r\n    { field: 'user', sortable: true, filter: true, resizable: true  },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true},\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true},\r\n  ];\r\n\r\n  rowData = [\r\n      {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n\r\n\r\n  ]\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./oe-grid.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ag-grid-angular\r\n    style=\"width: auto; height: 700px;\"\r\n    class=\"ag-theme-alpine\"\r\n    [rowData]=\"rowData\"\r\n    [columnDefs]=\"columnDefs\"\r\n    [pagination]=true\r\n    [paginationPageSize]=10\r\n    [animateRows]=true\r\n    [sideBar]=\"true\"\r\n\r\n>\r\n</ag-grid-angular>\r\n"
        },
        {
            "name": "OiGridComponent",
            "id": "component-OiGridComponent-f331b9dc5e24247bd2721c5a7ea41363414c7b652ee46762dae18379a9e5bb16a61edf008e41cc597e18b5ebb1fb2bf151bc6bef76f5dfd5b1cc959a138cdd37",
            "file": "src/app/pages/ocean-import/oi-grid/oi-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-oi-grid",
            "styleUrls": [
                "./oi-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./oi-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n    { field: 'refNo', sortable: true, filter: true, resizable: true, checkboxSelection: true  },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryType', sortable: true, filter: true, resizable: true, checkboxSelection: true },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true  },\r\n    { field: 'description', sortable: true, filter: true, resizable: true  },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true  },\r\n    { field: 'user', sortable: true, filter: true, resizable: true  },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true},\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "rowData",
                    "defaultValue": "[\r\n      {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n\r\n\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColDef } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-oi-grid',\r\n  templateUrl: './oi-grid.component.html',\r\n  styleUrls: ['./oi-grid.component.scss']\r\n})\r\nexport class OiGridComponent {\r\n  \r\n  columnDefs: ColDef[] = [\r\n    { field: 'refNo', sortable: true, filter: true, resizable: true, checkboxSelection: true  },\r\n    { field: 'entryNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryType', sortable: true, filter: true, resizable: true, checkboxSelection: true },\r\n    { field: 'importer', sortable: true, filter: true, resizable: true },\r\n    { field: 'mot', sortable: true, filter: true, resizable: true },\r\n    { field: 'custRefNo', sortable: true, filter: true, resizable: true },\r\n    { field: 'entryDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'rlseDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'stmtDate', sortable: true, filter: true, resizable: true  },\r\n    { field: 'entryPort', sortable: true, filter: true, resizable: true  },\r\n    { field: 'description', sortable: true, filter: true, resizable: true  },\r\n    { field: 'vessel', sortable: true, filter: true, resizable: true  },\r\n    { field: 'user', sortable: true, filter: true, resizable: true  },\r\n    { field: 'arAmt', sortable: true, filter: true, resizable: true},\r\n    { field: 'apAmt', sortable: true, filter: true, resizable: true},\r\n  ];\r\n\r\n  rowData = [\r\n      {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n         {refNo: '2270495'  , entryNo:'EH3-22704956' , entryType:'01' , importer:'CAPBLU' , mot:'40' , custRefNo:'CAP-NY-8-22' , entryDate:'01/25/2022' , rlseDate:'01/25/2022' , stmtDate:'02/07/2022' ,\r\n         entryPort:'4701' , description:'Live Flounder' , vessel: 'KE',  user:'plim' , arAmt:'405.70' , apAmt: '69.50' },\r\n      {refNo:  '2270496', entryNo: 'EH3-22704964', entryType:'01' , importer: 'CAPBLU', mot:'40' , custRefNo:'SI-62683' , entryDate: '01/25/2022' , rlseDate:'01/25/2022' , stmtDate: '02/07/2022',\r\n         entryPort:'4701' , description:'Fresh Salom' , vessel:'AA' ,  user:'plim' , arAmt: '191.99', apAmt: '41.88'},\r\n      {refNo: '2270512' , entryNo: 'EH2-22705128', entryType:'01' , importer:'ADMCRA' , mot:'11' , custRefNo:'NB1175150B' , entryDate:'01/28/2022' , rlseDate:'01/28/2022' , stmtDate: '02/10/2022' ,\r\n         entryPort: '3501' , description: 'Commercial Freezer', vessel: 'Zim Rotterdam' ,  user:'plim' , arAmt:'55' , apAmt:'0' },\r\n\r\n\r\n  ]\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./oi-grid.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ag-grid-angular\r\n    style=\"width: auto; height: 700px;\"\r\n    class=\"ag-theme-alpine\"\r\n    [rowData]=\"rowData\"\r\n    [columnDefs]=\"columnDefs\"\r\n    [pagination]=true\r\n    [paginationPageSize]=10\r\n    [animateRows]=true\r\n    [sideBar]=\"true\"\r\n\r\n>\r\n</ag-grid-angular>\r\n"
        },
        {
            "name": "Page404Component",
            "id": "component-Page404Component-b00c2575bfdabeb3058c26b9cbd4fddad52204a41a1de8b527bcf30a1c90542427787e8668d2ce1b62e78171b0817cf3519bc3477bb3c6a124a484adacd284d2",
            "file": "src/app/extrapages/page404/page404.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page404",
            "styleUrls": [
                "./page404.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page404.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page404',\r\n  templateUrl: './page404.component.html',\r\n  styleUrls: ['./page404.component.scss']\r\n})\r\nexport class Page404Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page404.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"account-pages my-5 pt-5\">\r\n  <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n              <div class=\"text-center mb-5\">\r\n                  <h1 class=\"display-2 fw-medium\">40<i class=\"bx bx-buoy bx-spin text-primary display-3\"></i>4</h1>\r\n                  <h4 class=\"text-uppercase\">Sorry, page not found</h4>\r\n                  <div class=\"mt-5 text-center\">\r\n                      <a class=\"btn btn-primary\" routerLink=\"/\">Back to Dashboard</a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-8 col-xl-6\">\r\n              <div>\r\n                  <img src=\"assets/images/error-img.png\" alt=\"\" class=\"img-fluid\">\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PagesComponent",
            "id": "component-PagesComponent-bb17d46f944004b387398cf19d6eca9d071b9bc0fae314835a58629a3b7db00607101bd26ce1ffed3b961266f4965f52d30d25d7568d691553bb8301107d621d",
            "file": "src/app/pages/pages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pages",
            "styleUrls": [
                "./pages.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pages.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasChild",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "menuItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SideBarMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { MenuService } from '../services/menu.service';\r\nimport { Observable } from 'rxjs';\r\n// Import interface\r\nimport { SideBarMenuItem } from '../layouts/sidebar/sidebar.menu.model';\r\n\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styleUrls: ['./pages.component.scss']\r\n})\r\nexport class PagesComponent implements OnInit {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n    menuItem! : SideBarMenuItem[]\r\n    constructor(private breakpointObserver: BreakpointObserver,\r\n                private menuService: MenuService) {}\r\n\r\n    hasChild = (_: number, node: SideBarMenuItem) => !!node.children && node.children.length >0;\r\n\r\n    ngOnInit(): void {\r\n      this.menuService.getMenuitems().subscribe((data: SideBarMenuItem[]) =>\r\n      {\r\n        this.menuItem = data;\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  max-width: 80%;\r\n  margin: auto;\r\n}\r\n\r\n// .container {\r\n//   display: grid;\r\n//   grid-template-columns: auto auto auto auto;\r\n//   grid-gap:10px;\r\n//   background-color: #2196F3;\r\n//   padding: 10px;\r\n// }\r\n\r\n// .example-card {\r\n//     max-width: 300px;\r\n//     border: 10px;\r\n//   }\r\n\r\n//   .sidenav-container {\r\n//     position: absolute;\r\n//     top: 100px;\r\n//     bottom: 60px;\r\n//     left: 0;\r\n//     right: 0;\r\n//   }\r\n\r\n//   .sidenav {\r\n//     width: 200px;\r\n//     margin-top: 100px;\r\n//     background-color: lightskyblue;\r\n//     a:hover {\r\n//       color:lime;\r\n//       font-size: 20px;\r\n//     }\r\n\r\n//     a:visited {\r\n//       color: green\r\n//     }\r\n\r\n//   }\r\n\r\n//   .sidenav .mat-toolbar {\r\n//     background: inherit;\r\n\r\n//   }\r\n\r\n//   .mat-toolbar.mat-primary {\r\n//     position: sticky;\r\n//     top: 0;\r\n//     z-index: 0;\r\n//   }\r\n\r\n//   .toolbar-filler {\r\n//     flex: 1 1 auto\r\n//   }\r\n\r\n//   :host {\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     outline: none;\r\n//     width: 100%;\r\n//     background-color: lightseagreen;\r\n\r\n//     .mat-list-item.active {\r\n//       background-color: yellowgreen;\r\n//     }\r\n//     &:hover,\r\n//     &:focus {\r\n//       >.mat-list-item:not(.expanded) {\r\n//         background-color: ivory;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   .mat-list-item {\r\n//     padding: 8px 0;\r\n//     display: flex;\r\n//     width: auto;\r\n\r\n//     .routeIcon {\r\n//       margin-right: 40px;\r\n//     }\r\n//   }\r\n\r\n//   h1 {\r\n//     margin: auto;\r\n//     font-weight: bolder;\r\n//   }\r\n\r\n//   .a {\r\n//     border-radius: 5px;\r\n//     margin: 0 8px;\r\n//   }\r\n\r\n//   .example-spacer {\r\n//     flex: 1 1 auto;\r\n//   }\r\n",
                    "styleUrl": "./pages.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "PartiesComponent",
            "id": "component-PartiesComponent-e6e84dd520220e8fe03beaf8826c56ae5e795578fb05b6cfbb54765032dc4cadd8f32f1733fe8aa710d3b03e9cf8d3e5bdadfb6e870e417fb1386cd2dd713ee9",
            "file": "src/app/pages/parties/parties.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-parties",
            "styleUrls": [
                "./parties.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./parties.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-parties',\r\n  templateUrl: './parties.component.html',\r\n  styleUrls: ['./parties.component.scss']\r\n})\r\nexport class PartiesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./parties.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Parties\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Clients\">\r\n      <app-clients></app-clients>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Vendors\">\r\n      <app-vendors></app-vendors>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Carriers\">\r\n      <app-carriers></app-carriers>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "PartiesComponent",
            "id": "component-PartiesComponent-e6e84dd520220e8fe03beaf8826c56ae5e795578fb05b6cfbb54765032dc4cadd8f32f1733fe8aa710d3b03e9cf8d3e5bdadfb6e870e417fb1386cd2dd713ee9-1",
            "file": "src/app/pages/isf/parties/parties.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-parties",
            "styleUrls": [
                "./parties.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./parties.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-parties',\r\n  templateUrl: './parties.component.html',\r\n  styleUrls: ['./parties.component.scss']\r\n})\r\nexport class PartiesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n    max-width: 400px;\r\n}\r\n\r\ndiv {\r\n    margin-bottom: 50px;\r\n}",
                    "styleUrl": "./parties.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PartiesComponent-1",
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\r\n    <mat-card fxFlex=\"25\">\r\n        <mat-card-title>Selling Party</mat-card-title>\r\n        <mat-card-content><app-foreign></app-foreign></mat-card-content>\r\n      </mat-card>\r\n      <br>\r\n\r\n      <mat-card fxFlex=\"25\">\r\n        <mat-card-title>Consolidator Stuffing Location</mat-card-title>\r\n        <mat-card-content><app-foreign></app-foreign></mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"25\">\r\n        <mat-card-title>Consolidator</mat-card-title>\r\n        <mat-card-content><app-foreign></app-foreign></mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"25\">\r\n        <mat-card-title>Importer of Record</mat-card-title>\r\n        <mat-card-content><app-domestic></app-domestic></mat-card-content>\r\n      </mat-card>\r\n\r\n\r\n      <br>\r\n</div>\r\n<mat-divider></mat-divider>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\r\n\r\n  <mat-card fxFlex=\"33\">\r\n    <mat-card-title>Consignee</mat-card-title>\r\n    <mat-card-content><app-domestic></app-domestic></mat-card-content>\r\n  </mat-card>\r\n  <br>\r\n  <mat-card fxFlex=\"33\">\r\n    <mat-card-title>Buying Party</mat-card-title>\r\n    <mat-card-content><app-domestic></app-domestic></mat-card-content>\r\n  </mat-card>\r\n  <br>\r\n  <mat-card fxFlex=\"33\">\r\n    <mat-card-title>Ship To</mat-card-title>\r\n    <mat-card-content><app-domestic></app-domestic></mat-card-content>\r\n  </mat-card>\r\n</div>\r\n<mat-divider></mat-divider>\r\n"
        },
        {
            "name": "PolarChartComponent",
            "id": "component-PolarChartComponent-556b9c20539863f1899ff241f5940c5bc02a5fa28fa561917a31301701db64ca6f66b76055a4d6470a0742d8b8202671e90d1a546b1d80b9eae30adeb8458b1f",
            "file": "src/app/widgets/polar-chart/polar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-polar-chart",
            "styleUrls": [
                "./polar-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./polar-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartComponent",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chart'"
                        }
                    ]
                },
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ChartOptions> | any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ApexChart,\r\n  ApexFill,\r\n  ApexNonAxisChartSeries,\r\n  ApexResponsive,\r\n  ApexStroke\r\n} from \"ng-apexcharts\";\r\nimport { Component, ViewChild } from \"@angular/core\";\r\n\r\nimport { ChartComponent } from \"ng-apexcharts\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  responsive: ApexResponsive[];\r\n  labels: any;\r\n  stroke: ApexStroke;\r\n  fill: ApexFill;\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-polar-chart',\r\n  templateUrl: './polar-chart.component.html',\r\n  styleUrls: ['./polar-chart.component.scss']\r\n})\r\nexport class PolarChartComponent {\r\n  @ViewChild(\"chart\") chart!: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [14, 23, 21, 17, 15, 10, 12, 17, 21],\r\n      chart: {\r\n        type: \"polarArea\"\r\n      },\r\n      stroke: {\r\n        colors: [\"#fff\"]\r\n      },\r\n      fill: {\r\n        opacity: 0.8\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: \"bottom\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\r\n  max-width: 380px;\r\n  margin: 35px auto;\r\n  padding: 0;\r\n}\r\n",
                    "styleUrl": "./polar-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "templateData": "<!--The content below is only a placeholder and can be replaced.-->\r\n<div id=\"chart\">\r\n  <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [fill]=\"chartOptions.fill\"\r\n    [stroke]=\"chartOptions.stroke\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n  ></apx-chart>\r\n</div>\r\n"
        },
        {
            "name": "PortsComponent",
            "id": "component-PortsComponent-ef4c122e2196d80c057e1b1e999b475d59b2375c72b03be88cd27983aebd518a39f82f10acc7414c44a1c1e4a36fcecd1768d037b425a91bee1553099b4474eb",
            "file": "src/app/pages/tables/ports/ports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ports",
            "styleUrls": [
                "./ports.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PortsDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<PortsItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { PortsDataSource, PortsItem } from './ports-datasource';\r\n\r\n@Component({\r\n  selector: 'app-ports',\r\n  templateUrl: './ports.component.html',\r\n  styleUrls: ['./ports.component.scss']\r\n})\r\nexport class PortsComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<PortsItem>;\r\n  dataSource: PortsDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new PortsDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./ports.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  U.S. Ports\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "ProductsComponent",
            "id": "component-ProductsComponent-12b91f1594d10695ca8363199a5cf92636d190eb1e963a207214b8e762683a03e784d8d0fd6117ab05baf4b584041cfa469e92fb0b0f04ef3eae3148903693a8",
            "file": "src/app/pages/tables/products/products.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products",
            "styleUrls": [
                "./products.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./products.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductsDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<ProductsItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ProductsDataSource, ProductsItem } from './products-datasource';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<ProductsItem>;\r\n  dataSource: ProductsDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new ProductsDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./products.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Products Tables for Clients\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-32dd7a9e2de44998395f76e2895eed9a9f8dacfe210dca5a812a7ed431fa032211a1f2078946c212be357ab29cc3edea7b0d27cd63e0713b1f8d5dcf1c24f7bd",
            "file": "src/app/account/auth/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" *ngIf=\"currentUser; else loggedOut\" fxLayoutAlign ='space-around center' >\r\n  <header class=\"jumbotron\">\r\n    <h3>\r\n      <strong>{{ currentUser.username }}</strong> Profile\r\n    </h3>\r\n  </header>\r\n  <p>\r\n    <strong>Token:</strong>\r\n    {{ currentUser.accessToken.substring(0, 20) }} ...\r\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\r\n  </p>\r\n  <p>\r\n    <strong>Email:</strong>\r\n    {{ currentUser.email }}\r\n  </p>\r\n  <strong>Roles:</strong>\r\n  <ul>\r\n    <li *ngFor=\"let role of currentUser.roles\">\r\n      {{ role }}\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<ng-template #loggedOut>\r\n  Please login.\r\n</ng-template>\r\n"
        },
        {
            "name": "ProfitByCustomerComponent",
            "id": "component-ProfitByCustomerComponent-59b5922711d2aa39b5f082a60add9a2c16c3ca9dbbeeaa69e2fc96673a805112447d0ce6fc1aca78280e65f23498ff24698b866e0dc70dde1c65e5e6acf22678",
            "file": "src/app/pages/reports/profit-by-customer/profit-by-customer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profit-by-customer",
            "styleUrls": [
                "./profit-by-customer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profit-by-customer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profit-by-customer',\r\n  templateUrl: './profit-by-customer.component.html',\r\n  styleUrls: ['./profit-by-customer.component.scss']\r\n})\r\nexport class ProfitByCustomerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profit-by-customer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>profit-by-customer works!</p>\r\n"
        },
        {
            "name": "ProfitByImporterComponent",
            "id": "component-ProfitByImporterComponent-430716bad48e51928516a63ef06765d0365e06e9455f03cda4083ed9693a35e0983ca81e3492fc9d06e64ef1b60952d6067fd88fcfd32715fc48d49166e12bed",
            "file": "src/app/pages/reports/profit-by-importer/profit-by-importer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profit-by-importer",
            "styleUrls": [
                "./profit-by-importer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profit-by-importer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profit-by-importer',\r\n  templateUrl: './profit-by-importer.component.html',\r\n  styleUrls: ['./profit-by-importer.component.scss']\r\n})\r\nexport class ProfitByImporterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profit-by-importer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>profit-by-importer works!</p>\r\n"
        },
        {
            "name": "ProfitBySalesmanComponent",
            "id": "component-ProfitBySalesmanComponent-a2422ba11eb5ad0c4c92ef85e8f0c63f5e931beddfb9ddb64b8152f5c651b6eed0c6dc9219338f4376db82e946acfd84ee5a26a9dd3e4da5ce50dcbaa3036b97",
            "file": "src/app/pages/reports/profit-by-salesman/profit-by-salesman.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profit-by-salesman",
            "styleUrls": [
                "./profit-by-salesman.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profit-by-salesman.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profit-by-salesman',\r\n  templateUrl: './profit-by-salesman.component.html',\r\n  styleUrls: ['./profit-by-salesman.component.scss']\r\n})\r\nexport class ProfitBySalesmanComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profit-by-salesman.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>profit-by-salesman works!</p>\r\n"
        },
        {
            "name": "RadarChartComponent",
            "id": "component-RadarChartComponent-0d93ecb8d6e5c8ab9d9613ebc549bc3d4425f0cb023316c1c1bcdd634221cc5d4c55369363e4f8b53a33e9d15175c44c5880409bada938690def89bea6bf6e33",
            "file": "src/app/widgets/radar-chart/radar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radar-chart",
            "styleUrls": [
                "./radar-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radar-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "radarChartData",
                    "defaultValue": "[\r\n    {data: [120, 130, 180, 70], label: '2017'},\r\n    {data: [90, 150, 200, 45], label: '2018'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "radarChartLabels",
                    "defaultValue": "['Q1', 'Q2', 'Q3', 'Q4']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "radarChartType",
                    "defaultValue": "'radar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-radar-chart',\r\n  templateUrl: './radar-chart.component.html',\r\n  styleUrls: ['./radar-chart.component.scss']\r\n})\r\nexport class RadarChartComponent implements OnInit {\r\n  public radarChartLabels = ['Q1', 'Q2', 'Q3', 'Q4'];\r\n  public radarChartData = [\r\n    {data: [120, 130, 180, 70], label: '2017'},\r\n    {data: [90, 150, 200, 45], label: '2018'}\r\n  ];\r\n  public radarChartType = 'radar';\r\n  constructor() { }\r\n  ngOnInit() {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "canvas {\r\n  width : 200px;\r\n  height : 100px;\r\n  border: 1px solid #000000\r\n}\r\n",
                    "styleUrl": "./radar-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div style=\"display: block\"  >\r\n  <canvas\r\n          baseChart\r\n          [datasets]=\"radarChartData\"\r\n          [labels]=\"radarChartLabels\"\r\n          [type]=\"'radar'\">\r\n  </canvas>\r\n</div>\r\n"
        },
        {
            "name": "RecoverpwdComponent",
            "id": "component-RecoverpwdComponent-28145de9044499cc420d7dccb3fc84d4300540ac4c5f1a936080642a7e6aed0b2b316148fe0f1248a8670e08380b1517c537627a6e478f1d8f3625ba122e6cc9",
            "file": "src/app/account/auth/recoverpwd/recoverpwd.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recoverpwd",
            "styleUrls": [
                "./recoverpwd.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recoverpwd.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recoverpwd',\r\n  templateUrl: './recoverpwd.component.html',\r\n  styleUrls: ['./recoverpwd.component.scss']\r\n})\r\nexport class RecoverpwdComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recoverpwd.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>recoverpwd works!</p>\r\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-ce241b57b3195290ed49a977c5cac0c96ba9ca888199f064f485d734d69c91e00bbacee01796d6fce9538ddc11d6a0a69c7f1bd00200576bd3a4a2ee89981d3e",
            "file": "src/app/account/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "registerForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'registerform', {static: false}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRegisterSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  @ViewChild('registerform', { static: false }) registerForm!: NgForm;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Submits a post request to the /users/register route of our Express app\r\n  onRegisterSubmit() {\r\n    const username = this.registerForm.value.username;\r\n    const password = this.registerForm.value.password;\r\n\r\n    const headers = new HttpHeaders({'Content-type': 'application/json'});\r\n\r\n    const reqObject = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    this.http.post('http://localhost:3000/users/register', reqObject, { headers: headers }).subscribe(\r\n\r\n      // The response data\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n\r\n      // If there is an error\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n\r\n      // When observable completes\r\n      () => {\r\n        console.log('done!');\r\n        this.router.navigate(['login']);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: sans-serif;\r\n  background-color: #E4F0FF;\r\n\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 300px;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-gap: 12px;\r\n  grid-template-areas:\r\n  \"header header header\"\r\n  \"content content side\"\r\n  \"footer footer footer\";\r\n  height: 90vh;\r\n  width: 100vw;\r\n  background-image: url('https://cdn.pixabay.com/photo/2022/01/16/13/25/cityscape-6942013__340.jpg');\r\n\r\n}\r\nheader {\r\n  color: white;\r\n  font-size: 14px;\r\n  grid-area: header;\r\n  text-align: center;\r\n  background-color: #FA7D44;\r\n}\r\n\r\nnav {\r\n  grid-area: nav;\r\n  margin-left: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\napp-privacy-policy,\r\nmain {\r\n  grid-area: content;\r\n  background-color: #F4CE46;\r\n  padding: 25px;\r\n}\r\n\r\naside {\r\n  grid-area: side;\r\n  margin-right: 0.6rem;\r\n  background-color: #2A92BF;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background-color:#2BB961;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 25px 0;\r\n}\r\nul li {\r\n  color: white;\r\n}\r\nul li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n}\r\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n\r\n  <header>\r\n    <!-- Header -->\r\n    <h1 style=\"font-weight: bolder; text-align: center;\">Manufacturers/Shippers</h1>\r\n  </header>\r\n\r\n  <main>\r\n    <!-- Main Content -->\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Iste voluptates sint excepturi non nam ratione velit libero eius,\r\n      asperiores, temporibus vero beatae perspiciatis maxime iure repellat\r\n      quam ut ducimus maiores!\r\n    </p>\r\n  </main>\r\n\r\n  <aside>\r\n    <mat-card class=\"example-card\" >\r\n      <mat-card-header>\r\n        <mat-card-title>Log in</mat-card-title>\r\n      </mat-card-header>\r\n      <form class=\"example-form\">\r\n        <mat-card-content>\r\n          <mat-form-field appearance=\"fill\">\r\n            <input matInput placeholder=\"Username\">\r\n          </mat-form-field>\r\n          <mat-form-field appearance =\"fill\">\r\n            <input matInput placeholder=\"Password\">\r\n          </mat-form-field>\r\n        </mat-card-content>\r\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\">Log in</button>\r\n      </form>\r\n    </mat-card>\r\n    <mat-divider></mat-divider>\r\n\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <mat-card-title>Register</mat-card-title>\r\n      </mat-card-header>\r\n      <form (ngSubmit)=\"onRegisterSubmit()\" #registerform=\"ngForm\">\r\n        <div>\r\n          <p>Enter a username</p>\r\n          <input type=\"text\" name=\"username\" ngModel>\r\n          <p>Enter a password</p>\r\n          <input type=\"password\" name=\"password\" ngModel>\r\n        </div>\r\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\">Register</button>\r\n      </form>\r\n    </mat-card>\r\n\r\n  </aside>\r\n  <footer>\r\n    <!-- Footer -->\r\n    <span>\r\n      Copyright 2019-2020\r\n  </span>\r\n  </footer>\r\n\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "ReportsComponent",
            "id": "component-ReportsComponent-663ac1a84b4dc4e1728d3061ebdda8453595fde1816ad65cb9f4763abb32a72adaaf18451046cbf4f27ba7046cdd784e60991ecf42de0ecc73afca3002af2911",
            "file": "src/app/pages/reports/reports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reports",
            "styleUrls": [
                "./reports.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav a {\r\n  padding: 2rem;\r\n}\r\n\r\na {\r\n  font-size: large;\r\n}\r\n\r\n.container {\r\n  min-height: 900px;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./reports.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Reports\r\n  </h1>\r\n\r\n  <div class=\"container row\">\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Customs Brokerage\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button routerLink=\"entry\" ngbDropdownItem>Entry Report</button>\r\n          <button routerLink=\"liquidation\" ngbDropdownItem>Liquidation</button>\r\n          <button routerLink=\"exam\" ngbDropdownItem>Customs' Exam</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Profit and Loss\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button routerLink=\"pnlbyImporter\" ngbDropdownItem>\r\n            By Importer\r\n          </button>\r\n          <button routerLink=\"pnlbySalesman\" ngbDropdownItem>\r\n            By Salesman\r\n          </button>\r\n          <button routerLink=\"pnlbyCustomer\" ngbDropdownItem>\r\n            By Customer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Air Exports\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Ocean Exports\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Air Imports\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Ocean Imports\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          AMS\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          ISF\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Accounting\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          id=\"dropdownBasic1\"\r\n          ngbDropdownToggle\r\n        >\r\n          Compliance\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "RightsidebarComponent",
            "id": "component-RightsidebarComponent-30731f3b8939b927b3a5f0358a38ae7d71a429323031192f171063754e76ce19737b4be255d67a9df3d7fc72afc1cc26c5d1584b4582baafce16df595d095ae2",
            "file": "src/app/layouts/rightsidebar/rightsidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rightsidebar",
            "styleUrls": [
                "./rightsidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rightsidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rightsidebar',\r\n  templateUrl: './rightsidebar.component.html',\r\n  styleUrls: ['./rightsidebar.component.scss']\r\n})\r\nexport class RightsidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./rightsidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>rightsidebar works!</p>\r\n"
        },
        {
            "name": "SeaAmsComponent",
            "id": "component-SeaAmsComponent-992591669931b3af8511675e301215a5cb6260c8322f9dd2f1e98f97b2684e7371441908b1060d91852c3a663962ea64bd75f0d126b4911e155046bd6aa942f8",
            "file": "src/app/pages/sea-ams/sea-ams.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sea-ams",
            "styleUrls": [
                "./sea-ams.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sea-ams.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new UntypedFormControl(new Date())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "myControl",
                    "defaultValue": "new UntypedFormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "options",
                    "defaultValue": "['One', 'Two', 'Three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "serializedDate",
                    "defaultValue": "new UntypedFormControl(new Date().toISOString())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-sea-ams',\r\n  templateUrl: './sea-ams.component.html',\r\n  styleUrls: ['./sea-ams.component.scss']\r\n})\r\nexport class SeaAmsComponent  {\r\n  myControl = new UntypedFormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n\r\n  date = new UntypedFormControl(new Date());\r\n  serializedDate = new UntypedFormControl(new Date().toISOString());\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n\r\ndiv.container {\r\n  color: #eeeeee;\r\n  margin-bottom: 10px;\r\n}\r\n\r\ndiv.container > div {\r\n  height: 50px;\r\n  width: 200px;\r\n  background-color: blue;\r\n}\r\n\r\n.example-form {\r\n  min-width: 150px;\r\n  width: 100%;\r\n  height: 80%;\r\n}\r\n\r\n.example-full-width {\r\n  width: 100%;\r\n}\r\n\r\nmat-form-field {\r\n  margin-right: 12px;\r\n}\r\n\r\nfieldset {\r\n  background-color: #eeeeee;\r\n}\r\n\r\nlegend {\r\n  background-color: gray;\r\n  color: white;\r\n  padding: 5px 10px;\r\n}\r\n\r\ninput {\r\n  margin: 5px;\r\n}\r\n",
                    "styleUrl": "./sea-ams.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Sea AMS\r\n  </h1>\r\n\r\n  <mat-tab-group mat-align-tabs=\"start\" style=\"color: pink\">\r\n    <mat-tab label=\"Sea AMS Dashboard\">\r\n      <app-sea-ams-dashboard></app-sea-ams-dashboard>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Sea AMS Summary\">\r\n      <app-ams-summary></app-ams-summary>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"New Sea AMS\">\r\n      <app-ams-detail></app-ams-detail>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">\r\n    Back to Mainpage\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "SeaAmsDashboardComponent",
            "id": "component-SeaAmsDashboardComponent-9ec3a341ae86b9da3ab9953e6b6b86c9f62943deffb57e2c782850465e3d7754e2b18aec484f258d921e238eb76f34a6e2b8b7e2343b61fa2891d070e3442ae5",
            "file": "src/app/pages/sea-ams/sea-ams-dashboard/sea-ams-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sea-ams-dashboard",
            "styleUrls": [
                "./sea-ams-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sea-ams-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sea-ams-dashboard',\r\n  templateUrl: './sea-ams-dashboard.component.html',\r\n  styleUrls: ['./sea-ams-dashboard.component.scss']\r\n})\r\nexport class SeaAmsDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./sea-ams-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-donut-chart></app-donut-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-polar-chart></app-polar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "ShipmentComponent",
            "id": "component-ShipmentComponent-d89d4fa63bf6b4dbb178d4012b403a0d84e131340ce3bb74d9d666f6c2374d4aaf254f480db34276a01064304ea65fbf14ca8ea895cc2486c02f4db370986e34",
            "file": "src/app/pages/isf/shipment/shipment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipment",
            "styleUrls": [
                "./shipment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actions",
                    "defaultValue": "[\r\n    { value: 'CT=Complete Transaction' },\r\n    { value: 'FR=Flexible Range' },\r\n    { value: 'FT=Flexible Timing' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Action[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "isfShipment",
                    "defaultValue": "this.fb.group({\r\n    ISFNo:[''],\r\n    ISFType:[''],\r\n    MOT:[''],\r\n    ShptType:[''],\r\n    Action: [''],\r\n    AmsBL:[''],\r\n    AddlAmsBL:this.fb.array([\r\n      this.fb.control('')\r\n    ]),\r\n    MasterBL:[''],\r\n    FileNo:[''],\r\n    CustRefNo: [''],\r\n    ImporterID:['']\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isfTypes",
                    "defaultValue": "[\r\n    {value: 'ISF-10'},\r\n    {value: 'ISF-5'},\r\n    {value: 'ISF-5 to ISF-10'},\r\n    {value: 'ISF-10 to ISF-5'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "isfType[]",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "mots",
                    "defaultValue": "[\r\n    {value: '11-Containerized'},\r\n    {value: '10-Breakbulk'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "mot[]",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "selectedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "selectedValue1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "selectedValue2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selectedValue3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "shipTypes",
                    "defaultValue": "[\r\n    { value: '01=Standard or Regular Filings' },\r\n    { value: '02=To Order Shipment' },\r\n    { value: '03=Household Goods / Personal Effects' },\r\n    { value: '04=Military, Government' },\r\n    { value: '05=Diplomatic Shipment' },\r\n    { value: '06=Carnet' },\r\n    { value: '07=US Goods Returned' },\r\n    { value: '08=FTZ Shipment' },\r\n    { value: '09=International Mail Shipments' },\r\n    { value: '10=Outer Continental Shipments' },\r\n    { value: '11=Informal' }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShipType[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "addBill",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, FormControl } from '@angular/forms';\r\n\r\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\r\n\r\ninterface ShipType {\r\n  value: string;\r\n}\r\n\r\ninterface Action {\r\n  value: string;\r\n}\r\n\r\ninterface isfType {\r\n  value: string;\r\n}\r\n\r\ninterface mot {\r\n  value: string;\r\n}\r\n@Component({\r\n  selector: 'app-shipment',\r\n  templateUrl: './shipment.component.html',\r\n  styleUrls: ['./shipment.component.scss']\r\n})\r\nexport class ShipmentComponent implements OnInit {\r\n\r\n  selectedValue!: string;\r\n  selectedValue1!: string;\r\n  selectedValue2!: string;\r\n  selectedValue3!: string;\r\n\r\n  isfShipment = this.fb.group({\r\n    ISFNo:[''],\r\n    ISFType:[''],\r\n    MOT:[''],\r\n    ShptType:[''],\r\n    Action: [''],\r\n    AmsBL:[''],\r\n    AddlAmsBL:this.fb.array([\r\n      this.fb.control('')\r\n    ]),\r\n    MasterBL:[''],\r\n    FileNo:[''],\r\n    CustRefNo: [''],\r\n    ImporterID:['']\r\n  })\r\n\r\n  shipTypes: ShipType[] = [\r\n    { value: '01=Standard or Regular Filings' },\r\n    { value: '02=To Order Shipment' },\r\n    { value: '03=Household Goods / Personal Effects' },\r\n    { value: '04=Military, Government' },\r\n    { value: '05=Diplomatic Shipment' },\r\n    { value: '06=Carnet' },\r\n    { value: '07=US Goods Returned' },\r\n    { value: '08=FTZ Shipment' },\r\n    { value: '09=International Mail Shipments' },\r\n    { value: '10=Outer Continental Shipments' },\r\n    { value: '11=Informal' }\r\n  ];\r\n\r\n  actions: Action[] = [\r\n    { value: 'CT=Complete Transaction' },\r\n    { value: 'FR=Flexible Range' },\r\n    { value: 'FT=Flexible Timing' }\r\n  ];\r\n\r\n  isfTypes: isfType[] = [\r\n    {value: 'ISF-10'},\r\n    {value: 'ISF-5'},\r\n    {value: 'ISF-5 to ISF-10'},\r\n    {value: 'ISF-10 to ISF-5'}\r\n  ]\r\n\r\n  mots: mot[] = [\r\n    {value: '11-Containerized'},\r\n    {value: '10-Breakbulk'}\r\n  ]\r\n\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get AddlAmsBl(): UntypedFormArray {\r\n    return this.isfShipment.get('AddlAmsBL') as UntypedFormArray\r\n  }\r\n\r\n  addBill() {\r\n    this.AddlAmsBl.push(this.fb.control(''))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.example-full-width  {\r\n  width: 100%;\r\n  margin-left: 200px;\r\n}\r\n\r\ntd {\r\n  padding-right: 8px;\r\n}\r\n\r\n.mat-radio-button ~ .mat-radio-button {\r\n  margin-left: 16px;\r\n}\r\n\r\ntr {\r\n  width: 100%;\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./shipment.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 79,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "AddlAmsBl": {
                    "name": "AddlAmsBl",
                    "getSignature": {
                        "name": "AddlAmsBl",
                        "type": "",
                        "returnType": "UntypedFormArray",
                        "line": 87
                    }
                }
            },
            "templateData": "<h1>Shipment Info</h1>\r\n<div>\r\n  <table\r\n    class=\"container-fluid example-full-width\"\r\n    fxLayout=\"column\"\r\n    fxFlex=\"30\"\r\n    fxLayoutAlign=\"space-between start\"\r\n  >\r\n    <tr>\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>ISF No.</mat-label>\r\n          <input matInput id=\"ISFNo\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>ISF</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedValue2\" name=\"isf\">\r\n            <mat-option *ngFor=\"let isf of isfTypes\" [value]=\"isf.value\">\r\n              {{ isf.value }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>MOT</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedValue3\" name=\"mot\">\r\n            <mat-option *ngFor=\"let mot of mots\" [value]=\"mot.value\">\r\n              {{ mot.value }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </td>\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Shpt Type.</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedValue\" name=\"shipment\">\r\n            <mat-option\r\n              *ngFor=\"let shipment of shipTypes\"\r\n              [value]=\"shipment.value\"\r\n            >\r\n              {{ shipment.value }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Action</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedValue1\" name=\"action\">\r\n            <mat-option *ngFor=\"let action of actions\" [value]=\"action.value\">\r\n              {{ action.value }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>AMS B/L</mat-label>\r\n          <input matInput id=\"AmsBL\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Add'l AMS B/L #1</mat-label>\r\n          <input matInput id=\"Add1AmsBL\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Master B/L #</mat-label>\r\n          <input matInput id=\"MasterBL\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>File No</mat-label>\r\n          <input matInput id=\"FileNo\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Customer Ref #</mat-label>\r\n          <input matInput id=\"CustRefNo\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Importer ID #</mat-label>\r\n          <input matInput id=\"ImporterID\" type=\"text\" />\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-5e6dc006a7082974166c847709be6c9b172c35b9d9ed59ea34d519f7a4024eb26f685b1e7d4d2cdbac065afe43f8ae70f11422279b70565c363eae31466319a2",
            "file": "src/app/layouts/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "depth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "SideBarMenuItem",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ariaExpanded",
                    "defaultValue": "this.expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.aria-expanded'"
                        }
                    ]
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarNavService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onItemSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "SideBarMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "SideBarMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.aria-expanded",
                    "defaultValue": "this.expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\n\r\nimport {Router} from '@angular/router';\r\nimport { SideBarMenuItem } from '../../layouts/sidebar/sidebar.menu.model'\r\nimport { SidebarNavService } from './sidebar-nav.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n  animations: [\r\n    trigger('indicatorRotate', [\r\n      state('collapsed', style({transform: 'rotate(0deg)'})),\r\n      state('expanded', style({transform: 'rotate(180deg)'})),\r\n      transition('expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\r\n      ),\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  expanded!: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @Input()  item!: SideBarMenuItem;\r\n  @Input() depth!: number;\r\n\r\n  constructor(public sidenav: SidebarNavService,\r\n              public router: Router) {\r\n                if (this.depth === undefined){\r\n                  this.depth = 0;\r\n               }\r\n              }\r\n\r\n  ngOnInit()  {\r\n    this.sidenav.currentUrl.subscribe((url: string) => {\r\n      if (this.item.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.item.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item:SideBarMenuItem) {\r\n    if (!this.item.children || !this.item.children.length) {\r\n      this.router.navigate([this.item.route]);\r\n      this.sidenav.closeNav();\r\n    }\r\n    if (this.item.children && this.item.children.length) {\r\n      this.expanded = !this.expanded;\r\n    }\r\n  }\r\n  }\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  outline: none;\r\n  width: 100%;\r\n\r\n  .mat-list-item.active {\r\n    background-color: yellowgreen;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    >.mat-list-item:not(.expanded) {\r\n      background-color: ivory;\r\n    }\r\n  }\r\n}\r\n\r\n.mat-list-item {\r\n  padding: 8px 0;\r\n  display: flex;\r\n  width: auto;\r\n\r\n  .routeIcon {\r\n    margin-right: 40px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sidenav",
                        "type": "SidebarNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "sidenav",
                        "type": "SidebarNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<a mat-list-item [ngStyle]=\"{'padding-left': (depth * 12) + 'px'}\" (click)=\"onItemSelected(item)\"\r\n   [ngClass]=\"{'active': item.route ? router.isActive(item.route, true): false, 'expanded': expanded}\"\r\n   class=\"menu-list-item\">\r\n  <mat-icon class=\"routeIcon\">{{item.iconName}}</mat-icon>\r\n  {{item.displayName}}\r\n  <span fxFlex *ngIf=\"item.children && item.children.length\">\r\n    <span fxFlex></span>\r\n    <mat-icon [@indicatorRotate]=\"expanded ? 'expanded': 'collapsed'\">\r\n      expand_more\r\n    </mat-icon>\r\n  </span>\r\n</a>\r\n<div *ngIf=\"expanded\">\r\n  <app-sidebar *ngFor=\"let child of item.children\" [item]=\"child\" [depth]=\"depth+1\">\r\n  </app-sidebar>\r\n</div>\r\n"
        },
        {
            "name": "StatesComponent",
            "id": "component-StatesComponent-3f022cc5595ddaf2ae15fa83b6b572344f104273195c67f2c1536a1b4a8bdae1c69d7226f7d2c8d05d89daca2302348eccbf178a8cc395cf0b6d58743f650c7c",
            "file": "src/app/pages/tables/states/states.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-states",
            "styleUrls": [
                "./states.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./states.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatesDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<StatesItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { StatesDataSource, StatesItem } from './states-datasource';\r\n\r\n@Component({\r\n  selector: 'app-states',\r\n  templateUrl: './states.component.html',\r\n  styleUrls: ['./states.component.scss']\r\n})\r\nexport class StatesComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<StatesItem>;\r\n  dataSource: StatesDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new StatesDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./states.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  U.S. States\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "TablesComponent",
            "id": "component-TablesComponent-bf5359e79b82d896f5205ac4fad5556c226fc7e2928a3263689141e0439684746a9b369bc14184961019642acc4197a65fb7fe6824de3d9def6e5570f33841b3",
            "file": "src/app/pages/tables/tables.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tables",
            "styleUrls": [
                "./tables.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tables.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tables',\r\n  templateUrl: './tables.component.html',\r\n  styleUrls: ['./tables.component.scss']\r\n})\r\nexport class TablesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav a {\r\n  padding: 2rem;\r\n}\r\n\r\na {\r\n  font-size: large;\r\n  color: lightgray;\r\n}\r\n\r\nbutton {\r\n  margin: 20px 20px 20px 20px;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n  min-height: 900px;\r\n}\r\n",
                    "styleUrl": "./tables.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Tables\r\n  </h1>\r\n  <nav>\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-primary\">\r\n        <a routerLink=\"carriers\" routerLinkActive=\"active\">Carriers</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-secondary\">\r\n        <a routerLink=\"ports\" routerLinkActive=\"active\">Ports</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-success\">\r\n        <a routerLink=\"foreignPorts\" routerLinkActive=\"active\">Foreign Ports</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-danger\">\r\n        <a routerLink=\"country\" routerLinkActive=\"active\">Countries</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-warning\">\r\n        <a routerLink=\"states\" routerLinkActive=\"active\">U.S. States</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-info\">\r\n        <a routerLink=\"firms\" routerLinkActive=\"active\">FIRMS Codes</a>\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-primary\">\r\n        <a routerLink=\"hts\" routerLinkActive=\"active\"\r\n          >U.S. Harmonized Tariffs Code</a\r\n        >\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-secondary\">\r\n        <a routerLink=\"add-cvd\" routerLinkActive=\"active\">ADD CVD Cases</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-success\">\r\n        <a routerLink=\"fdaProduct\" routerLinkActive=\"active\"\r\n          >FDA Product Codes</a\r\n        >\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-danger\">\r\n        <a routerLink=\"currency\" routerLinkActive=\"active\"\r\n          >Foreign Currency Tables</a\r\n        >\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-warning\">\r\n        <a routerLink=\"vessel\" routerLinkActive=\"active\">Vessel Codes</a>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-info\">\r\n        <a routerLink=\"products\" routerLinkActive=\"active\">Products Table</a>\r\n      </button>\r\n    </div>\r\n  </nav>\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "Todo02Component",
            "id": "component-Todo02Component-6574388b41f7fc9a80beb7efdadc179c59d9eaa4f86ef655fa285570ccfc329c256b8f838414107637aa789405f29546bd9c9e2b94a54ed738be41256ec29394",
            "file": "src/app/widgets/todo02/todo02.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo02",
            "styleUrls": [
                "./todo02.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo02.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "completed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "newTodoForm",
                    "defaultValue": "this.formBuilder.group({\r\n    todoItem: ''\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "taskList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "addTask",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markDone",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeTask",
                    "args": [
                        {
                            "name": "i",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { UntypedFormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-todo02',\r\n  templateUrl: './todo02.component.html',\r\n  styleUrls: ['./todo02.component.scss']\r\n})\r\nexport class Todo02Component implements OnInit {\r\n\r\n  completed: boolean = false;\r\n  taskList: any[] = []\r\n  newTodoForm = this.formBuilder.group({\r\n    todoItem: ''\r\n  })\r\n\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder\r\n  ) { }\r\n\r\n\r\n\r\n  addTask() {\r\n    const value = this.newTodoForm.value.todoItem\r\n    this.taskList.push({ id: this.taskList.length, name: value })\r\n    window.localStorage.setItem('task', JSON.stringify(this.taskList))\r\n    this.newTodoForm.reset();\r\n\r\n  }\r\n\r\n  removeTask(i: any) {\r\n    this.taskList.splice(i, 1)\r\n    window.localStorage.setItem('task', JSON.stringify(this.taskList))\r\n\r\n  }\r\n\r\n  markDone(value: any) {\r\n    value.completed = !value.completed\r\n    value.completed === true ?\r\n      this.taskList.push(this.taskList.splice(this.taskList.indexOf(value), 1)[0]) :\r\n      this.taskList.unshift(this.taskList.splice(this.taskList.indexOf(value), 1)[0])\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.taskList = window.localStorage.getItem('task') ? JSON.parse(localStorage.getItem('task')!) : []\r\n  }\r\n\r\n}\r\nfunction todoItem(todoItem: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo02.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"h-100 w-full flex items-center justify-center bg-teal-lightest font-sans\">\r\n  <div class=\"bg-white rounded shadow p-6 m-4 w-full lg:w-3/4 lg:max-w-lg\">\r\n      <div class=\"mb-4\">\r\n          <h1 class=\"text-4xl font-black\">Todo List</h1>\r\n          <form [formGroup]=\"newTodoForm\" class=\"flex mt-4\" (ngSubmit)=\"addTask()\">\r\n              <input class=\"shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker\"\r\n                  placeholder=\"Add Todo\" formControlName=\"todoItem\">\r\n              <button type=\"submit\"\r\n                  class=\"flex-no-shrink p-2 border-2 rounded text-teal border-teal hover:text-white hover:bg-teal\"\r\n\r\n                  >Add\r\n              </button>\r\n          </form>\r\n\r\n      </div>\r\n      <div>\r\n          <div class=\"flex mb-4 items-center\" *ngFor= \"let value of taskList; index as i\">\r\n              <p class=\"w-full text-grey-darkest\" [ngClass]=\"{'line-through': value.completed}\">{{value.name}}</p>\r\n              <button\r\n                  class=\"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded  text-green border-green hover:bg-green\"(click)=\"markDone(value)\">Done</button>\r\n              <button\r\n                  class=\"flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red  hover:bg-red\" (click)=\"removeTask(i)\">Remove</button>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TodoComponent",
            "id": "component-TodoComponent-4fa6c9e53262ca994666bb1b51622a5f68295ed07ae4eb6fa44b89f524ff2597a47e60401e9d0988dc850676bfaee3bffba174359196a289cfd28f1adb3a4ed5",
            "file": "src/app/widgets/todo-list/todo/todo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo",
            "styleUrls": [
                "./todo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "todoArray",
                    "defaultValue": "[\r\n    { task : 'Meeting with Urban Team' , completed : false },\r\n    { task : 'Duplicate a project for new customer' , completed : false },\r\n    { task : 'Project meeting with CEO' , completed : false },\r\n    { task : 'Follow up of team zilla' , completed : false },\r\n    { task : 'Level up for Antony' , completed : false }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "addTodo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changeTodoStatus",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeTodoItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  styleUrls: ['./todo.component.scss']\r\n})\r\nexport class TodoComponent implements OnInit {\r\n\r\n  form;\r\n  todoArray = [\r\n    { task : 'Meeting with Urban Team' , completed : false },\r\n    { task : 'Duplicate a project for new customer' , completed : false },\r\n    { task : 'Project meeting with CEO' , completed : false },\r\n    { task : 'Follow up of team zilla' , completed : false },\r\n    { task : 'Level up for Antony' , completed : false }\r\n  ];\r\n\r\n  date1 = new Date()\r\n\r\n  constructor(fb: UntypedFormBuilder) {\r\n\r\n    this.form = fb.group({\r\n      todoitem : ['', Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addTodo() {\r\n    let newTodoList = { task: '' , completed: false };\r\n    newTodoList.task!= this.form.value.todoitem;\r\n    this.todoArray.push(newTodoList);\r\n    this.form.reset();\r\n  }\r\n  removeTodoItem(item:any) {\r\n   for(let i=0; i<=this.todoArray.length; i++) {\r\n     if(item === this.todoArray[i]) {\r\n       this.todoArray.splice(i, 1);\r\n     }\r\n   }\r\n  }\r\n  changeTodoStatus(event:any ,index:any) {\r\n    if(event.target.checked) {\r\n    this.todoArray[index]['completed'] = true;\r\n    } else {\r\n      this.todoArray[index]['completed'] = false;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"list-wrapper pt-2\">\r\n    <ul class=\"d-flex flex-column-reverse todo-list todo-list-custom\">\r\n      <li *ngFor=\"let todo of todoArray; let i = index\" [ngClass]=\"{'completed' : todo.completed }\">\r\n        <div class=\"form-check form-check-flat\">\r\n          <label class=\"form-check-label\">\r\n            <input class=\"checkbox\" type=\"checkbox\" (change)=\"changeTodoStatus($event, i)\">\r\n            {{todo.task}}\r\n            <i class=\"input-helper\"></i>\r\n          </label>\r\n        </div>\r\n        <i class=\"remove mdi mdi-close\" (click)=\"removeTodoItem(todo)\"></i>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <form class=\"add-items d-flex mb-0 mt-2\" [formGroup]=\"form\" (ngSubmit)=\"addTodo()\">\r\n    <input type=\"text\" class=\"form-control todo-list-input\" formControlName=\"todoitem\" placeholder=\"Add new task\">\r\n    <button class=\"add btn btn-primary todo-list-add-btn py-2\" type=\"submit\" [disabled]=\"form.invalid\">Add</button>\r\n  </form>"
        },
        {
            "name": "TodoListComponent",
            "id": "component-TodoListComponent-16a927bbd9394f5f4465f8babdc2026d7ec0cfe71c7269662a6a10f1a42fbcd80f3d3f903afc46a1f3dbd41410cba291ce7ab7dab0a2b4526b3fd89f268b944c",
            "file": "src/app/widgets/todo-list/todo-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo-list",
            "styleUrls": [
                "./todo-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-todo-list',\r\n  templateUrl: './todo-list.component.html',\r\n  styleUrls: ['./todo-list.component.scss']\r\n})\r\nexport class TodoListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"page-header\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Apps</a></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Todo list</li>\r\n      </ol>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <p class=\"card-title\">Todo List</p>\r\n          <app-todo></app-todo>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "TopbarComponent",
            "id": "component-TopbarComponent-88a1ad5580831e71bdbdf99e498e0796250a185a16e7047d6eb1b43a9e5e864be6042b15a0bce388643db5e216af3b9a1365d1b8435163b83c8a28b2b71abf39",
            "file": "src/app/layouts/topbar/topbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-topbar",
            "styleUrls": [
                "./topbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./topbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "mobileMenuButtonClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                },
                {
                    "name": "settingsButtonClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "cookieValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "countryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "flagvalue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "openMobileMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "valueset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  styleUrls: ['./topbar.component.scss']\r\n})\r\n\r\n/**\r\n * Topbar component\r\n */\r\n\r\nexport class TopbarComponent implements OnInit {\r\n\r\n  element:any;\r\n  cookieValue:any;\r\n  flagvalue:any;\r\n  countryName: any;\r\n  valueset: any;\r\n\r\n  constructor( @Inject(DOCUMENT) private document: any,\r\n                private router: Router,\r\n                private auth: AuthService,\r\n                ) { }\r\n\r\n  openMobileMenu!: boolean ;\r\n\r\n  @Output() settingsButtonClicked = new EventEmitter();\r\n  @Output() mobileMenuButtonClicked = new EventEmitter();\r\n\r\n  ngOnInit(): void {\r\n    this.openMobileMenu = false;\r\n    this.element = this.document.documentElement;\r\n\r\n\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-icon {\r\n  padding: 0 14px;\r\n}\r\n.example-spacer {\r\n  flex: 1 1 auto;\r\n}\r\n",
                    "styleUrl": "./topbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar color=\"primary\">\r\n\r\n\r\n  <mat-toolbar-row>\r\n    <span>ANA Link, Ltd.</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon>\r\n    <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example delete icon\">delete</mat-icon>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n"
        },
        {
            "name": "TrackAndTraceComponent",
            "id": "component-TrackAndTraceComponent-bbade478741863d1696fb0e596640db457933969b6ce295c01b22501360a58d6b57b1e6f8e0bf838127eba4866db535dc914ea1889609f389343749c738bb539",
            "file": "src/app/pages/track-and-trace/track-and-trace.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-track-and-trace",
            "styleUrls": [
                "./track-and-trace.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./track-and-trace.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-track-and-trace',\r\n  templateUrl: './track-and-trace.component.html',\r\n  styleUrls: ['./track-and-trace.component.scss']\r\n})\r\nexport class TrackAndTraceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  min-height: 900px;\r\n}\r\n\r\n.outerContainer {\r\n  padding: 5px;\r\n  border: 1px solid #b6b6b6;\r\n  box-sizing: content-box;\r\n  max-width: 90%;\r\n  margin: auto;\r\n}\r\n",
                    "styleUrl": "./track-and-trace.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"outerContainer\">\r\n  <h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n    Track And Trace\r\n  </h1>\r\n  <div class=\"container\">\r\n    <mat-chip-list aria-label=\"Track and Trace\">\r\n      <mat-chip routerLink=\"airImport\">\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        Air Import\r\n      </mat-chip>\r\n      <mat-chip\r\n        color=\"primary\"\r\n        [routerLink]=\"['airExport']\"\r\n        routerLinkActive=\"router-link-active\"\r\n      >\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        Air Export\r\n      </mat-chip>\r\n      <mat-chip\r\n        color=\"accent\"\r\n        [routerLink]=\"['oceanImport']\"\r\n        routerLinkActive=\"router-link-active\"\r\n      >\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        Ocean Import\r\n      </mat-chip>\r\n\r\n      <mat-chip\r\n        [routerLink]=\"['oceanExport']\"\r\n        routerLinkActive=\"router-link-active\"\r\n      >\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        Ocean Export\r\n      </mat-chip>\r\n      <mat-chip color=\"primary\">\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        Deliveries\r\n      </mat-chip>\r\n      <mat-chip\r\n        color=\"accent\"\r\n        [routerLink]=\"['entries']\"\r\n        routerLinkActive=\"router-link-active\"\r\n      >\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        Customs Entries\r\n      </mat-chip>\r\n\r\n      <mat-chip>\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        By B/L No\r\n      </mat-chip>\r\n      <mat-chip color=\"primary\">\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        By Entry No\r\n      </mat-chip>\r\n      <mat-chip color=\"accent\">\r\n        <mat-chip-avatar>\r\n          <img\r\n            src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n        </mat-chip-avatar>\r\n        By Container No\r\n      </mat-chip>\r\n    </mat-chip-list>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "TruckAmsComponent",
            "id": "component-TruckAmsComponent-073d8ed3ff886132e029790a3b364536f5854528d3223dc894b69f129a01e77a1c76a01912b30a4b585c10ea12774f51e5d669237e2b218a67e5c22ffd94f8f9",
            "file": "src/app/pages/truck-ams/truck-ams.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-truck-ams",
            "styleUrls": [
                "./truck-ams.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./truck-ams.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new UntypedFormControl(new Date())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "myControl",
                    "defaultValue": "new UntypedFormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "options",
                    "defaultValue": "['One', 'Two', 'Three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "serializedDate",
                    "defaultValue": "new UntypedFormControl(new Date().toISOString())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-truck-ams',\r\n  templateUrl: './truck-ams.component.html',\r\n  styleUrls: ['./truck-ams.component.scss']\r\n})\r\nexport class TruckAmsComponent {\r\n  myControl = new UntypedFormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n\r\n  date = new UntypedFormControl(new Date());\r\n  serializedDate = new UntypedFormControl(new Date().toISOString());\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outerContainer {\r\n    padding: 5px;\r\n    border: 1px solid #b6b6b6;\r\n    box-sizing: content-box;\r\n  }\r\n  \r\n  div.container {\r\n    color: #eeeeee;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  div.container > div {\r\n    height: 50px;\r\n    width: 200px;\r\n    background-color: blue;\r\n  }\r\n  \r\n  .example-form {\r\n    min-width: 150px;\r\n    width: 100%;\r\n    height: 80%;\r\n  }\r\n  \r\n  .example-full-width {\r\n    width: 100%;\r\n  }\r\n  \r\n  mat-form-field {\r\n    margin-right: 12px;\r\n  }\r\n  ",
                    "styleUrl": "./truck-ams.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center;\">Truck AMS</h1>\r\n\r\n<mat-tab-group mat-align-tabs=\"start\" style=\"color:pink;\">\r\n  <mat-tab label=\"Truck AMS Dashboard\" >\r\n    <app-truck-ams-dashboard></app-truck-ams-dashboard>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"Truck AMS Summary\" >\r\n    <app-ams-summary></app-ams-summary>\r\n  </mat-tab>\r\n\r\n\r\n  <mat-tab label=\"New Truck AMS\">\r\n      <app-ams-detail></app-ams-detail>\r\n  </mat-tab>\r\n\r\n\r\n</mat-tab-group>\r\n\r\n\r\n<button type=\"button\" class=\"btn btn-link\" routerLink=\"/home/nav/\">Back to Mainpage</button>\r\n"
        },
        {
            "name": "TruckAmsDashboardComponent",
            "id": "component-TruckAmsDashboardComponent-4c56b1eeecb99593dd4bc2baa6af8730bf68619d21609eda150c58f4f65cec6fa5ad706b5ea1a230e6f76fbde0297cba6d89aa465768ece6ade1472a681eaa9b",
            "file": "src/app/pages/truck-ams/truck-ams-dashboard/truck-ams-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-truck-ams-dashboard",
            "styleUrls": [
                "./truck-ams-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./truck-ams-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date1",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-truck-ams-dashboard',\r\n  templateUrl: './truck-ams-dashboard.component.html',\r\n  styleUrls: ['./truck-ams-dashboard.component.scss']\r\n})\r\nexport class TruckAmsDashboardComponent implements OnInit {\r\n  date1 = new Date()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\r\n  margin: 20px;\r\n  background-color: burlywood;\r\n}\r\n",
                    "styleUrl": "./truck-ams-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo-list></app-todo-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-todo02></app-todo02>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-monthly-summary></app-monthly-summary>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign = \"space-aroundstart\" fxLayoutGap=\"20px\">\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Tasks for {{ date1 | date: 'mediumDate' }} </mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bar-chart></app-bar-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>To Do List for {{ date1 | date:'mediumDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-bubble-chart></app-bubble-chart>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"example-card\" fxFlex=\"30\" >\r\n    <mat-card-title-group>\r\n      <mat-card-title>Current Mo. Summary As Of {{ date1 | date:'shortDate'}}</mat-card-title>\r\n    </mat-card-title-group>\r\n    <mat-card-content>\r\n      <app-multi-y></app-multi-y>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "TruckingComponent",
            "id": "component-TruckingComponent-a4c44fd34e5abb0703e2e416b17d81c1c7226552f0a06c3db5514442f847db12a6bcdfccc8e69f38566cfeeb1339d9c49cbf16e23963ac90b72ae4f476f3f0d7",
            "file": "src/app/pages/trucking/trucking.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trucking",
            "styleUrls": [
                "./trucking.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./trucking.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-trucking',\r\n  templateUrl: './trucking.component.html',\r\n  styleUrls: ['./trucking.component.scss']\r\n})\r\nexport class TruckingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav a {\r\n  padding: 2rem;\r\n}\r\n\r\na {\r\n  font-size: large;\r\n}\r\n\r\nmat-card {\r\n  max-width: auto;\r\n}\r\n\r\nmat-card-content {\r\n  max-width: 800px;\r\n}\r\n\r\nbutton {\r\n  margin: 20px;\r\n}",
                    "styleUrl": "./trucking.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center;\">Trucking Dashboard</h1>\r\n<nav>\r\n  <a routerLink=\"air\" routerLinkActive=\"active\">Air Delivery</a>\r\n  <a routerLink=\"lcl\" routerLinkActive=\"active\">LCL Delivery</a>\r\n  <a routerLink=\"fcl\" routerLinkActive=\"active\">FCL Delivery</a>\r\n</nav>\r\n\r\n<button mat-fab color=\"primary\">Today</button>\r\n<button mat-fab color=\"accent\">Weekly</button>\r\n<button mat-fab color=\"warn\"> This Month</button>\r\n<button mat-fab color=\"primary\">Last Year Same Month</button>\r\n<button mat-fab color=\"accent\">Last Year</button>\r\n<button mat-fab color=\"warn\">This Year</button>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<mat-card>\r\n  <mat-card-title>Air Delivery</mat-card-title>\r\n  <mat-card-content>\r\n    <table class=\"table table-info table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">First</th>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td colspan=\"2\">Larry the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-title>LCL Delivery </mat-card-title>\r\n  <mat-card-content>\r\n    <table class=\"table table-secondary table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">First</th>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td colspan=\"2\">Larry the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card> <mat-card-title>FCL Delivery</mat-card-title>\r\n  <mat-card-content>\r\n    <table class=\"table table-success\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">First</th>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td colspan=\"2\">Larry the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-title>Special Delivery </mat-card-title>\r\n  <mat-card-content>\r\n    <table class=\"table table-primary\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">First</th>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td colspan=\"2\">Larry the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n"
        },
        {
            "name": "VendorsComponent",
            "id": "component-VendorsComponent-a318a83bfa6c254ead3dd92cac3b226256c763c09bae8ab7242552ddef1e9c07b290b0c54c0488e7e72936c3c7ead2f0f952678a23152e92f5ffccdb75a7608b",
            "file": "src/app/pages/parties/vendors/vendors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vendors",
            "styleUrls": [
                "./vendors.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vendors.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "crLimit",
                    "defaultValue": "50000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "cust",
                    "defaultValue": "'Hy Trading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "hasUnitNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "importerForm",
                    "defaultValue": "this.fb.group({\r\n    clientId: null,\r\n    name:  [null, Validators.required],\r\n    address1: [null, Validators.required],\r\n    address2: [null, Validators.required],\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    country: [null, Validators.required],\r\n    phone1:  [null, Validators.required],\r\n    email:  [null, Validators.required],\r\n    website: [null, Validators.required],\r\n\r\n    bond: this.fb.group({\r\n      effectiveDate: [''],\r\n      bondNo: [''],\r\n      amount: [''],\r\n      suretyCode: [''],\r\n      portFiled: [''],\r\n      holderName: ['']\r\n    }),\r\n\r\n    addInfo: this.fb.array([])\r\n\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "importers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Importer[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "openAmt",
                    "defaultValue": "20000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "overDue",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "states",
                    "defaultValue": "States",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "methodsClass": [
                {
                    "name": "addaddInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Importer } from 'src/app/models/importer';\r\nimport { ImportersService } from 'src/app/services/importers.service';\r\nimport  States from '../../../../assets/data/states.json'\r\n\r\n@Component({\r\n  selector: 'app-vendors',\r\n  templateUrl: './vendors.component.html',\r\n  styleUrls: ['./vendors.component.scss']\r\n})\r\nexport class VendorsComponent {\r\n  cust: string = 'Hy Trading'\r\n  openAmt:number = 20000\r\n  overDue:number = 1000\r\n  crLimit: number = 50000\r\n\r\n  importerForm = this.fb.group({\r\n    clientId: null,\r\n    name:  [null, Validators.required],\r\n    address1: [null, Validators.required],\r\n    address2: [null, Validators.required],\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    country: [null, Validators.required],\r\n    phone1:  [null, Validators.required],\r\n    email:  [null, Validators.required],\r\n    website: [null, Validators.required],\r\n\r\n    bond: this.fb.group({\r\n      effectiveDate: [''],\r\n      bondNo: [''],\r\n      amount: [''],\r\n      suretyCode: [''],\r\n      portFiled: [''],\r\n      holderName: ['']\r\n    }),\r\n\r\n    addInfo: this.fb.array([])\r\n\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n  importers: Importer[] =[];\r\n\r\n  constructor(private fb: UntypedFormBuilder, private importerService : ImportersService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  get additional() {\r\n    return this.importerForm.controls[\"addInfo\"] as UntypedFormArray\r\n  }\r\n\r\n  addaddInfo() {\r\n    const addtionalInfo = this.fb.group({\r\n      tel2: ['', Validators.required],\r\n      email2: [''],\r\n      tel3: [''],\r\n      email3:['']\r\n    })\r\n    this.additional.push(addtionalInfo)\r\n  }\r\n\r\n  states = States\r\n\r\n  onSubmit(): void {\r\n    this.importerService.getAll()\r\n       .subscribe(data => (this.importers =data));\r\n    console.log(this.importers);\r\n\r\n    alert('Thanks!');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1 {\r\n  text-align: center;\r\n  color:darkslateblue\r\n}\r\n\r\n.wrapper {\r\n  width: 90%;\r\n  margin: 40px\r\n}\r\n\r\n.shipping-card {\r\n  width: 400px;\r\n  height: auto\r\n}\r\n\r\nmat-card-header {\r\n  font-size: xx-large;\r\n  height: auto\r\n}\r\n\r\n",
                    "styleUrl": "./vendors.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "importerService",
                        "type": "ImportersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "importerService",
                        "type": "ImportersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "additional": {
                    "name": "additional",
                    "getSignature": {
                        "name": "additional",
                        "type": "",
                        "returnType": "",
                        "line": 56
                    }
                }
            },
            "templateData": "<div class=\"container\">\r\n  <h1>Vendors</h1>\r\n  <mat-card\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-around center\"\r\n    style=\"background-color: lightblue\"\r\n  >\r\n    <mat-card-header>\r\n      <mat-card-title> {{ cust }} </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>Open Amt: {{ openAmt | currency }}</p>\r\n      <p>Overdue Amt: {{ overDue | currency }}</p>\r\n      <p>Credit Limit: {{ crLimit | currency }}</p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <br />\r\n  <form [formGroup]=\"importerForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Address Information</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Client ID</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Client ID\"\r\n                formControlName=\"clientId\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Company Name</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Company name\"\r\n                formControlName=\"name\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['name'].hasError('required')\"\r\n              >\r\n                Company name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Address Line 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Address Line 1\"\r\n                formControlName=\"address1\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['address1'].hasError('required')\"\r\n              >\r\n                Address Line 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n            <button\r\n              mat-button\r\n              type=\"button\"\r\n              (click)=\"hasUnitNumber = !hasUnitNumber\"\r\n            >\r\n              + Add C/O, Apt, Suite, Unit\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Address Line 2</mat-label>\r\n              <textarea\r\n                matInput\r\n                placeholder=\"Address 2\"\r\n                formControlName=\"address2\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>City</mat-label>\r\n              <input matInput placeholder=\"City\" formControlName=\"city\" />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['city'].hasError('required')\"\r\n              >\r\n                City is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width col-6\" appearance=\"fill\">\r\n              <mat-label>State</mat-label>\r\n              <mat-select placeholder=\"State\" formControlName=\"state\">\r\n                <mat-option\r\n                  *ngFor=\"let state of states\"\r\n                  [value]=\"state.abbreviation\"\r\n                >\r\n                  {{ state.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['state'].hasError('required')\"\r\n              >\r\n                State is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width col-6\" appearance=\"fill\">\r\n              <mat-label>Zip Code</mat-label>\r\n              <input\r\n                matInput\r\n                #postalCode\r\n                maxlength=\"5\"\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                formControlName=\"postalCode\"\r\n              />\r\n              <mat-hint align=\"end\">{{ postalCode.value.length }} / 5</mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Country</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Country Name\"\r\n                type=\"text\"\r\n                formControlName=\"country\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Phone 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Telephone #\"\r\n                type=\"number\"\r\n                formControlName=\"phone1\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Email 1</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"EMail\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-label>Website Addr:</mat-label>\r\n              <input\r\n                matInput\r\n                placeholder=\"Website\"\r\n                type=\"text\"\r\n                formControlName=\"website\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Tax & Bond Information</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <div formGroupName=\"bond\">\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Effective Date</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Effective Date\"\r\n                  formControlName=\"effectiveDate\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Bond No.</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Number\"\r\n                  formControlName=\"bondNo\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Amount of bond</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Amount\"\r\n                  formControlName=\"amount\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Surety Code</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Surety Code\"\r\n                  formControlName=\"suretyCode\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Port Filed</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Port Filed\"\r\n                  formControlName=\"portFiled\"\r\n                />\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Bond Holder Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Bond Holder Name\"\r\n                  formControlName=\"holderName\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card fxFlex=\"30\">\r\n        <mat-card-header>\r\n          <mat-card-title>Other Information</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Client ID\"\r\n                formControlName=\"clientId\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Company name\"\r\n                formControlName=\"name\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['name'].hasError('required')\"\r\n              >\r\n                Company name is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Address Line 1\"\r\n                formControlName=\"address1\"\r\n              />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['address1'].hasError('required')\"\r\n              >\r\n                Address Line 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n            <button\r\n              mat-button\r\n              type=\"button\"\r\n              (click)=\"hasUnitNumber = !hasUnitNumber\"\r\n            >\r\n              + Add C/O, Apt, Suite, Unit\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <textarea\r\n                matInput\r\n                placeholder=\"Address 2\"\r\n                formControlName=\"address2\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput placeholder=\"City\" formControlName=\"city\" />\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['city'].hasError('required')\"\r\n              >\r\n                City is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select placeholder=\"State\" formControlName=\"state\">\r\n                <mat-option\r\n                  *ngFor=\"let state of states\"\r\n                  [value]=\"state.abbreviation\"\r\n                >\r\n                  {{ state.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"importerForm.controls['state'].hasError('required')\"\r\n              >\r\n                State is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                #postalCode\r\n                maxlength=\"5\"\r\n                placeholder=\"Postal Code\"\r\n                type=\"number\"\r\n                formControlName=\"postalCode\"\r\n              />\r\n              <mat-hint align=\"end\">{{ postalCode.value.length }} / 5</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Country Name\"\r\n                type=\"text\"\r\n                formControlName=\"country\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Telephone #\"\r\n                type=\"number\"\r\n                formControlName=\"phone1\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"EMail\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input\r\n                matInput\r\n                placeholder=\"Website\"\r\n                type=\"text\"\r\n                formControlName=\"website\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </form>\r\n\r\n  <p>Form Value: {{ importerForm.value | json }}</p>\r\n\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n    Get Importers\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "VerticalComponent",
            "id": "component-VerticalComponent-8712bc8bbffef1c39063340f15ede5c1bfda2c032604ecadc7f6e9d3a0a758aa9f19fbe1ae0b3957ea3a9b5cd69757240e843c645a6b949b1aadc653d058546a",
            "file": "src/app/layouts/vertical/vertical.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vertical",
            "styleUrls": [
                "./vertical.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vertical.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-vertical',\r\n  templateUrl: './vertical.component.html',\r\n  styleUrls: ['./vertical.component.scss']\r\n})\r\nexport class VerticalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./vertical.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id='layout-wrapper'>\r\n  <app-topbar>\r\n\r\n  </app-topbar>\r\n\r\n  <app-sidebar> </app-sidebar>\r\n\r\n  <div class=\"main-content\">\r\n    <div class=\"page-content\">\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/pages/airAms\" routerLinkActive=\"active\">Air AMS</button>\r\n      <button mat-raised-button color=\"accent\" routerLink=\"/pages/airExport\" routerLinkActive=\"active\">Air Export</button>\r\n      <button mat-raised-button color=\"warn\" routerLink=\"/pages/airImport\" routerLinkActive=\"active\">Air Import</button>\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/pages/cmsq\" routerLinkActive=\"active\">CMSQ</button>\r\n      <h1>Below is the content by selecting a route</h1>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <app-footer>   </app-footer>\r\n</div>\r\n\r\n<app-rightsidebar></app-rightsidebar>\r\n"
        },
        {
            "name": "VesselComponent",
            "id": "component-VesselComponent-ccadad91c7f0a0a856ff964360e97c69cd7f80abfa9be61133c739f35eba5ee00ba4fe359b5f9697ab1f1b4f8c0f3e620baf69267353ea427e0f23cfe06f9617",
            "file": "src/app/pages/tables/vessel/vessel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vessel",
            "styleUrls": [
                "./vessel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vessel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VesselDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<VesselItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { VesselDataSource, VesselItem } from './vessel-datasource';\r\n\r\n@Component({\r\n  selector: 'app-vessel',\r\n  templateUrl: './vessel.component.html',\r\n  styleUrls: ['./vessel.component.scss']\r\n})\r\nexport class VesselComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<VesselItem>;\r\n  dataSource: VesselDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new VesselDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./vessel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h1 style=\"font-weight: bolder; background-color: yellow; text-align: center\">\r\n  Vessel Codes\r\n</h1>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AccountModule",
            "id": "module-AccountModule-d4971d2e1569f15f99f0dbf34b7ec0569e3ef7111bd27b9891060c87d4279ed14d3a7b2ef44cdb50c1bba996d058063edb72921346f78b9c95c1af26b511f29d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/account/account.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    RegisterComponent\r\n  ],\r\n  exports: [\r\n    RegisterComponent\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    AuthModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AccountRoutingModule"
                        },
                        {
                            "name": "AuthModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AccountRoutingModule",
            "id": "module-AccountRoutingModule-f641db764caa564ab2cee972f76d72fd79a602f2c6ed405f2a358e193f4f6638efcfac3bfc86bd9d8dee3d8e57958d07bb772d12b6c5a8c3f562b7f426be63c1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/account/account-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'register'},\r\n  { path: 'auth', loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\" },\r\n  { path: 'register', component: RegisterComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AirAmsModule",
            "id": "module-AirAmsModule-75f0d87e2265e2f6a5d0543264421def39611ea2185585449000602333e427b6ee326a27ab8ccbec6075a2671160bcef4e473575bc2b9dd60bcbfc5190acf32c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/air-ams/air-ams.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AirAmsComponent } from './air-ams.component';\r\nimport { AirAmsDashboardComponent } from './air-ams-dashboard/air-ams-dashboard.component';\r\nimport { AirAmsGridComponent } from './air-ams-grid/air-ams-grid.component';\r\nimport { AirAmsRoutingModule } from './air-ams-routing.module';\r\nimport { AirAmsSummaryComponent } from './air-ams-summary/air-ams-summary.component';\r\nimport { AmsDetailComponent } from './ams-detail/ams-detail.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\nimport { SearchPipe } from 'src/app/pipes/search.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AirAmsComponent,\r\n    AmsDetailComponent,\r\n    AirAmsSummaryComponent,\r\n    AirAmsGridComponent,\r\n    AirAmsDashboardComponent,\r\n    SearchPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AirAmsRoutingModule,\r\n    MatTabsModule,\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    AgGridModule,\r\n    WidgetsModule,\r\n  ],\r\n})\r\nexport class AirAmsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AirAmsComponent"
                        },
                        {
                            "name": "AirAmsDashboardComponent"
                        },
                        {
                            "name": "AirAmsGridComponent"
                        },
                        {
                            "name": "AirAmsSummaryComponent"
                        },
                        {
                            "name": "AmsDetailComponent"
                        },
                        {
                            "name": "SearchPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AirAmsRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AirAmsRoutingModule",
            "id": "module-AirAmsRoutingModule-47ee307ba799231cc81289615b068072243e9702da0872c631c09cfaeb6dfcefc5f147464228a9ccd6eab971de4c93ff305ca53db45ef0a22527cee3ca749487",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/air-ams/air-ams-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AirAmsComponent } from './air-ams.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AirAmsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AirAmsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AirExportModule",
            "id": "module-AirExportModule-ecbce39c3e4e3da919e207a28e70ee053aeed8ffa90551eb22419a7ef31ed99916593ef671ccbe5cec2c9cfedd53f86fe8293a4ed00e6b6e718eecc5712c8a25",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/air-export/air-export.module.ts",
            "methods": [],
            "sourceCode": "import { AirExportComponent } from './air-export.component';\r\nimport { AirExportDashboardComponent } from './air-export-dashboard/air-export-dashboard.component';\r\nimport { AirExportDetailComponent } from './air-export-detail/air-export-detail.component';\r\nimport { AirExportRoutingModule } from './air-export-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExportSummaryComponent } from './export-summary/export-summary.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AirExportComponent,\r\n    ExportSummaryComponent,\r\n    AirExportDetailComponent,\r\n    AirExportDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AirExportRoutingModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    WidgetsModule\r\n  ]\r\n})\r\nexport class AirExportModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AirExportComponent"
                        },
                        {
                            "name": "AirExportDashboardComponent"
                        },
                        {
                            "name": "AirExportDetailComponent"
                        },
                        {
                            "name": "ExportSummaryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AirExportRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AirExportRoutingModule",
            "id": "module-AirExportRoutingModule-fada73fbde68b22dc7ca98c53435b8e0344f81469343925014748afe7723f5b984e80ae8faf1abd27c43016678a9eb408e770e7f313676a545fec74e8f088c0c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/air-export/air-export-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AirExportComponent } from './air-export.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AirExportComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AirExportRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AirImportModule",
            "id": "module-AirImportModule-8c978feab58ecca6cff22209c0ba3243bed4e6d02cf6fac2552ce1e0bb61e2bea701937686f0343b2a89019d182cd0cf6f3a0f202aa89e0eab8bedd4bb9f2dbe",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/air-import/air-import.module.ts",
            "methods": [],
            "sourceCode": "import 'ag-grid-enterprise';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AiGridComponent } from './ai-grid/ai-grid.component';\r\nimport { AirImportComponent } from './air-import.component';\r\nimport { AirImportDashboardComponent } from './air-import-dashboard/air-import-dashboard.component';\r\nimport { AirImportDetailComponent } from './air-import-detail/air-import-detail.component';\r\nimport { AirImportRoutingModule } from './air-import-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AirImportComponent,\r\n    AirImportDetailComponent,\r\n    AiGridComponent,\r\n    AirImportDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    AirImportRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    AgGridModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    WidgetsModule\r\n  ]\r\n})\r\nexport class AirImportModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AiGridComponent"
                        },
                        {
                            "name": "AirImportComponent"
                        },
                        {
                            "name": "AirImportDashboardComponent"
                        },
                        {
                            "name": "AirImportDetailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AirImportRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AirImportRoutingModule",
            "id": "module-AirImportRoutingModule-b883afe5d09d944886cb930aa70bd85186d57432ab432e12e43481dfb2213982fa196d1dfb548b359491cda2f52ef63d3c4739a9f6227f514fa88bef124c8777",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/air-import/air-import-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AirImportComponent } from './air-import.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AirImportComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AirImportRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-fbf15b0603de8d26c76782d899272948b35aa39e286f562900b24c65b2c7ed7df8564adfa3b0a2bac0b1cb8325c6426a854efde38c3d29ef5d92f41bd119c6dc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthInterceptor } from './helpers/auth.interceptor';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ExtrapagesModule } from './extrapages/extrapages.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HomeModule } from './home/home.module';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NgChartsModule } from 'ng2-charts';\r\nimport { NgModule } from '@angular/core';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { WidgetsModule } from './widgets/widgets.module';\r\nimport { Dashboard02Component } from './dashboard02/dashboard02.component';\r\n\r\nimport 'ag-grid-enterprise';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, DashboardComponent, Dashboard02Component],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AgGridModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    AppRoutingModule,\r\n    PagesModule,\r\n    ExtrapagesModule,\r\n    HomeModule,\r\n    LayoutModule,\r\n    WidgetsModule,\r\n    NgChartsModule,\r\n    TranslateModule.forRoot(),\r\n  ],\r\n\r\n  exports: [MatIconModule, MatSidenavModule, MatToolbarModule],\r\n\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "Dashboard02Component"
                        },
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ExtrapagesModule"
                        },
                        {
                            "name": "HomeModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-0cdbfef7e0c5480d12713057050904e10d9f1472c70051b6a701facd63f6b7c43ce237152d90a00ee27149dc4c1e8844953b970681e93f95cbbb2ae90d8a78e1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { Login02Component } from './account/auth/login02/login02.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Page404Component } from './extrapages/page404/page404.component';\r\nimport { Dashboard02Component } from './dashboard02/dashboard02.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'account', loadChildren: () => \"import('./account/account.module').then(m => m.AccountModule)\" },\r\n  { path: '', component: Login02Component},\r\n  { path: 'extra-pages', canActivate: [AuthGuard], loadChildren: () => \"import('./extrapages/extrapages.module').then(m => m.ExtrapagesModule)\"},\r\n  { path: 'dashboard', canActivate: [AuthGuard], component: DashboardComponent},\r\n  { path: 'home', loadChildren: () => \"import('./home/home.module').then(m=>m.HomeModule)\"},\r\n  { path:  'pages', loadChildren: () => \"import('./pages/pages.module').then(m => m.PagesModule)\" },\r\n  { path: 'dashboard02', component:Dashboard02Component },\r\n  { path: '**', component: Page404Component }];\r\n\r\n\r\n  @NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-f35f7406a2bf8b1f9813512c424bdf680c41b00a71d09dbac50b825c40e8940dcf3e069a2be509d0964a7fe1adfa398118ad0540e779eeff9cff50c886ca5d59",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/account/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { Login02Component } from './login02/login02.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RecoverpwdComponent } from './recoverpwd/recoverpwd.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecoverpwdComponent,\r\n    ProfileComponent,\r\n    Login02Component,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbAlertModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    AuthRoutingModule,\r\n  ],\r\n  exports: [RecoverpwdComponent, ProfileComponent, Login02Component],\r\n})\r\nexport class AuthModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "Login02Component"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "RecoverpwdComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Login02Component"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "RecoverpwdComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-83a4dd1464a12f4f51f5ba3712ebe29b2160edd50fa8a2f1511b70c6c1d2e9dd081044b320d42c69cfa8ad6a69aa7f8f88207046b435a9dde85ce350a04f1ce9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/account/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RecoverpwdComponent } from './recoverpwd/recoverpwd.component';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'register'},\r\n  { path: 'recoverpwd', component: RecoverpwdComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'register', component: RegisterComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CmsqModule",
            "id": "module-CmsqModule-85061337d8d36f92426869c868e95f688e7c4d6e860697c6d2d57eda2c8e776e5fff3433e105bb59f13f9f9d653b6a0d14fcdc3c948ee6f8b51cfd0117c62662",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/cmsq/cmsq.module.ts",
            "methods": [],
            "sourceCode": "import { CmsqComponent } from './cmsq.component';\r\nimport { CmsqRoutingModule } from './cmsq-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Grid01Component } from './grid01/grid01.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CmsqComponent,\r\n    Grid01Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CmsqRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatCheckboxModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class CmsqModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CmsqComponent"
                        },
                        {
                            "name": "Grid01Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CmsqRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CmsqRoutingModule",
            "id": "module-CmsqRoutingModule-4427cea17e40349d20b6289ac3c45d448f102fbc3edea2199a09658a9947bc519dc69264d6630c06c53a1ece5f3ea0a347b7ef2c3099df39a259eb3f059047e8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/cmsq/cmsq-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CmsqComponent } from './cmsq.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CmsqComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CmsqRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomsBrokerageModule",
            "id": "module-CustomsBrokerageModule-aa9119b13863f428ed505272130f8a83e85745c661e6f2d82950ad850384057ca05c8242a386b8d1ed06c581e3a1267383041b8d5afd86f0e278d775cd4ec1dd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/customs-brokerage/customs-brokerage.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomsBrokerageComponent } from './customs-brokerage.component';\r\nimport { CustomsBrokerageRoutingModule } from './customs-brokerage-routing.module';\r\nimport { EntriesSummaryComponent } from './entries-summary/entries-summary.component';\r\nimport { EntryDetailComponent } from './entry-detail/entry-detail.component';\r\nimport { EntryGridComponent } from './entry-grid/entry-grid.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomsBrokerageComponent,\r\n    EntriesSummaryComponent,\r\n    EntryDetailComponent,\r\n    EntryGridComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    FlexLayoutModule,\r\n    AgGridModule,\r\n    CustomsBrokerageRoutingModule,\r\n    WidgetsModule\r\n  ]\r\n})\r\nexport class CustomsBrokerageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomsBrokerageComponent"
                        },
                        {
                            "name": "EntriesSummaryComponent"
                        },
                        {
                            "name": "EntryDetailComponent"
                        },
                        {
                            "name": "EntryGridComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CustomsBrokerageRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomsBrokerageRoutingModule",
            "id": "module-CustomsBrokerageRoutingModule-f0a22fc15bdef003a3e3418f20a38bc7e6d6dfcd4a49b98e69f0ef5d7847f78d99a71774c9dcdf3eff49b50c0f714b96a3bc713cc3e80612d079f39d0ede1e3e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/customs-brokerage/customs-brokerage-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CustomsBrokerageComponent } from './customs-brokerage.component';\r\nimport { EntryDetailComponent } from './entry-detail/entry-detail.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CustomsBrokerageComponent },\r\n  { path: ':id', component: EntryDetailComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomsBrokerageRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExtrapagesModule",
            "id": "module-ExtrapagesModule-cafce93d17b287a26401aecf8ba3cad1792f376eab872997d3e24cd7181d4c7e5091e105e599369235e7a0fc2aef4d32110d53e4be6abb08d8b09a3b229317d4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/extrapages/extrapages.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AeFormComponent } from './ae-form/ae-form.component';\r\nimport { Chart01Component } from './chart01/chart01.component';\r\nimport { ComingsoonComponent } from './comingsoon/comingsoon.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExtrapagesComponent } from './extrapages.component';\r\nimport { ExtrapagesRoutingModule } from './extrapages-routing.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { IsfFormComponent } from './isf-form/isf-form.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { NgChartsModule } from 'ng2-charts';\r\nimport { NgModule } from '@angular/core';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { WidgetsModule } from '../widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExtrapagesComponent,\r\n    Page404Component,\r\n    ComingsoonComponent,\r\n    IsfFormComponent,\r\n    AeFormComponent,\r\n    Chart01Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    NgChartsModule,\r\n    WidgetsModule,\r\n    ExtrapagesRoutingModule,\r\n\r\n  ]\r\n})\r\nexport class ExtrapagesModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AeFormComponent"
                        },
                        {
                            "name": "Chart01Component"
                        },
                        {
                            "name": "ComingsoonComponent"
                        },
                        {
                            "name": "ExtrapagesComponent"
                        },
                        {
                            "name": "IsfFormComponent"
                        },
                        {
                            "name": "Page404Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ExtrapagesRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExtrapagesRoutingModule",
            "id": "module-ExtrapagesRoutingModule-67f0f178bd696fe3143e8348bf5d17ce343ef128edc0bedd2b2a49de7a5beee0be5f9b88ddec9d2477f3ca277519aa8abbef4a0f2b8016f6627972e0d02fab44",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/extrapages/extrapages-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AeFormComponent } from './ae-form/ae-form.component';\r\nimport { ApexChartComponent } from '../widgets/apex-chart/apex-chart.component';\r\nimport { BarChartComponent } from '../widgets/bar-chart/bar-chart.component';\r\nimport { BrushChartComponent } from '../widgets/brush-chart/brush-chart.component';\r\nimport { BubbleChartComponent } from '../widgets/bubble-chart/bubble-chart.component';\r\nimport { Chart01Component } from './chart01/chart01.component';\r\nimport { ComingsoonComponent } from './comingsoon/comingsoon.component';\r\nimport { DonutChartComponent } from '../widgets/donut-chart/donut-chart.component';\r\nimport { DonutMonochromeComponent } from '../widgets/donut-monochrome/donut-monochrome.component';\r\nimport { ExtrapagesComponent } from './extrapages.component';\r\nimport { IsfFormComponent } from './isf-form/isf-form.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { RadarChartComponent } from '../widgets/radar-chart/radar-chart.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ExtrapagesComponent },\r\n  { path: '404', component: Page404Component},\r\n  { path: 'coming-soon', component: ComingsoonComponent},\r\n  { path: 'isf', component: IsfFormComponent },\r\n  { path: 'ae', component: AeFormComponent},\r\n  { path: 'chart01', component: Chart01Component},\r\n  { path: 'bar', component: BarChartComponent},\r\n  { path: 'bubble', component: BubbleChartComponent},\r\n  { path: 'radar', component: RadarChartComponent},\r\n  { path: 'apex', component: ApexChartComponent},\r\n  { path: 'brush', component: BrushChartComponent},\r\n  { path: 'donut', component: DonutChartComponent},\r\n  { path: 'donut-mono', component: DonutMonochromeComponent}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ExtrapagesRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-964f03ff55432a02cdc3a674fbb48f7bc93f05029e261bb46bc7c69837ceeff34104a75bbc023f8da0843bd904ed2e66ad43b68cdae3e6305a312ead1b2e237c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { PagesModule } from '../pages/pages.module';\r\nimport { WidgetsModule } from '../widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    HeaderComponent,\r\n    NavigationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HomeRoutingModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatButtonModule,\r\n    PagesModule,\r\n    FlexLayoutModule,\r\n    WidgetsModule\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "NavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRoutingModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRoutingModule",
            "id": "module-HomeRoutingModule-d70b2ce1e33c9aed9b077ca8812c23f5a626e029a211290273081a178ebba7aa74fad03a3745c714d0345924afd2f48633d4bb7eee67d6c18382f92b6e118622",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from '../home/dashboard/dashboard.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { Login02Component } from '../account/auth/login02/login02.component';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: Login02Component},\r\n      { path: 'home', component: HomeComponent},\r\n      { path: 'nav', component: NavigationComponent,\r\n            children: [ { path:  'pages', loadChildren: () => \"import('../pages/pages.module').then(m => m.PagesModule)\" }]},\r\n      { path: 'dashboard', component: DashboardComponent} ,\r\n ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IsfModule",
            "id": "module-IsfModule-05dc409fadc446a8ca3613377d99a2d7230a4c8c37c01c58ed1dae5c304f874cd74d2e72bb36c065bccc47def8d73bf01db06701b39b1f112f99c6a0bb85ba8b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/isf/isf.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomesticComponent } from './domestic/domestic.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ForeignComponent } from './foreign/foreign.component';\r\nimport { HtsComponent } from './hts/hts.component';\r\nimport { IsfComponent } from './isf.component';\r\nimport { IsfGridComponent } from './isf-grid/isf-grid.component';\r\nimport { IsfRoutingModule } from './isf-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { PartiesComponent } from './parties/parties.component';\r\nimport { ShipmentComponent } from './shipment/shipment.component';\r\nimport { IsfDetailComponent } from './isf-detail/isf-detail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IsfComponent,\r\n    ShipmentComponent,\r\n    PartiesComponent,\r\n    HtsComponent,\r\n    DomesticComponent,\r\n    ForeignComponent,\r\n    IsfGridComponent,\r\n    IsfDetailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    AgGridModule,\r\n    IsfRoutingModule,\r\n  ]\r\n})\r\nexport class IsfModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DomesticComponent"
                        },
                        {
                            "name": "ForeignComponent"
                        },
                        {
                            "name": "HtsComponent"
                        },
                        {
                            "name": "IsfComponent"
                        },
                        {
                            "name": "IsfDetailComponent"
                        },
                        {
                            "name": "IsfGridComponent"
                        },
                        {
                            "name": "PartiesComponent"
                        },
                        {
                            "name": "ShipmentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IsfRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IsfRoutingModule",
            "id": "module-IsfRoutingModule-48f91b5758499ee318f19aa3769f2d0134d41dd7fc4b417e8748ba87d40c7820c4d3b0a8627b2e1a3ce74d25b0263aba7b114a20e744ccea080767a31f9ebaa8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/isf/isf-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { IsfComponent } from './isf.component';\r\nimport { IsfDetailComponent } from './isf-detail/isf-detail.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: IsfComponent },\r\n  { path: ':id', component: IsfDetailComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IsfRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutsModule",
            "id": "module-LayoutsModule-e1592987203b5fc58152816d3de35fc25be15812fe929769e166d8fd3e51464d37fbdcff9af8c33a0ee033bae22f76636d83d913308758cd7d3e4918bfb448d6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layouts/layouts.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HorizontalComponent } from './horizontal/horizontal.component';\r\nimport { HorizontaltopbarComponent } from './horizontaltopbar/horizontaltopbar.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NgModule } from '@angular/core';\r\nimport { RightsidebarComponent } from './rightsidebar/rightsidebar.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { TopbarComponent } from './topbar/topbar.component';\r\nimport { TranslateModule } from'@ngx-translate/core';\r\nimport { VerticalComponent } from './vertical/vertical.component';\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    FooterComponent,\r\n    HorizontalComponent,\r\n    HorizontaltopbarComponent,\r\n    RightsidebarComponent,\r\n    TopbarComponent,\r\n    VerticalComponent,\r\n    SidebarComponent\r\n   ],\r\n\r\n    imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    TranslateModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatButtonModule\r\n  ],\r\n})\r\nexport class LayoutsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HorizontalComponent"
                        },
                        {
                            "name": "HorizontaltopbarComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "RightsidebarComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "TopbarComponent"
                        },
                        {
                            "name": "VerticalComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OceanExportModule",
            "id": "module-OceanExportModule-229860184a60b8f9930665467790231f0c7f43fd9088ce093086e31244b99a3fc6b212d18354605c5bf09cc34780c8fbc5271af5d88d42598257c27b03a211eb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/ocean-export/ocean-export.module.ts",
            "methods": [],
            "sourceCode": "import { AgGridModule } from 'ag-grid-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { OceanExportComponent } from './ocean-export.component';\r\nimport { OceanExportDashboardComponent } from './ocean-export-dashboard/ocean-export-dashboard.component';\r\nimport { OceanExportDetailComponent } from './ocean-export-detail/ocean-export-detail.component';\r\nimport { OceanExportRoutingModule } from './ocean-export-routing.module';\r\nimport { OceanExportSummaryComponent } from './ocean-export-summary/ocean-export-summary.component';\r\nimport { OeGridComponent } from './oe-grid/oe-grid.component';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OceanExportComponent,\r\n    OceanExportDetailComponent,\r\n    OceanExportSummaryComponent,\r\n    OeGridComponent,\r\n    OceanExportDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OceanExportRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    FlexLayoutModule,\r\n    AgGridModule,\r\n    WidgetsModule\r\n  ]\r\n})\r\nexport class OceanExportModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OceanExportComponent"
                        },
                        {
                            "name": "OceanExportDashboardComponent"
                        },
                        {
                            "name": "OceanExportDetailComponent"
                        },
                        {
                            "name": "OceanExportSummaryComponent"
                        },
                        {
                            "name": "OeGridComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OceanExportRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OceanExportRoutingModule",
            "id": "module-OceanExportRoutingModule-d5ec44b7d64cf56dca537f2b7341c9711a09573082e2ab0341daca13ff3e5d8f22ba567cac7028e5d20ab8529b363a714c73b8d2fca1f12225cd1b22f341e3d4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/ocean-export/ocean-export-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OceanExportComponent } from './ocean-export.component';\r\n\r\nconst routes: Routes = [{ path: '', component: OceanExportComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OceanExportRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OceanImportModule",
            "id": "module-OceanImportModule-4fc5a1746fca7a45b5803e50a9dbb0c63bd855a409903902bdb9d8036344f4b9417f7466d7e99d3a4b2375edae18b73e77dddbd222a8da4bca723cea1de771c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/ocean-import/ocean-import.module.ts",
            "methods": [],
            "sourceCode": "import { AgGridModule } from 'ag-grid-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { OceanImportComponent } from './ocean-import.component';\r\nimport { OceanImportDashboardComponent } from './ocean-import-dashboard/ocean-import-dashboard.component';\r\nimport { OceanImportDetailComponent } from './ocean-import-detail/ocean-import-detail.component';\r\nimport { OceanImportRoutingModule } from './ocean-import-routing.module';\r\nimport { OceanImportSummaryComponent } from './ocean-import-summary/ocean-import-summary.component';\r\nimport { OiGridComponent } from './oi-grid/oi-grid.component';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OceanImportComponent,\r\n    OceanImportDetailComponent,\r\n    OceanImportSummaryComponent,\r\n    OiGridComponent,\r\n    OceanImportDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OceanImportRoutingModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    FlexLayoutModule,\r\n    AgGridModule,\r\n    WidgetsModule\r\n  ]\r\n})\r\nexport class OceanImportModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OceanImportComponent"
                        },
                        {
                            "name": "OceanImportDashboardComponent"
                        },
                        {
                            "name": "OceanImportDetailComponent"
                        },
                        {
                            "name": "OceanImportSummaryComponent"
                        },
                        {
                            "name": "OiGridComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OceanImportRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OceanImportRoutingModule",
            "id": "module-OceanImportRoutingModule-86d7335f2872d9b6236faa0537615f069c917cf4fbe3a27c393a4d53784919b15fec9eb77f65cf1dc0ddfef52417946abf47ac1ced6e39e1451c0374e66ee90a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/ocean-import/ocean-import-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OceanImportComponent } from './ocean-import.component';\r\n\r\nconst routes: Routes = [{ path: '', component: OceanImportComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OceanImportRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "id": "module-PagesModule-92b648bd625ce066538b870ddcc46aa58c041706642f7d95c83996f432aede80fe3da6bab711b190a8ffd35049cc0ff01cc7cd88c9e39e1e1205304f2d642635",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/pages.module.ts",
            "methods": [],
            "sourceCode": "import { AgGridModule } from 'ag-grid-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NgModule } from '@angular/core';\r\nimport { PagesComponent } from './pages.component';\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PagesComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PagesRoutingModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    AgGridModule\r\n  ],\r\n  exports: [\r\n    PagesComponent\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PagesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PagesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PagesComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesRoutingModule",
            "id": "module-PagesRoutingModule-0416ce103e3361b759d1b37e047efe67ad8410091b79d65e3c8412808726e88e8213999bca7deacc571dec81c621d55007eac0f8268bfe0d725fda53014f7c73",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/pages-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { Chart01Component } from '../extrapages/chart01/chart01.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { PagesComponent } from './pages.component';\r\n\r\nconst routes: Routes = [{ path: '', component: PagesComponent},\r\n\r\n                              { path: 'isf', loadChildren: () => \"import('./isf/isf.module').then(m => m.IsfModule)\" },\r\n                              { path: 'airAms', loadChildren: () => \"import('./air-ams/air-ams.module').then(m => m.AirAmsModule)\" },\r\n                              { path: 'seaAms', loadChildren: () => \"import('./sea-ams/sea-ams.module').then(m => m.SeaAmsModule)\" },\r\n                              { path: 'truckAms', loadChildren: () => \"import('./truck-ams/truck-ams.module').then(m => m.TruckAmsModule)\" },\r\n                              { path: 'airExport', loadChildren: () => \"import('./air-export/air-export.module').then(m => m.AirExportModule)\" },\r\n                              { path: 'oceanExport', loadChildren: () => \"import('./ocean-export/ocean-export.module').then(m => m.OceanExportModule)\" },\r\n                              { path: 'airImport', loadChildren: () => \"import('./air-import/air-import.module').then(m => m.AirImportModule)\" },\r\n                              { path: 'oceanImport', loadChildren: () => \"import('./ocean-import/ocean-import.module').then(m => m.OceanImportModule)\" },\r\n                              { path: 'customsBrokerage', loadChildren: () => \"import('./customs-brokerage/customs-brokerage.module').then(m => m.CustomsBrokerageModule)\" },\r\n                              { path: 'trucking', loadChildren: () => \"import('./trucking/trucking.module').then(m => m.TruckingModule)\" },\r\n                              { path: 'cmsq', loadChildren: () => \"import('./cmsq/cmsq.module').then(m => m.CmsqModule)\" },\r\n                              { path: 'trackAndTrace', loadChildren: () => \"import('./track-and-trace/track-and-trace.module').then(m => m.TrackAndTraceModule)\" },\r\n                              { path: 'parties', loadChildren: () => \"import('./parties/parties.module').then(m => m.PartiesModule)\" },\r\n                              { path: 'tables', loadChildren: () => \"import('./tables/tables.module').then(m => m.TablesModule)\" },\r\n                              { path: 'reports', loadChildren: () => \"import('./reports/reports.module').then(m => m.ReportsModule)\" },\r\n                              { path: 'sample', component: Chart01Component}\r\n\r\n                    ]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PagesRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PartiesModule",
            "id": "module-PartiesModule-557b641641ca5af02518cb6292fc77f6e6d48d5f6909dcf92c1d4eb1649c3bcb441b8855e0730a580661800fef2226f17aab285475daa36fa3bc6299a823ffd9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/parties/parties.module.ts",
            "methods": [],
            "sourceCode": "import { CarriersComponent } from './carriers/carriers.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { PartiesComponent } from './parties.component';\r\nimport { PartiesRoutingModule } from './parties-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { VendorsComponent } from './vendors/vendors.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PartiesComponent,\r\n    ClientsComponent,\r\n    VendorsComponent,\r\n    CarriersComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PartiesRoutingModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class PartiesModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CarriersComponent"
                        },
                        {
                            "name": "ClientsComponent"
                        },
                        {
                            "name": "PartiesComponent"
                        },
                        {
                            "name": "VendorsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PartiesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PartiesRoutingModule",
            "id": "module-PartiesRoutingModule-e29d707d2797b05f89d92d97d7c3fffb2df8b529c8ba2adbd3fda6adf8083ea49bfca858b4472f5489d570f460c221a4405e133e5a75de92b10437711ea88cc4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/parties/parties-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CarriersComponent } from './carriers/carriers.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { PartiesComponent } from './parties.component';\r\nimport { VendorsComponent } from './vendors/vendors.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PartiesComponent },\r\n  { path: 'carriers', component: CarriersComponent},\r\n  { path: 'clients', component: ClientsComponent},\r\n  { path: 'vendors', component: VendorsComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PartiesRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReportsModule",
            "id": "module-ReportsModule-06309b8d41f86fa8e3f7a91fae8d0a71472675fab64a8ead68a301861370964d602c1635ce63942a178ab8fb2a8a46337c28bdb6858e8513d6daf3fad1128f80",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/reports/reports.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReportsComponent } from './reports.component';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReportsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    NgbModule,\r\n    ReportsRoutingModule\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReportsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ReportsRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReportsRoutingModule",
            "id": "module-ReportsRoutingModule-96f713227157a20405c4db6bece9b92927e567f2501600dcaaeed8e7b258daecbf66511f143431c6c2d7ade2914931b6ac909b7090831aa5e120b6eef76fad66",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/reports/reports-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { EntryComponent } from './entry/entry.component';\r\nimport { ExamComponent } from './exam/exam.component';\r\nimport { LiquidationComponent } from './liquidation/liquidation.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProfitByCustomerComponent } from './profit-by-customer/profit-by-customer.component';\r\nimport { ProfitByImporterComponent } from './profit-by-importer/profit-by-importer.component';\r\nimport { ProfitBySalesmanComponent } from './profit-by-salesman/profit-by-salesman.component';\r\nimport { ReportsComponent } from './reports.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ReportsComponent,\r\n                          children: [\r\n                            {path:'entry', component: EntryComponent},\r\n                            {path: 'liquidation', component: LiquidationComponent},\r\n                            {path: 'exam', component: ExamComponent},\r\n                            {path: 'pnlbyImporter', component: ProfitByImporterComponent},\r\n                            {path: 'pnlbySalesman', component: ProfitBySalesmanComponent},\r\n                            {path: 'pnlbyCustomer', component: ProfitByCustomerComponent}\r\n                          ]\r\n                         }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SeaAmsModule",
            "id": "module-SeaAmsModule-040218b7057eb9a997dc1b7cae6a45cb8bf44595ecfa5c81a786bd245b140b7d015ad0f3fd2b2efe2219d05efa02f8db115204128f84e2d810837c63459ede0f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/sea-ams/sea-ams.module.ts",
            "methods": [],
            "sourceCode": "import { AirAmsRoutingModule } from '../air-ams/air-ams-routing.module';\r\nimport { AmsDetailComponent } from './ams-detail/ams-detail.component';\r\nimport { AmsSummaryComponent } from './ams-summary/ams-summary.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SeaAmsComponent } from './sea-ams.component';\r\nimport { SeaAmsDashboardComponent } from './sea-ams-dashboard/sea-ams-dashboard.component';\r\nimport { SeaAmsRoutingModule } from './sea-ams-routing.module';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SeaAmsComponent,\r\n    AmsDetailComponent,\r\n    AmsSummaryComponent,\r\n    SeaAmsDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatTabsModule,\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    WidgetsModule,\r\n    SeaAmsRoutingModule\r\n  ]\r\n})\r\nexport class SeaAmsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AmsSummaryComponent"
                        },
                        {
                            "name": "SeaAmsComponent"
                        },
                        {
                            "name": "SeaAmsDashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SeaAmsRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SeaAmsRoutingModule",
            "id": "module-SeaAmsRoutingModule-6f82ca1435b753914fdfcc2993cb84aa8dd721e0d3b24269e6561e973e0f274bf9f51ca743d3780dbf0f4292bf590dbccc82056b6967542a40c4dc5c7d74236a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/sea-ams/sea-ams-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SeaAmsComponent } from './sea-ams.component';\r\n\r\nconst routes: Routes = [{ path: '', component: SeaAmsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SeaAmsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TablesModule",
            "id": "module-TablesModule-c26b4f6b3666ab2a93a4effa0ad4b23aa4de4ba8b9d1f1cd9c64ce4bf01a641365b77754844aaf72dd079ea924a53b9710121f9212008b1a0480c954ce980f21",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/tables/tables.module.ts",
            "methods": [],
            "sourceCode": "import { MatCard, MatCardModule } from '@angular/material/card';\r\n\r\nimport { AddCvdComponent } from './add-cvd/add-cvd.component';\r\nimport { CarriersComponent } from './carriers/carriers.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { CurrencyComponent } from './currency/currency.component';\r\nimport { FdaProductComponent } from './fda-product/fda-product.component';\r\nimport { FirmsComponent } from './firms/firms.component';\r\nimport { ForeignPortsComponent } from './foreign-ports/foreign-ports.component';\r\nimport { HTSComponent } from './hts/hts.component';\r\nimport { ManufacturersComponent } from './manufacturers/manufacturers.component';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { NgModule } from '@angular/core';\r\nimport { PortsComponent } from './ports/ports.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { StatesComponent } from './states/states.component';\r\nimport { TablesComponent } from './tables.component';\r\nimport { TablesRoutingModule } from './tables-routing.module';\r\nimport { VesselComponent } from './vessel/vessel.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TablesComponent,\r\n    CarriersComponent,\r\n    PortsComponent,\r\n    ForeignPortsComponent,\r\n    CountryComponent,\r\n    StatesComponent,\r\n    FirmsComponent,\r\n    HTSComponent,\r\n    ManufacturersComponent,\r\n    AddCvdComponent,\r\n    FdaProductComponent,\r\n    CurrencyComponent,\r\n    VesselComponent,\r\n    ProductsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TablesRoutingModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatCardModule\r\n  ]\r\n})\r\nexport class TablesModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddCvdComponent"
                        },
                        {
                            "name": "CountryComponent"
                        },
                        {
                            "name": "CurrencyComponent"
                        },
                        {
                            "name": "FdaProductComponent"
                        },
                        {
                            "name": "FirmsComponent"
                        },
                        {
                            "name": "ForeignPortsComponent"
                        },
                        {
                            "name": "HTSComponent"
                        },
                        {
                            "name": "ManufacturersComponent"
                        },
                        {
                            "name": "PortsComponent"
                        },
                        {
                            "name": "ProductsComponent"
                        },
                        {
                            "name": "StatesComponent"
                        },
                        {
                            "name": "TablesComponent"
                        },
                        {
                            "name": "VesselComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TablesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TablesRoutingModule",
            "id": "module-TablesRoutingModule-694f9c7fb79f42014e59b941079ae9f9a06874bee893d90b79f1d305327e5b83243d79f2e70326ef1d43350eced42e80871ea8a5a321b787e4607c02d9045c3c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/tables/tables-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddCvdComponent } from './add-cvd/add-cvd.component';\r\nimport { CarriersComponent } from './carriers/carriers.component';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { CurrencyComponent } from './currency/currency.component';\r\nimport { FdaProductComponent } from './fda-product/fda-product.component';\r\nimport { FirmsComponent } from './firms/firms.component';\r\nimport { ForeignPortsComponent } from './foreign-ports/foreign-ports.component';\r\nimport { HTSComponent } from './hts/hts.component';\r\nimport { ManufacturersComponent } from './manufacturers/manufacturers.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { PortsComponent } from './ports/ports.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { StatesComponent } from './states/states.component';\r\nimport { TablesComponent } from './tables.component';\r\nimport { VesselComponent } from './vessel/vessel.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TablesComponent,\r\n    children: [\r\n      { path: 'carriers', component: CarriersComponent},\r\n      { path: 'ports', component: PortsComponent},\r\n      { path: 'foreignPorts', component: ForeignPortsComponent},\r\n      { path: 'country', component: CountryComponent},\r\n      { path: 'states', component: StatesComponent},\r\n      { path: 'firms', component: FirmsComponent},\r\n      { path: 'hts', component: HTSComponent},\r\n      { path: 'manufacturers', component: ManufacturersComponent},\r\n      { path: 'add-cvd', component:AddCvdComponent},\r\n      { path: 'fdaProduct', component: FdaProductComponent},\r\n      { path: 'currency', component: CurrencyComponent},\r\n      { path: 'vessel', component: VesselComponent},\r\n      { path: 'products', component: ProductsComponent}\r\n      ]}\r\n    ]\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TablesRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TrackAndTraceModule",
            "id": "module-TrackAndTraceModule-b926095bf44990c6e39cf8c061ba842f5d3628fe9717f62c3cb59a64c90eca85f20a48624ee7e472d37c44872c5c25322a436df5bfda8a45a304f7b0352fafef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/track-and-trace/track-and-trace.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { NgModule } from '@angular/core';\r\nimport { TrackAndTraceComponent } from './track-and-trace.component';\r\nimport { TrackAndTraceRoutingModule } from './track-and-trace-routing.module';\r\nimport { AirImportComponent } from './air-import/air-import.component';\r\nimport { AirExportComponent } from './air-export/air-export.component';\r\nimport { OceanImportComponent } from './ocean-import/ocean-import.component';\r\nimport { OceanExportComponent } from './ocean-export/ocean-export.component';\r\nimport { EntriesComponent } from './entries/entries.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrackAndTraceComponent,\r\n    AirImportComponent,\r\n    AirExportComponent,\r\n    OceanImportComponent,\r\n    OceanExportComponent,\r\n    EntriesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    TrackAndTraceRoutingModule\r\n  ]\r\n})\r\nexport class TrackAndTraceModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AirExportComponent"
                        },
                        {
                            "name": "AirImportComponent"
                        },
                        {
                            "name": "EntriesComponent"
                        },
                        {
                            "name": "OceanExportComponent"
                        },
                        {
                            "name": "OceanImportComponent"
                        },
                        {
                            "name": "TrackAndTraceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TrackAndTraceRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TrackAndTraceRoutingModule",
            "id": "module-TrackAndTraceRoutingModule-ee05bfaca8974bfe55acfcb14d90f315dc7a50fca3c45dd9eedaa1176c9acaa23daf44627446a78bbd9fadd683aa430e862aba3bb489cdc415aab325bf2c1e46",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/track-and-trace/track-and-trace-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AirExportComponent } from './air-export/air-export.component';\r\nimport { AirImportComponent } from './air-import/air-import.component';\r\nimport { EntriesComponent } from './entries/entries.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { OceanExportComponent } from './ocean-export/ocean-export.component';\r\nimport { OceanImportComponent } from './ocean-import/ocean-import.component';\r\nimport { TrackAndTraceComponent } from './track-and-trace.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: TrackAndTraceComponent, children: [\r\n      { path: 'airImport', component: AirImportComponent},\r\n      { path: 'airExport', component: AirExportComponent},\r\n      { path: 'oceanImport', component: OceanImportComponent},\r\n      { path: 'oceanExport', component: OceanExportComponent},\r\n      { path: 'entries', component: EntriesComponent}\r\n  ],\r\n  }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TrackAndTraceRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TruckAmsModule",
            "id": "module-TruckAmsModule-a160475c1c1cd9ffe57e5ae66316ac29502a0f8f6db0c666350b388d83848652d1f3c9669bd374e4f15f54931a4b1d43e9a36c077cf5cef998520594c94374d0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/truck-ams/truck-ams.module.ts",
            "methods": [],
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AmsDetailComponent } from './ams-detail/ams-detail.component';\r\nimport { AmsSummaryComponent } from './ams-summary/ams-summary.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgModule } from '@angular/core';\r\nimport { TruckAmsComponent } from './truck-ams.component';\r\nimport { TruckAmsDashboardComponent } from './truck-ams-dashboard/truck-ams-dashboard.component';\r\nimport { TruckAmsRoutingModule } from './truck-ams-routing.module';\r\nimport { WidgetsModule } from 'src/app/widgets/widgets.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TruckAmsComponent,\r\n    AmsSummaryComponent,\r\n    AmsDetailComponent,\r\n    TruckAmsDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatTabsModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    WidgetsModule,\r\n    TruckAmsRoutingModule\r\n  ]\r\n})\r\nexport class TruckAmsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TruckAmsComponent"
                        },
                        {
                            "name": "TruckAmsDashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TruckAmsRoutingModule"
                        },
                        {
                            "name": "WidgetsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TruckAmsRoutingModule",
            "id": "module-TruckAmsRoutingModule-1fed50f070a565f45598589d2d016713d27e776db7a7627509783cc55ce2c01d1e8c9cb1d8cb11a102eb02a0b4174826c2eb0ea591c5e3aefc299cdb75f91d2b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/truck-ams/truck-ams-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TruckAmsComponent } from './truck-ams.component';\r\n\r\nconst routes: Routes = [{ path: '', component: TruckAmsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TruckAmsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TruckingModule",
            "id": "module-TruckingModule-f697d674468852cc0ae673c59dc5d9d7e3e3169f9800923696132f255da249b769237277b92b43cc91674c61493bff4d6109ddf00888fc89ed81d8a72bd46ef2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/trucking/trucking.module.ts",
            "methods": [],
            "sourceCode": "import { MatGridAvatarCssMatStyler, MatGridListModule } from '@angular/material/grid-list';\r\n\r\nimport { AirComponent } from './air/air.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FclComponent } from './fcl/fcl.component';\r\nimport { LclComponent } from './lcl/lcl.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { NgModule } from '@angular/core';\r\nimport { TruckingComponent } from './trucking.component';\r\nimport { TruckingRoutingModule } from './trucking-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TruckingComponent,\r\n    AirComponent,\r\n    FclComponent,\r\n    LclComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    TruckingRoutingModule\r\n  ]\r\n})\r\nexport class TruckingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AirComponent"
                        },
                        {
                            "name": "FclComponent"
                        },
                        {
                            "name": "LclComponent"
                        },
                        {
                            "name": "TruckingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TruckingRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TruckingRoutingModule",
            "id": "module-TruckingRoutingModule-6815286c6b9d5952bb68ae8f7f9d61380f7d269dd4794ffd80097621089655583bd80d11e244602554a31db425f8f179fd4e6d4cda3c9201eae308739f60afb3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/trucking/trucking-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AirComponent } from './air/air.component';\r\nimport { FclComponent } from './fcl/fcl.component';\r\nimport { LclComponent } from './lcl/lcl.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { TruckingComponent } from './trucking.component';\r\n\r\nconst routes: Routes = [{ path: '', component: TruckingComponent,\r\n                          children: [\r\n                            {path: 'air', component: AirComponent},\r\n                            {path: 'lcl', component: LclComponent},\r\n                            {path: 'fcl', component: FclComponent}\r\n                          ] }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TruckingRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WidgetsModule",
            "id": "module-WidgetsModule-f05ac2f33a3784ba0ead200e29bbf1176fdb53041b3557f1fdaa80e6dfc144c8020426c3d8cfc587a55f9afb706b1f1da173af654412ffa4f32b42af3076fd9e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/widgets/widgets.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ApexChartComponent } from './apex-chart/apex-chart.component';\r\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\r\nimport { BrushChartComponent } from './brush-chart/brush-chart.component';\r\nimport { BubbleChartComponent } from './bubble-chart/bubble-chart.component';\r\nimport { ChartsComponent } from './charts/charts.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DonutChartComponent } from './donut-chart/donut-chart.component';\r\nimport { DonutMonochromeComponent } from './donut-monochrome/donut-monochrome.component';\r\nimport { MonthlySummaryComponent } from './monthly-summary/monthly-summary.component';\r\nimport { MultiYComponent } from './multi-y/multi-y.component';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { NgChartsModule } from 'ng2-charts';\r\nimport { NgModule } from '@angular/core';\r\nimport { PolarChartComponent } from './polar-chart/polar-chart.component';\r\nimport { RadarChartComponent } from './radar-chart/radar-chart.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Todo02Component } from './todo02/todo02.component';\r\nimport { TodoComponent } from './todo-list/todo/todo.component';\r\nimport { TodoListComponent } from './todo-list/todo-list.component';\r\n\r\nconst routes: Routes = []\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TodoListComponent,\r\n    TodoComponent,\r\n    ChartsComponent,\r\n    BarChartComponent,\r\n    BubbleChartComponent,\r\n    RadarChartComponent,\r\n    ApexChartComponent,\r\n    BrushChartComponent,\r\n    DonutChartComponent,\r\n    DonutMonochromeComponent,\r\n    PolarChartComponent,\r\n    MultiYComponent,\r\n    Todo02Component,\r\n    MonthlySummaryComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgChartsModule,\r\n    ReactiveFormsModule,\r\n    NgApexchartsModule\r\n  ],\r\n\r\n  exports: [\r\n    TodoComponent,\r\n    TodoListComponent,\r\n    ChartsComponent,\r\n    BarChartComponent,\r\n    BubbleChartComponent,\r\n    RadarChartComponent,\r\n    BrushChartComponent,\r\n    DonutChartComponent,\r\n    DonutMonochromeComponent,\r\n    ApexChartComponent,\r\n    PolarChartComponent,\r\n    MultiYComponent,\r\n    Todo02Component,\r\n    MonthlySummaryComponent\r\n  ],\r\n\r\n})\r\nexport class WidgetsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApexChartComponent"
                        },
                        {
                            "name": "BarChartComponent"
                        },
                        {
                            "name": "BrushChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "ChartsComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "DonutMonochromeComponent"
                        },
                        {
                            "name": "MonthlySummaryComponent"
                        },
                        {
                            "name": "MultiYComponent"
                        },
                        {
                            "name": "PolarChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "Todo02Component"
                        },
                        {
                            "name": "TodoComponent"
                        },
                        {
                            "name": "TodoListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ApexChartComponent"
                        },
                        {
                            "name": "BarChartComponent"
                        },
                        {
                            "name": "BrushChartComponent"
                        },
                        {
                            "name": "BubbleChartComponent"
                        },
                        {
                            "name": "ChartsComponent"
                        },
                        {
                            "name": "DonutChartComponent"
                        },
                        {
                            "name": "DonutMonochromeComponent"
                        },
                        {
                            "name": "MonthlySummaryComponent"
                        },
                        {
                            "name": "MultiYComponent"
                        },
                        {
                            "name": "PolarChartComponent"
                        },
                        {
                            "name": "RadarChartComponent"
                        },
                        {
                            "name": "Todo02Component"
                        },
                        {
                            "name": "TodoComponent"
                        },
                        {
                            "name": "TodoListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "API_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/importers.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"https://nodejs01-app.herokuapp.com/importers\""
            },
            {
                "name": "API_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/user.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://nodejs01-app.herokuapp.com/'"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "COUNTRIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Country[]",
                "defaultValue": "[\r\n  {\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n]"
            },
            {
                "name": "dataSeries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/widgets/bar-chart/data-series.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  [\r\n    {\r\n      date: \"2014-01-01\",\r\n      value: 20000000\r\n    },\r\n    {\r\n      date: \"2014-01-02\",\r\n      value: 10379978\r\n    },\r\n    {\r\n      date: \"2014-01-03\",\r\n      value: 30493749\r\n    },\r\n    {\r\n      date: \"2014-01-04\",\r\n      value: 10785250\r\n    },\r\n    {\r\n      date: \"2014-01-05\",\r\n      value: 33901904\r\n    },\r\n    {\r\n      date: \"2014-01-06\",\r\n      value: 11576838\r\n    },\r\n    {\r\n      date: \"2014-01-07\",\r\n      value: 14413854\r\n    },\r\n    {\r\n      date: \"2014-01-08\",\r\n      value: 15177211\r\n    },\r\n    {\r\n      date: \"2014-01-09\",\r\n      value: 16622100\r\n    },\r\n    {\r\n      date: \"2014-01-10\",\r\n      value: 17381072\r\n    },\r\n    {\r\n      date: \"2014-01-11\",\r\n      value: 18802310\r\n    },\r\n    {\r\n      date: \"2014-01-12\",\r\n      value: 15531790\r\n    },\r\n    {\r\n      date: \"2014-01-13\",\r\n      value: 15748881\r\n    },\r\n    {\r\n      date: \"2014-01-14\",\r\n      value: 18706437\r\n    },\r\n    {\r\n      date: \"2014-01-15\",\r\n      value: 19752685\r\n    },\r\n    {\r\n      date: \"2014-01-16\",\r\n      value: 21016418\r\n    },\r\n    {\r\n      date: \"2014-01-17\",\r\n      value: 25622924\r\n    },\r\n    {\r\n      date: \"2014-01-18\",\r\n      value: 25337480\r\n    },\r\n    {\r\n      date: \"2014-01-19\",\r\n      value: 22258882\r\n    },\r\n    {\r\n      date: \"2014-01-20\",\r\n      value: 23829538\r\n    },\r\n    {\r\n      date: \"2014-01-21\",\r\n      value: 24245689\r\n    },\r\n    {\r\n      date: \"2014-01-22\",\r\n      value: 26429711\r\n    },\r\n    {\r\n      date: \"2014-01-23\",\r\n      value: 26259017\r\n    },\r\n    {\r\n      date: \"2014-01-24\",\r\n      value: 25396183\r\n    },\r\n    {\r\n      date: \"2014-01-25\",\r\n      value: 23107346\r\n    },\r\n    {\r\n      date: \"2014-01-26\",\r\n      value: 28659852\r\n    },\r\n    {\r\n      date: \"2014-01-27\",\r\n      value: 25270783\r\n    },\r\n    {\r\n      date: \"2014-01-28\",\r\n      value: 26270783\r\n    },\r\n    {\r\n      date: \"2014-01-29\",\r\n      value: 27270783\r\n    },\r\n    {\r\n      date: \"2014-01-30\",\r\n      value: 28270783\r\n    },\r\n    {\r\n      date: \"2014-01-31\",\r\n      value: 29270783\r\n    },\r\n    {\r\n      date: \"2014-02-01\",\r\n      value: 30270783\r\n    },\r\n    {\r\n      date: \"2014-02-02\",\r\n      value: 31270783\r\n    },\r\n    {\r\n      date: \"2014-02-03\",\r\n      value: 32270783\r\n    },\r\n    {\r\n      date: \"2014-02-04\",\r\n      value: 33270783\r\n    },\r\n    {\r\n      date: \"2014-02-05\",\r\n      value: 28270783\r\n    },\r\n    {\r\n      date: \"2014-02-06\",\r\n      value: 27270783\r\n    },\r\n    {\r\n      date: \"2014-02-07\",\r\n      value: 35270783\r\n    },\r\n    {\r\n      date: \"2014-02-08\",\r\n      value: 34270783\r\n    },\r\n    {\r\n      date: \"2014-02-09\",\r\n      value: 28270783\r\n    },\r\n    {\r\n      date: \"2014-02-10\",\r\n      value: 35270783\r\n    },\r\n    {\r\n      date: \"2014-02-11\",\r\n      value: 36270783\r\n    },\r\n    {\r\n      date: \"2014-02-12\",\r\n      value: 34127078\r\n    },\r\n    {\r\n      date: \"2014-02-13\",\r\n      value: 33124078\r\n    },\r\n    {\r\n      date: \"2014-02-14\",\r\n      value: 36227078\r\n    },\r\n    {\r\n      date: \"2014-02-15\",\r\n      value: 37827078\r\n    },\r\n    {\r\n      date: \"2014-02-16\",\r\n      value: 36427073\r\n    },\r\n    {\r\n      date: \"2014-02-17\",\r\n      value: 37570783\r\n    },\r\n    {\r\n      date: \"2014-02-18\",\r\n      value: 38627073\r\n    },\r\n    {\r\n      date: \"2014-02-19\",\r\n      value: 37727078\r\n    },\r\n    {\r\n      date: \"2014-02-20\",\r\n      value: 38827073\r\n    },\r\n    {\r\n      date: \"2014-02-21\",\r\n      value: 40927078\r\n    },\r\n    {\r\n      date: \"2014-02-22\",\r\n      value: 41027078\r\n    },\r\n    {\r\n      date: \"2014-02-23\",\r\n      value: 42127073\r\n    },\r\n    {\r\n      date: \"2014-02-24\",\r\n      value: 43220783\r\n    },\r\n    {\r\n      date: \"2014-02-25\",\r\n      value: 44327078\r\n    },\r\n    {\r\n      date: \"2014-02-26\",\r\n      value: 40427078\r\n    },\r\n    {\r\n      date: \"2014-02-27\",\r\n      value: 41027078\r\n    },\r\n    {\r\n      date: \"2014-02-28\",\r\n      value: 45627078\r\n    },\r\n    {\r\n      date: \"2014-03-01\",\r\n      value: 44727078\r\n    },\r\n    {\r\n      date: \"2014-03-02\",\r\n      value: 44227078\r\n    },\r\n    {\r\n      date: \"2014-03-03\",\r\n      value: 45227078\r\n    },\r\n    {\r\n      date: \"2014-03-04\",\r\n      value: 46027078\r\n    },\r\n    {\r\n      date: \"2014-03-05\",\r\n      value: 46927078\r\n    },\r\n    {\r\n      date: \"2014-03-06\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-07\",\r\n      value: 46227078\r\n    },\r\n    {\r\n      date: \"2014-03-08\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-09\",\r\n      value: 48027078\r\n    },\r\n    {\r\n      date: \"2014-03-10\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-11\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-12\",\r\n      value: 48017078\r\n    },\r\n    {\r\n      date: \"2014-03-13\",\r\n      value: 48077078\r\n    },\r\n    {\r\n      date: \"2014-03-14\",\r\n      value: 48087078\r\n    },\r\n    {\r\n      date: \"2014-03-15\",\r\n      value: 48017078\r\n    },\r\n    {\r\n      date: \"2014-03-16\",\r\n      value: 48047078\r\n    },\r\n    {\r\n      date: \"2014-03-17\",\r\n      value: 48067078\r\n    },\r\n    {\r\n      date: \"2014-03-18\",\r\n      value: 48077078\r\n    },\r\n    {\r\n      date: \"2014-03-19\",\r\n      value: 48027074\r\n    },\r\n    {\r\n      date: \"2014-03-20\",\r\n      value: 48927079\r\n    },\r\n    {\r\n      date: \"2014-03-21\",\r\n      value: 48727071\r\n    },\r\n    {\r\n      date: \"2014-03-22\",\r\n      value: 48127072\r\n    },\r\n    {\r\n      date: \"2014-03-23\",\r\n      value: 48527072\r\n    },\r\n    {\r\n      date: \"2014-03-24\",\r\n      value: 48627027\r\n    },\r\n    {\r\n      date: \"2014-03-25\",\r\n      value: 48027040\r\n    },\r\n    {\r\n      date: \"2014-03-26\",\r\n      value: 48027043\r\n    },\r\n    {\r\n      date: \"2014-03-27\",\r\n      value: 48057022\r\n    },\r\n    {\r\n      date: \"2014-03-28\",\r\n      value: 49057022\r\n    },\r\n    {\r\n      date: \"2014-03-29\",\r\n      value: 50057022\r\n    },\r\n    {\r\n      date: \"2014-03-30\",\r\n      value: 51057022\r\n    },\r\n    {\r\n      date: \"2014-03-31\",\r\n      value: 52057022\r\n    },\r\n    {\r\n      date: \"2014-04-01\",\r\n      value: 53057022\r\n    },\r\n    {\r\n      date: \"2014-04-02\",\r\n      value: 54057022\r\n    },\r\n    {\r\n      date: \"2014-04-03\",\r\n      value: 52057022\r\n    },\r\n    {\r\n      date: \"2014-04-04\",\r\n      value: 55057022\r\n    },\r\n    {\r\n      date: \"2014-04-05\",\r\n      value: 58270783\r\n    },\r\n    {\r\n      date: \"2014-04-06\",\r\n      value: 56270783\r\n    },\r\n    {\r\n      date: \"2014-04-07\",\r\n      value: 55270783\r\n    },\r\n    {\r\n      date: \"2014-04-08\",\r\n      value: 58270783\r\n    },\r\n    {\r\n      date: \"2014-04-09\",\r\n      value: 59270783\r\n    },\r\n    {\r\n      date: \"2014-04-10\",\r\n      value: 60270783\r\n    },\r\n    {\r\n      date: \"2014-04-11\",\r\n      value: 61270783\r\n    },\r\n    {\r\n      date: \"2014-04-12\",\r\n      value: 62270783\r\n    },\r\n    {\r\n      date: \"2014-04-13\",\r\n      value: 63270783\r\n    },\r\n    {\r\n      date: \"2014-04-14\",\r\n      value: 64270783\r\n    },\r\n    {\r\n      date: \"2014-04-15\",\r\n      value: 65270783\r\n    },\r\n    {\r\n      date: \"2014-04-16\",\r\n      value: 66270783\r\n    },\r\n    {\r\n      date: \"2014-04-17\",\r\n      value: 67270783\r\n    },\r\n    {\r\n      date: \"2014-04-18\",\r\n      value: 68270783\r\n    },\r\n    {\r\n      date: \"2014-04-19\",\r\n      value: 69270783\r\n    },\r\n    {\r\n      date: \"2014-04-20\",\r\n      value: 70270783\r\n    },\r\n    {\r\n      date: \"2014-04-21\",\r\n      value: 71270783\r\n    },\r\n    {\r\n      date: \"2014-04-22\",\r\n      value: 72270783\r\n    },\r\n    {\r\n      date: \"2014-04-23\",\r\n      value: 73270783\r\n    },\r\n    {\r\n      date: \"2014-04-24\",\r\n      value: 74270783\r\n    },\r\n    {\r\n      date: \"2014-04-25\",\r\n      value: 75270783\r\n    },\r\n    {\r\n      date: \"2014-04-26\",\r\n      value: 76660783\r\n    },\r\n    {\r\n      date: \"2014-04-27\",\r\n      value: 77270783\r\n    },\r\n    {\r\n      date: \"2014-04-28\",\r\n      value: 78370783\r\n    },\r\n    {\r\n      date: \"2014-04-29\",\r\n      value: 79470783\r\n    },\r\n    {\r\n      date: \"2014-04-30\",\r\n      value: 80170783\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      date: \"2014-01-01\",\r\n      value: 150000000\r\n    },\r\n    {\r\n      date: \"2014-01-02\",\r\n      value: 160379978\r\n    },\r\n    {\r\n      date: \"2014-01-03\",\r\n      value: 170493749\r\n    },\r\n    {\r\n      date: \"2014-01-04\",\r\n      value: 160785250\r\n    },\r\n    {\r\n      date: \"2014-01-05\",\r\n      value: 167391904\r\n    },\r\n    {\r\n      date: \"2014-01-06\",\r\n      value: 161576838\r\n    },\r\n    {\r\n      date: \"2014-01-07\",\r\n      value: 161413854\r\n    },\r\n    {\r\n      date: \"2014-01-08\",\r\n      value: 152177211\r\n    },\r\n    {\r\n      date: \"2014-01-09\",\r\n      value: 140762210\r\n    },\r\n    {\r\n      date: \"2014-01-10\",\r\n      value: 144381072\r\n    },\r\n    {\r\n      date: \"2014-01-11\",\r\n      value: 154352310\r\n    },\r\n    {\r\n      date: \"2014-01-12\",\r\n      value: 165531790\r\n    },\r\n    {\r\n      date: \"2014-01-13\",\r\n      value: 175748881\r\n    },\r\n    {\r\n      date: \"2014-01-14\",\r\n      value: 187064037\r\n    },\r\n    {\r\n      date: \"2014-01-15\",\r\n      value: 197520685\r\n    },\r\n    {\r\n      date: \"2014-01-16\",\r\n      value: 210176418\r\n    },\r\n    {\r\n      date: \"2014-01-17\",\r\n      value: 196122924\r\n    },\r\n    {\r\n      date: \"2014-01-18\",\r\n      value: 207337480\r\n    },\r\n    {\r\n      date: \"2014-01-19\",\r\n      value: 200258882\r\n    },\r\n    {\r\n      date: \"2014-01-20\",\r\n      value: 186829538\r\n    },\r\n    {\r\n      date: \"2014-01-21\",\r\n      value: 192456897\r\n    },\r\n    {\r\n      date: \"2014-01-22\",\r\n      value: 204299711\r\n    },\r\n    {\r\n      date: \"2014-01-23\",\r\n      value: 192759017\r\n    },\r\n    {\r\n      date: \"2014-01-24\",\r\n      value: 203596183\r\n    },\r\n    {\r\n      date: \"2014-01-25\",\r\n      value: 208107346\r\n    },\r\n    {\r\n      date: \"2014-01-26\",\r\n      value: 196359852\r\n    },\r\n    {\r\n      date: \"2014-01-27\",\r\n      value: 192570783\r\n    },\r\n    {\r\n      date: \"2014-01-28\",\r\n      value: 177967768\r\n    },\r\n    {\r\n      date: \"2014-01-29\",\r\n      value: 190632803\r\n    },\r\n    {\r\n      date: \"2014-01-30\",\r\n      value: 203725316\r\n    },\r\n    {\r\n      date: \"2014-01-31\",\r\n      value: 218226177\r\n    },\r\n    {\r\n      date: \"2014-02-01\",\r\n      value: 210698669\r\n    },\r\n    {\r\n      date: \"2014-02-02\",\r\n      value: 217640656\r\n    },\r\n    {\r\n      date: \"2014-02-03\",\r\n      value: 216142362\r\n    },\r\n    {\r\n      date: \"2014-02-04\",\r\n      value: 201410971\r\n    },\r\n    {\r\n      date: \"2014-02-05\",\r\n      value: 196704289\r\n    },\r\n    {\r\n      date: \"2014-02-06\",\r\n      value: 190436945\r\n    },\r\n    {\r\n      date: \"2014-02-07\",\r\n      value: 178891686\r\n    },\r\n    {\r\n      date: \"2014-02-08\",\r\n      value: 171613962\r\n    },\r\n    {\r\n      date: \"2014-02-09\",\r\n      value: 157579773\r\n    },\r\n    {\r\n      date: \"2014-02-10\",\r\n      value: 158677098\r\n    },\r\n    {\r\n      date: \"2014-02-11\",\r\n      value: 147129977\r\n    },\r\n    {\r\n      date: \"2014-02-12\",\r\n      value: 151561876\r\n    },\r\n    {\r\n      date: \"2014-02-13\",\r\n      value: 151627421\r\n    },\r\n    {\r\n      date: \"2014-02-14\",\r\n      value: 143543872\r\n    },\r\n    {\r\n      date: \"2014-02-15\",\r\n      value: 136581057\r\n    },\r\n    {\r\n      date: \"2014-02-16\",\r\n      value: 135560715\r\n    },\r\n    {\r\n      date: \"2014-02-17\",\r\n      value: 122625263\r\n    },\r\n    {\r\n      date: \"2014-02-18\",\r\n      value: 112091484\r\n    },\r\n    {\r\n      date: \"2014-02-19\",\r\n      value: 98810329\r\n    },\r\n    {\r\n      date: \"2014-02-20\",\r\n      value: 99882912\r\n    },\r\n    {\r\n      date: \"2014-02-21\",\r\n      value: 94943095\r\n    },\r\n    {\r\n      date: \"2014-02-22\",\r\n      value: 104875743\r\n    },\r\n    {\r\n      date: \"2014-02-23\",\r\n      value: 116383678\r\n    },\r\n    {\r\n      date: \"2014-02-24\",\r\n      value: 125028841\r\n    },\r\n    {\r\n      date: \"2014-02-25\",\r\n      value: 123967310\r\n    },\r\n    {\r\n      date: \"2014-02-26\",\r\n      value: 133167029\r\n    },\r\n    {\r\n      date: \"2014-02-27\",\r\n      value: 128577263\r\n    },\r\n    {\r\n      date: \"2014-02-28\",\r\n      value: 115836969\r\n    },\r\n    {\r\n      date: \"2014-03-01\",\r\n      value: 119264529\r\n    },\r\n    {\r\n      date: \"2014-03-02\",\r\n      value: 109363374\r\n    },\r\n    {\r\n      date: \"2014-03-03\",\r\n      value: 113985628\r\n    },\r\n    {\r\n      date: \"2014-03-04\",\r\n      value: 114650999\r\n    },\r\n    {\r\n      date: \"2014-03-05\",\r\n      value: 110866108\r\n    },\r\n    {\r\n      date: \"2014-03-06\",\r\n      value: 96473454\r\n    },\r\n    {\r\n      date: \"2014-03-07\",\r\n      value: 104075886\r\n    },\r\n    {\r\n      date: \"2014-03-08\",\r\n      value: 103568384\r\n    },\r\n    {\r\n      date: \"2014-03-09\",\r\n      value: 101534883\r\n    },\r\n    {\r\n      date: \"2014-03-10\",\r\n      value: 115825447\r\n    },\r\n    {\r\n      date: \"2014-03-11\",\r\n      value: 126133916\r\n    },\r\n    {\r\n      date: \"2014-03-12\",\r\n      value: 116502109\r\n    },\r\n    {\r\n      date: \"2014-03-13\",\r\n      value: 130169411\r\n    },\r\n    {\r\n      date: \"2014-03-14\",\r\n      value: 124296886\r\n    },\r\n    {\r\n      date: \"2014-03-15\",\r\n      value: 126347399\r\n    },\r\n    {\r\n      date: \"2014-03-16\",\r\n      value: 131483669\r\n    },\r\n    {\r\n      date: \"2014-03-17\",\r\n      value: 142811333\r\n    },\r\n    {\r\n      date: \"2014-03-18\",\r\n      value: 129675396\r\n    },\r\n    {\r\n      date: \"2014-03-19\",\r\n      value: 115514483\r\n    },\r\n    {\r\n      date: \"2014-03-20\",\r\n      value: 117630630\r\n    },\r\n    {\r\n      date: \"2014-03-21\",\r\n      value: 122340239\r\n    },\r\n    {\r\n      date: \"2014-03-22\",\r\n      value: 132349091\r\n    },\r\n    {\r\n      date: \"2014-03-23\",\r\n      value: 125613305\r\n    },\r\n    {\r\n      date: \"2014-03-24\",\r\n      value: 135592466\r\n    },\r\n    {\r\n      date: \"2014-03-25\",\r\n      value: 123408762\r\n    },\r\n    {\r\n      date: \"2014-03-26\",\r\n      value: 111991454\r\n    },\r\n    {\r\n      date: \"2014-03-27\",\r\n      value: 116123955\r\n    },\r\n    {\r\n      date: \"2014-03-28\",\r\n      value: 112817214\r\n    },\r\n    {\r\n      date: \"2014-03-29\",\r\n      value: 113029590\r\n    },\r\n    {\r\n      date: \"2014-03-30\",\r\n      value: 108753398\r\n    },\r\n    {\r\n      date: \"2014-03-31\",\r\n      value: 99383763\r\n    },\r\n    {\r\n      date: \"2014-04-01\",\r\n      value: 100151737\r\n    },\r\n    {\r\n      date: \"2014-04-02\",\r\n      value: 94985209\r\n    },\r\n    {\r\n      date: \"2014-04-03\",\r\n      value: 82913669\r\n    },\r\n    {\r\n      date: \"2014-04-04\",\r\n      value: 78748268\r\n    },\r\n    {\r\n      date: \"2014-04-05\",\r\n      value: 63829135\r\n    },\r\n    {\r\n      date: \"2014-04-06\",\r\n      value: 78694727\r\n    },\r\n    {\r\n      date: \"2014-04-07\",\r\n      value: 80868994\r\n    },\r\n    {\r\n      date: \"2014-04-08\",\r\n      value: 93799013\r\n    },\r\n    {\r\n      date: \"2014-04-09\",\r\n      value: 99042416\r\n    },\r\n    {\r\n      date: \"2014-04-10\",\r\n      value: 97298692\r\n    },\r\n    {\r\n      date: \"2014-04-11\",\r\n      value: 83353499\r\n    },\r\n    {\r\n      date: \"2014-04-12\",\r\n      value: 71248129\r\n    },\r\n    {\r\n      date: \"2014-04-13\",\r\n      value: 75253744\r\n    },\r\n    {\r\n      date: \"2014-04-14\",\r\n      value: 68976648\r\n    },\r\n    {\r\n      date: \"2014-04-15\",\r\n      value: 71002284\r\n    },\r\n    {\r\n      date: \"2014-04-16\",\r\n      value: 75052401\r\n    },\r\n    {\r\n      date: \"2014-04-17\",\r\n      value: 83894030\r\n    },\r\n    {\r\n      date: \"2014-04-18\",\r\n      value: 90236528\r\n    },\r\n    {\r\n      date: \"2014-04-19\",\r\n      value: 99739114\r\n    },\r\n    {\r\n      date: \"2014-04-20\",\r\n      value: 96407136\r\n    },\r\n    {\r\n      date: \"2014-04-21\",\r\n      value: 108323177\r\n    },\r\n    {\r\n      date: \"2014-04-22\",\r\n      value: 101578914\r\n    },\r\n    {\r\n      date: \"2014-04-23\",\r\n      value: 115877608\r\n    },\r\n    {\r\n      date: \"2014-04-24\",\r\n      value: 112088857\r\n    },\r\n    {\r\n      date: \"2014-04-25\",\r\n      value: 112071353\r\n    },\r\n    {\r\n      date: \"2014-04-26\",\r\n      value: 101790062\r\n    },\r\n    {\r\n      date: \"2014-04-27\",\r\n      value: 115003761\r\n    },\r\n    {\r\n      date: \"2014-04-28\",\r\n      value: 120457727\r\n    },\r\n    {\r\n      date: \"2014-04-29\",\r\n      value: 118253926\r\n    },\r\n    {\r\n      date: \"2014-04-30\",\r\n      value: 117956992\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      date: \"2014-01-01\",\r\n      value: 50000000\r\n    },\r\n    {\r\n      date: \"2014-01-02\",\r\n      value: 60379978\r\n    },\r\n    {\r\n      date: \"2014-01-03\",\r\n      value: 40493749\r\n    },\r\n    {\r\n      date: \"2014-01-04\",\r\n      value: 60785250\r\n    },\r\n    {\r\n      date: \"2014-01-05\",\r\n      value: 67391904\r\n    },\r\n    {\r\n      date: \"2014-01-06\",\r\n      value: 61576838\r\n    },\r\n    {\r\n      date: \"2014-01-07\",\r\n      value: 61413854\r\n    },\r\n    {\r\n      date: \"2014-01-08\",\r\n      value: 82177211\r\n    },\r\n    {\r\n      date: \"2014-01-09\",\r\n      value: 103762210\r\n    },\r\n    {\r\n      date: \"2014-01-10\",\r\n      value: 84381072\r\n    },\r\n    {\r\n      date: \"2014-01-11\",\r\n      value: 54352310\r\n    },\r\n    {\r\n      date: \"2014-01-12\",\r\n      value: 65531790\r\n    },\r\n    {\r\n      date: \"2014-01-13\",\r\n      value: 75748881\r\n    },\r\n    {\r\n      date: \"2014-01-14\",\r\n      value: 47064037\r\n    },\r\n    {\r\n      date: \"2014-01-15\",\r\n      value: 67520685\r\n    },\r\n    {\r\n      date: \"2014-01-16\",\r\n      value: 60176418\r\n    },\r\n    {\r\n      date: \"2014-01-17\",\r\n      value: 66122924\r\n    },\r\n    {\r\n      date: \"2014-01-18\",\r\n      value: 57337480\r\n    },\r\n    {\r\n      date: \"2014-01-19\",\r\n      value: 100258882\r\n    },\r\n    {\r\n      date: \"2014-01-20\",\r\n      value: 46829538\r\n    },\r\n    {\r\n      date: \"2014-01-21\",\r\n      value: 92456897\r\n    },\r\n    {\r\n      date: \"2014-01-22\",\r\n      value: 94299711\r\n    },\r\n    {\r\n      date: \"2014-01-23\",\r\n      value: 62759017\r\n    },\r\n    {\r\n      date: \"2014-01-24\",\r\n      value: 103596183\r\n    },\r\n    {\r\n      date: \"2014-01-25\",\r\n      value: 108107346\r\n    },\r\n    {\r\n      date: \"2014-01-26\",\r\n      value: 66359852\r\n    },\r\n    {\r\n      date: \"2014-01-27\",\r\n      value: 62570783\r\n    },\r\n    {\r\n      date: \"2014-01-28\",\r\n      value: 77967768\r\n    },\r\n    {\r\n      date: \"2014-01-29\",\r\n      value: 60632803\r\n    },\r\n    {\r\n      date: \"2014-01-30\",\r\n      value: 103725316\r\n    },\r\n    {\r\n      date: \"2014-01-31\",\r\n      value: 98226177\r\n    },\r\n    {\r\n      date: \"2014-02-01\",\r\n      value: 60698669\r\n    },\r\n    {\r\n      date: \"2014-02-02\",\r\n      value: 67640656\r\n    },\r\n    {\r\n      date: \"2014-02-03\",\r\n      value: 66142362\r\n    },\r\n    {\r\n      date: \"2014-02-04\",\r\n      value: 101410971\r\n    },\r\n    {\r\n      date: \"2014-02-05\",\r\n      value: 66704289\r\n    },\r\n    {\r\n      date: \"2014-02-06\",\r\n      value: 60436945\r\n    },\r\n    {\r\n      date: \"2014-02-07\",\r\n      value: 78891686\r\n    },\r\n    {\r\n      date: \"2014-02-08\",\r\n      value: 71613962\r\n    },\r\n    {\r\n      date: \"2014-02-09\",\r\n      value: 107579773\r\n    },\r\n    {\r\n      date: \"2014-02-10\",\r\n      value: 58677098\r\n    },\r\n    {\r\n      date: \"2014-02-11\",\r\n      value: 87129977\r\n    },\r\n    {\r\n      date: \"2014-02-12\",\r\n      value: 51561876\r\n    },\r\n    {\r\n      date: \"2014-02-13\",\r\n      value: 51627421\r\n    },\r\n    {\r\n      date: \"2014-02-14\",\r\n      value: 83543872\r\n    },\r\n    {\r\n      date: \"2014-02-15\",\r\n      value: 66581057\r\n    },\r\n    {\r\n      date: \"2014-02-16\",\r\n      value: 65560715\r\n    },\r\n    {\r\n      date: \"2014-02-17\",\r\n      value: 62625263\r\n    },\r\n    {\r\n      date: \"2014-02-18\",\r\n      value: 92091484\r\n    },\r\n    {\r\n      date: \"2014-02-19\",\r\n      value: 48810329\r\n    },\r\n    {\r\n      date: \"2014-02-20\",\r\n      value: 49882912\r\n    },\r\n    {\r\n      date: \"2014-02-21\",\r\n      value: 44943095\r\n    },\r\n    {\r\n      date: \"2014-02-22\",\r\n      value: 104875743\r\n    },\r\n    {\r\n      date: \"2014-02-23\",\r\n      value: 96383678\r\n    },\r\n    {\r\n      date: \"2014-02-24\",\r\n      value: 105028841\r\n    },\r\n    {\r\n      date: \"2014-02-25\",\r\n      value: 63967310\r\n    },\r\n    {\r\n      date: \"2014-02-26\",\r\n      value: 63167029\r\n    },\r\n    {\r\n      date: \"2014-02-27\",\r\n      value: 68577263\r\n    },\r\n    {\r\n      date: \"2014-02-28\",\r\n      value: 95836969\r\n    },\r\n    {\r\n      date: \"2014-03-01\",\r\n      value: 99264529\r\n    },\r\n    {\r\n      date: \"2014-03-02\",\r\n      value: 109363374\r\n    },\r\n    {\r\n      date: \"2014-03-03\",\r\n      value: 93985628\r\n    },\r\n    {\r\n      date: \"2014-03-04\",\r\n      value: 94650999\r\n    },\r\n    {\r\n      date: \"2014-03-05\",\r\n      value: 90866108\r\n    },\r\n    {\r\n      date: \"2014-03-06\",\r\n      value: 46473454\r\n    },\r\n    {\r\n      date: \"2014-03-07\",\r\n      value: 84075886\r\n    },\r\n    {\r\n      date: \"2014-03-08\",\r\n      value: 103568384\r\n    },\r\n    {\r\n      date: \"2014-03-09\",\r\n      value: 101534883\r\n    },\r\n    {\r\n      date: \"2014-03-10\",\r\n      value: 95825447\r\n    },\r\n    {\r\n      date: \"2014-03-11\",\r\n      value: 66133916\r\n    },\r\n    {\r\n      date: \"2014-03-12\",\r\n      value: 96502109\r\n    },\r\n    {\r\n      date: \"2014-03-13\",\r\n      value: 80169411\r\n    },\r\n    {\r\n      date: \"2014-03-14\",\r\n      value: 84296886\r\n    },\r\n    {\r\n      date: \"2014-03-15\",\r\n      value: 86347399\r\n    },\r\n    {\r\n      date: \"2014-03-16\",\r\n      value: 31483669\r\n    },\r\n    {\r\n      date: \"2014-03-17\",\r\n      value: 82811333\r\n    },\r\n    {\r\n      date: \"2014-03-18\",\r\n      value: 89675396\r\n    },\r\n    {\r\n      date: \"2014-03-19\",\r\n      value: 95514483\r\n    },\r\n    {\r\n      date: \"2014-03-20\",\r\n      value: 97630630\r\n    },\r\n    {\r\n      date: \"2014-03-21\",\r\n      value: 62340239\r\n    },\r\n    {\r\n      date: \"2014-03-22\",\r\n      value: 62349091\r\n    },\r\n    {\r\n      date: \"2014-03-23\",\r\n      value: 65613305\r\n    },\r\n    {\r\n      date: \"2014-03-24\",\r\n      value: 65592466\r\n    },\r\n    {\r\n      date: \"2014-03-25\",\r\n      value: 63408762\r\n    },\r\n    {\r\n      date: \"2014-03-26\",\r\n      value: 91991454\r\n    },\r\n    {\r\n      date: \"2014-03-27\",\r\n      value: 96123955\r\n    },\r\n    {\r\n      date: \"2014-03-28\",\r\n      value: 92817214\r\n    },\r\n    {\r\n      date: \"2014-03-29\",\r\n      value: 93029590\r\n    },\r\n    {\r\n      date: \"2014-03-30\",\r\n      value: 108753398\r\n    },\r\n    {\r\n      date: \"2014-03-31\",\r\n      value: 49383763\r\n    },\r\n    {\r\n      date: \"2014-04-01\",\r\n      value: 100151737\r\n    },\r\n    {\r\n      date: \"2014-04-02\",\r\n      value: 44985209\r\n    },\r\n    {\r\n      date: \"2014-04-03\",\r\n      value: 52913669\r\n    },\r\n    {\r\n      date: \"2014-04-04\",\r\n      value: 48748268\r\n    },\r\n    {\r\n      date: \"2014-04-05\",\r\n      value: 23829135\r\n    },\r\n    {\r\n      date: \"2014-04-06\",\r\n      value: 58694727\r\n    },\r\n    {\r\n      date: \"2014-04-07\",\r\n      value: 50868994\r\n    },\r\n    {\r\n      date: \"2014-04-08\",\r\n      value: 43799013\r\n    },\r\n    {\r\n      date: \"2014-04-09\",\r\n      value: 4042416\r\n    },\r\n    {\r\n      date: \"2014-04-10\",\r\n      value: 47298692\r\n    },\r\n    {\r\n      date: \"2014-04-11\",\r\n      value: 53353499\r\n    },\r\n    {\r\n      date: \"2014-04-12\",\r\n      value: 71248129\r\n    },\r\n    {\r\n      date: \"2014-04-13\",\r\n      value: 75253744\r\n    },\r\n    {\r\n      date: \"2014-04-14\",\r\n      value: 68976648\r\n    },\r\n    {\r\n      date: \"2014-04-15\",\r\n      value: 71002284\r\n    },\r\n    {\r\n      date: \"2014-04-16\",\r\n      value: 75052401\r\n    },\r\n    {\r\n      date: \"2014-04-17\",\r\n      value: 83894030\r\n    },\r\n    {\r\n      date: \"2014-04-18\",\r\n      value: 50236528\r\n    },\r\n    {\r\n      date: \"2014-04-19\",\r\n      value: 59739114\r\n    },\r\n    {\r\n      date: \"2014-04-20\",\r\n      value: 56407136\r\n    },\r\n    {\r\n      date: \"2014-04-21\",\r\n      value: 108323177\r\n    },\r\n    {\r\n      date: \"2014-04-22\",\r\n      value: 101578914\r\n    },\r\n    {\r\n      date: \"2014-04-23\",\r\n      value: 95877608\r\n    },\r\n    {\r\n      date: \"2014-04-24\",\r\n      value: 62088857\r\n    },\r\n    {\r\n      date: \"2014-04-25\",\r\n      value: 92071353\r\n    },\r\n    {\r\n      date: \"2014-04-26\",\r\n      value: 81790062\r\n    },\r\n    {\r\n      date: \"2014-04-27\",\r\n      value: 105003761\r\n    },\r\n    {\r\n      date: \"2014-04-28\",\r\n      value: 100457727\r\n    },\r\n    {\r\n      date: \"2014-04-29\",\r\n      value: 98253926\r\n    },\r\n    {\r\n      date: \"2014-04-30\",\r\n      value: 67956992\r\n    }\r\n  ]\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/cmsq/cmsq.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/carriers/carriers-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CarriersItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AddCvdItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/country/country-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Country[]",
                "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'France',\r\n    flag: 'c/c3/Flag_of_France.svg',\r\n    area: 640679,\r\n    population: 64979548\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Germany',\r\n    flag: 'b/ba/Flag_of_Germany.svg',\r\n    area: 357114,\r\n    population: 82114224\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Portugal',\r\n    flag: '5/5c/Flag_of_Portugal.svg',\r\n    area: 92090,\r\n    population: 10329506\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Vietnam',\r\n    flag: '2/21/Flag_of_Vietnam.svg',\r\n    area: 331212,\r\n    population: 95540800\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Brazil',\r\n    flag: '0/05/Flag_of_Brazil.svg',\r\n    area: 8515767,\r\n    population: 209288278\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Mexico',\r\n    flag: 'f/fc/Flag_of_Mexico.svg',\r\n    area: 1964375,\r\n    population: 129163276\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'India',\r\n    flag: '4/41/Flag_of_India.svg',\r\n    area: 3287263,\r\n    population: 1324171354\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Indonesia',\r\n    flag: '9/9f/Flag_of_Indonesia.svg',\r\n    area: 1910931,\r\n    population: 263991379\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Tuvalu',\r\n    flag: '3/38/Flag_of_Tuvalu.svg',\r\n    area: 26,\r\n    population: 11097\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/currency/currency-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CurrencyItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FdaProductItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/firms/firms-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FirmsItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ForeignPortsItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ManufacturersItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/hts/hts-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HTSItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/ports/ports-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PortsItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/states/states-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StatesItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/vessel/vessel-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "VesselItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/tables/products/products-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProductsItem[]",
                "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
            },
            {
                "name": "FRUITS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                "rawdescription": "Constants used to fill up our data base.",
                "description": "<p>Constants used to fill up our data base.</p>\n"
            },
            {
                "name": "FRUITS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                "rawdescription": "Constants used to fill up our data base.",
                "description": "<p>Constants used to fill up our data base.</p>\n"
            },
            {
                "name": "FRUITS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                "rawdescription": "Constants used to fill up our data base.",
                "description": "<p>Constants used to fill up our data base.</p>\n"
            },
            {
                "name": "FRUITS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                "rawdescription": "Constants used to fill up our data base.",
                "description": "<p>Constants used to fill up our data base.</p>\n"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LAYOUT_HORIZONTAL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/layouts.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'horizontal'"
            },
            {
                "name": "LAYOUT_VERTICAL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/layouts.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'vertical'"
            },
            {
                "name": "LAYOUT_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/layouts.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'fluid'"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NAMES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
            },
            {
                "name": "NAMES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
            },
            {
                "name": "NAMES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
            },
            {
                "name": "NAMES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "seriesData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/widgets/brush-chart/ohlc.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    x: new Date(2016, 1, 1),\r\n    y: [51.98, 56.29, 51.59, 53.85]\r\n  },\r\n  {\r\n    x: new Date(2016, 2, 1),\r\n    y: [53.66, 54.99, 51.35, 52.95]\r\n  },\r\n  {\r\n    x: new Date(2016, 3, 1),\r\n    y: [52.96, 53.78, 51.54, 52.48]\r\n  },\r\n  {\r\n    x: new Date(2016, 4, 1),\r\n    y: [52.54, 52.79, 47.88, 49.24]\r\n  },\r\n  {\r\n    x: new Date(2016, 5, 1),\r\n    y: [49.1, 52.86, 47.7, 52.78]\r\n  },\r\n  {\r\n    x: new Date(2016, 6, 1),\r\n    y: [52.83, 53.48, 50.32, 52.29]\r\n  },\r\n  {\r\n    x: new Date(2016, 7, 1),\r\n    y: [52.2, 54.48, 51.64, 52.58]\r\n  },\r\n  {\r\n    x: new Date(2016, 8, 1),\r\n    y: [52.76, 57.35, 52.15, 57.03]\r\n  },\r\n  {\r\n    x: new Date(2016, 9, 1),\r\n    y: [57.04, 58.15, 48.88, 56.19]\r\n  },\r\n  {\r\n    x: new Date(2016, 10, 1),\r\n    y: [56.09, 58.85, 55.48, 58.79]\r\n  },\r\n  {\r\n    x: new Date(2016, 11, 1),\r\n    y: [58.78, 59.65, 58.23, 59.05]\r\n  },\r\n  {\r\n    x: new Date(2017, 0, 1),\r\n    y: [59.37, 61.11, 59.35, 60.34]\r\n  },\r\n  {\r\n    x: new Date(2017, 1, 1),\r\n    y: [60.4, 60.52, 56.71, 56.93]\r\n  },\r\n  {\r\n    x: new Date(2017, 2, 1),\r\n    y: [57.02, 59.71, 56.04, 56.82]\r\n  },\r\n  {\r\n    x: new Date(2017, 3, 1),\r\n    y: [56.97, 59.62, 54.77, 59.3]\r\n  },\r\n  {\r\n    x: new Date(2017, 4, 1),\r\n    y: [59.11, 62.29, 59.1, 59.85]\r\n  },\r\n  {\r\n    x: new Date(2017, 5, 1),\r\n    y: [59.97, 60.11, 55.66, 58.42]\r\n  },\r\n  {\r\n    x: new Date(2017, 6, 1),\r\n    y: [58.34, 60.93, 56.75, 57.42]\r\n  },\r\n  {\r\n    x: new Date(2017, 7, 1),\r\n    y: [57.76, 58.08, 51.18, 54.71]\r\n  },\r\n  {\r\n    x: new Date(2017, 8, 1),\r\n    y: [54.8, 61.42, 53.18, 57.35]\r\n  },\r\n  {\r\n    x: new Date(2017, 9, 1),\r\n    y: [57.56, 63.09, 57.0, 62.99]\r\n  },\r\n  {\r\n    x: new Date(2017, 10, 1),\r\n    y: [62.89, 63.42, 59.72, 61.76]\r\n  },\r\n  {\r\n    x: new Date(2017, 11, 1),\r\n    y: [61.71, 64.15, 61.29, 63.04]\r\n  }\r\n]"
            },
            {
                "name": "seriesDataLinear",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/widgets/brush-chart/ohlc.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    x: new Date(2016, 1, 1),\r\n    y: 3.85\r\n  },\r\n  {\r\n    x: new Date(2016, 2, 1),\r\n    y: 2.95\r\n  },\r\n  {\r\n    x: new Date(2016, 3, 1),\r\n    y: -12.48\r\n  },\r\n  {\r\n    x: new Date(2016, 4, 1),\r\n    y: 19.24\r\n  },\r\n  {\r\n    x: new Date(2016, 5, 1),\r\n    y: 12.78\r\n  },\r\n  {\r\n    x: new Date(2016, 6, 1),\r\n    y: 22.29\r\n  },\r\n  {\r\n    x: new Date(2016, 7, 1),\r\n    y: -12.58\r\n  },\r\n  {\r\n    x: new Date(2016, 8, 1),\r\n    y: -17.03\r\n  },\r\n  {\r\n    x: new Date(2016, 9, 1),\r\n    y: -19.19\r\n  },\r\n  {\r\n    x: new Date(2016, 10, 1),\r\n    y: -28.79\r\n  },\r\n  {\r\n    x: new Date(2016, 11, 1),\r\n    y: -39.05\r\n  },\r\n  {\r\n    x: new Date(2017, 0, 1),\r\n    y: 20.34\r\n  },\r\n  {\r\n    x: new Date(2017, 1, 1),\r\n    y: 36.93\r\n  },\r\n  {\r\n    x: new Date(2017, 2, 1),\r\n    y: 36.82\r\n  },\r\n  {\r\n    x: new Date(2017, 3, 1),\r\n    y: 29.3\r\n  },\r\n  {\r\n    x: new Date(2017, 4, 1),\r\n    y: 39.85\r\n  },\r\n  {\r\n    x: new Date(2017, 5, 1),\r\n    y: 28.42\r\n  },\r\n  {\r\n    x: new Date(2017, 6, 1),\r\n    y: 37.42\r\n  },\r\n  {\r\n    x: new Date(2017, 7, 1),\r\n    y: 24.71\r\n  },\r\n  {\r\n    x: new Date(2017, 8, 1),\r\n    y: 37.35\r\n  },\r\n  {\r\n    x: new Date(2017, 9, 1),\r\n    y: 32.99\r\n  },\r\n  {\r\n    x: new Date(2017, 10, 1),\r\n    y: 31.76\r\n  },\r\n  {\r\n    x: new Date(2017, 11, 1),\r\n    y: 43.04\r\n  }\r\n]"
            },
            {
                "name": "SIDEBAR_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/layouts.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dark'"
            },
            {
                "name": "SIDEBARMENU",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/sidebar/sidebar.menu.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SideBarMenuItem[]",
                "defaultValue": "[\r\n  {\r\n    displayName: 'DevFestFL',\r\n    iconName: 'recent_actors',\r\n    route: 'devfestfl',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'devfestfl/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'devfestfl/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'devfestfl/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'devfestfl/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'devfestfl/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/what-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/my-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/become-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'devfestfl/feedback'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    displayName: 'Disney',\r\n    iconName: 'videocam',\r\n    route: 'disney',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'disney/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'disney/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'disney/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'disney/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'disney/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessionswhat-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessionsmy-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessionsbecome-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'disney/feedback'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    displayName: 'Orlando',\r\n    iconName: 'videocam',\r\n    route: 'orlando',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'orlando/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'orlando/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'orlando/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'orlando/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'orlando/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/what-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/my-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/become-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'orlando/feedback'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    displayName: 'Maleficent',\r\n    iconName: 'videocam',\r\n    route: 'maleficent',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'maleficent/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'maleficent/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'maleficent/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'maleficent/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'maleficent/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/what-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/my-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/become-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'maleficent/feedback'\r\n      }\r\n    ]\r\n  },\r\n]"
            },
            {
                "name": "slideInAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routeAnimation', [\r\n    transition('heroes <=> hero', [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ]),\r\n      query(':enter', [\r\n        style({ left: '-100%'})\r\n      ]),\r\n      query(':leave', animateChild()),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({ left: '100%'}))\r\n        ]),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({ left: '0%'}))\r\n        ])\r\n      ]),\r\n      query(':enter', animateChild()),\r\n    ])\r\n  ])"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "squareOdd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/home/home.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "of(1, 2, 3, 4, 5, 6).pipe(\r\n  filter(n => n % 2 !== 0), map((n) => n * n)\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "theme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\r\n    light: 'light-theme',\r\n    dimmed: 'dimmed-theme',\r\n    dark: 'dark-theme',\r\n  }"
            },
            {
                "name": "TOPBAR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layouts/layouts.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dark'"
            }
        ],
        "functions": [
            {
                "name": "compare",
                "file": "src/app/pages/tables/carriers/carriers-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/country/country-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/currency/currency-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/firms/firms-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/hts/hts-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/ports/ports-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/states/states-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/vessel/vessel-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/pages/tables/products/products-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createNewUser",
                "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Builds and returns a new User.</p>\n",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UserData",
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createNewUser",
                "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Builds and returns a new User.</p>\n",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UserData",
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createNewUser",
                "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Builds and returns a new User.</p>\n",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UserData",
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createNewUser",
                "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Builds and returns a new User.</p>\n",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UserData",
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "search",
                "file": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pipe",
                        "type": "PipeTransform",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Country[]",
                "jsdoctags": [
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pipe",
                        "type": "PipeTransform",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "todoItem",
                "file": "src/app/widgets/todo02/todo02.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "todoItem",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "todoItem",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/apex-chart/apex-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/bar-chart/bar-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/brush-chart/brush-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/bubble-chart/bubble-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/donut-chart/donut-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/donut-monochrome/donut-monochrome.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/multi-y/multi-y.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ChartOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/widgets/polar-chart/polar-chart.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/services/importers.service.ts": [
                {
                    "name": "API_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/importers.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"https://nodejs01-app.herokuapp.com/importers\""
                }
            ],
            "src/app/services/user.service.ts": [
                {
                    "name": "API_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/user.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://nodejs01-app.herokuapp.com/'"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts": [
                {
                    "name": "COUNTRIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country[]",
                    "defaultValue": "[\r\n  {\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n]"
                }
            ],
            "src/app/widgets/bar-chart/data-series.ts": [
                {
                    "name": "dataSeries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/widgets/bar-chart/data-series.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  [\r\n    {\r\n      date: \"2014-01-01\",\r\n      value: 20000000\r\n    },\r\n    {\r\n      date: \"2014-01-02\",\r\n      value: 10379978\r\n    },\r\n    {\r\n      date: \"2014-01-03\",\r\n      value: 30493749\r\n    },\r\n    {\r\n      date: \"2014-01-04\",\r\n      value: 10785250\r\n    },\r\n    {\r\n      date: \"2014-01-05\",\r\n      value: 33901904\r\n    },\r\n    {\r\n      date: \"2014-01-06\",\r\n      value: 11576838\r\n    },\r\n    {\r\n      date: \"2014-01-07\",\r\n      value: 14413854\r\n    },\r\n    {\r\n      date: \"2014-01-08\",\r\n      value: 15177211\r\n    },\r\n    {\r\n      date: \"2014-01-09\",\r\n      value: 16622100\r\n    },\r\n    {\r\n      date: \"2014-01-10\",\r\n      value: 17381072\r\n    },\r\n    {\r\n      date: \"2014-01-11\",\r\n      value: 18802310\r\n    },\r\n    {\r\n      date: \"2014-01-12\",\r\n      value: 15531790\r\n    },\r\n    {\r\n      date: \"2014-01-13\",\r\n      value: 15748881\r\n    },\r\n    {\r\n      date: \"2014-01-14\",\r\n      value: 18706437\r\n    },\r\n    {\r\n      date: \"2014-01-15\",\r\n      value: 19752685\r\n    },\r\n    {\r\n      date: \"2014-01-16\",\r\n      value: 21016418\r\n    },\r\n    {\r\n      date: \"2014-01-17\",\r\n      value: 25622924\r\n    },\r\n    {\r\n      date: \"2014-01-18\",\r\n      value: 25337480\r\n    },\r\n    {\r\n      date: \"2014-01-19\",\r\n      value: 22258882\r\n    },\r\n    {\r\n      date: \"2014-01-20\",\r\n      value: 23829538\r\n    },\r\n    {\r\n      date: \"2014-01-21\",\r\n      value: 24245689\r\n    },\r\n    {\r\n      date: \"2014-01-22\",\r\n      value: 26429711\r\n    },\r\n    {\r\n      date: \"2014-01-23\",\r\n      value: 26259017\r\n    },\r\n    {\r\n      date: \"2014-01-24\",\r\n      value: 25396183\r\n    },\r\n    {\r\n      date: \"2014-01-25\",\r\n      value: 23107346\r\n    },\r\n    {\r\n      date: \"2014-01-26\",\r\n      value: 28659852\r\n    },\r\n    {\r\n      date: \"2014-01-27\",\r\n      value: 25270783\r\n    },\r\n    {\r\n      date: \"2014-01-28\",\r\n      value: 26270783\r\n    },\r\n    {\r\n      date: \"2014-01-29\",\r\n      value: 27270783\r\n    },\r\n    {\r\n      date: \"2014-01-30\",\r\n      value: 28270783\r\n    },\r\n    {\r\n      date: \"2014-01-31\",\r\n      value: 29270783\r\n    },\r\n    {\r\n      date: \"2014-02-01\",\r\n      value: 30270783\r\n    },\r\n    {\r\n      date: \"2014-02-02\",\r\n      value: 31270783\r\n    },\r\n    {\r\n      date: \"2014-02-03\",\r\n      value: 32270783\r\n    },\r\n    {\r\n      date: \"2014-02-04\",\r\n      value: 33270783\r\n    },\r\n    {\r\n      date: \"2014-02-05\",\r\n      value: 28270783\r\n    },\r\n    {\r\n      date: \"2014-02-06\",\r\n      value: 27270783\r\n    },\r\n    {\r\n      date: \"2014-02-07\",\r\n      value: 35270783\r\n    },\r\n    {\r\n      date: \"2014-02-08\",\r\n      value: 34270783\r\n    },\r\n    {\r\n      date: \"2014-02-09\",\r\n      value: 28270783\r\n    },\r\n    {\r\n      date: \"2014-02-10\",\r\n      value: 35270783\r\n    },\r\n    {\r\n      date: \"2014-02-11\",\r\n      value: 36270783\r\n    },\r\n    {\r\n      date: \"2014-02-12\",\r\n      value: 34127078\r\n    },\r\n    {\r\n      date: \"2014-02-13\",\r\n      value: 33124078\r\n    },\r\n    {\r\n      date: \"2014-02-14\",\r\n      value: 36227078\r\n    },\r\n    {\r\n      date: \"2014-02-15\",\r\n      value: 37827078\r\n    },\r\n    {\r\n      date: \"2014-02-16\",\r\n      value: 36427073\r\n    },\r\n    {\r\n      date: \"2014-02-17\",\r\n      value: 37570783\r\n    },\r\n    {\r\n      date: \"2014-02-18\",\r\n      value: 38627073\r\n    },\r\n    {\r\n      date: \"2014-02-19\",\r\n      value: 37727078\r\n    },\r\n    {\r\n      date: \"2014-02-20\",\r\n      value: 38827073\r\n    },\r\n    {\r\n      date: \"2014-02-21\",\r\n      value: 40927078\r\n    },\r\n    {\r\n      date: \"2014-02-22\",\r\n      value: 41027078\r\n    },\r\n    {\r\n      date: \"2014-02-23\",\r\n      value: 42127073\r\n    },\r\n    {\r\n      date: \"2014-02-24\",\r\n      value: 43220783\r\n    },\r\n    {\r\n      date: \"2014-02-25\",\r\n      value: 44327078\r\n    },\r\n    {\r\n      date: \"2014-02-26\",\r\n      value: 40427078\r\n    },\r\n    {\r\n      date: \"2014-02-27\",\r\n      value: 41027078\r\n    },\r\n    {\r\n      date: \"2014-02-28\",\r\n      value: 45627078\r\n    },\r\n    {\r\n      date: \"2014-03-01\",\r\n      value: 44727078\r\n    },\r\n    {\r\n      date: \"2014-03-02\",\r\n      value: 44227078\r\n    },\r\n    {\r\n      date: \"2014-03-03\",\r\n      value: 45227078\r\n    },\r\n    {\r\n      date: \"2014-03-04\",\r\n      value: 46027078\r\n    },\r\n    {\r\n      date: \"2014-03-05\",\r\n      value: 46927078\r\n    },\r\n    {\r\n      date: \"2014-03-06\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-07\",\r\n      value: 46227078\r\n    },\r\n    {\r\n      date: \"2014-03-08\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-09\",\r\n      value: 48027078\r\n    },\r\n    {\r\n      date: \"2014-03-10\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-11\",\r\n      value: 47027078\r\n    },\r\n    {\r\n      date: \"2014-03-12\",\r\n      value: 48017078\r\n    },\r\n    {\r\n      date: \"2014-03-13\",\r\n      value: 48077078\r\n    },\r\n    {\r\n      date: \"2014-03-14\",\r\n      value: 48087078\r\n    },\r\n    {\r\n      date: \"2014-03-15\",\r\n      value: 48017078\r\n    },\r\n    {\r\n      date: \"2014-03-16\",\r\n      value: 48047078\r\n    },\r\n    {\r\n      date: \"2014-03-17\",\r\n      value: 48067078\r\n    },\r\n    {\r\n      date: \"2014-03-18\",\r\n      value: 48077078\r\n    },\r\n    {\r\n      date: \"2014-03-19\",\r\n      value: 48027074\r\n    },\r\n    {\r\n      date: \"2014-03-20\",\r\n      value: 48927079\r\n    },\r\n    {\r\n      date: \"2014-03-21\",\r\n      value: 48727071\r\n    },\r\n    {\r\n      date: \"2014-03-22\",\r\n      value: 48127072\r\n    },\r\n    {\r\n      date: \"2014-03-23\",\r\n      value: 48527072\r\n    },\r\n    {\r\n      date: \"2014-03-24\",\r\n      value: 48627027\r\n    },\r\n    {\r\n      date: \"2014-03-25\",\r\n      value: 48027040\r\n    },\r\n    {\r\n      date: \"2014-03-26\",\r\n      value: 48027043\r\n    },\r\n    {\r\n      date: \"2014-03-27\",\r\n      value: 48057022\r\n    },\r\n    {\r\n      date: \"2014-03-28\",\r\n      value: 49057022\r\n    },\r\n    {\r\n      date: \"2014-03-29\",\r\n      value: 50057022\r\n    },\r\n    {\r\n      date: \"2014-03-30\",\r\n      value: 51057022\r\n    },\r\n    {\r\n      date: \"2014-03-31\",\r\n      value: 52057022\r\n    },\r\n    {\r\n      date: \"2014-04-01\",\r\n      value: 53057022\r\n    },\r\n    {\r\n      date: \"2014-04-02\",\r\n      value: 54057022\r\n    },\r\n    {\r\n      date: \"2014-04-03\",\r\n      value: 52057022\r\n    },\r\n    {\r\n      date: \"2014-04-04\",\r\n      value: 55057022\r\n    },\r\n    {\r\n      date: \"2014-04-05\",\r\n      value: 58270783\r\n    },\r\n    {\r\n      date: \"2014-04-06\",\r\n      value: 56270783\r\n    },\r\n    {\r\n      date: \"2014-04-07\",\r\n      value: 55270783\r\n    },\r\n    {\r\n      date: \"2014-04-08\",\r\n      value: 58270783\r\n    },\r\n    {\r\n      date: \"2014-04-09\",\r\n      value: 59270783\r\n    },\r\n    {\r\n      date: \"2014-04-10\",\r\n      value: 60270783\r\n    },\r\n    {\r\n      date: \"2014-04-11\",\r\n      value: 61270783\r\n    },\r\n    {\r\n      date: \"2014-04-12\",\r\n      value: 62270783\r\n    },\r\n    {\r\n      date: \"2014-04-13\",\r\n      value: 63270783\r\n    },\r\n    {\r\n      date: \"2014-04-14\",\r\n      value: 64270783\r\n    },\r\n    {\r\n      date: \"2014-04-15\",\r\n      value: 65270783\r\n    },\r\n    {\r\n      date: \"2014-04-16\",\r\n      value: 66270783\r\n    },\r\n    {\r\n      date: \"2014-04-17\",\r\n      value: 67270783\r\n    },\r\n    {\r\n      date: \"2014-04-18\",\r\n      value: 68270783\r\n    },\r\n    {\r\n      date: \"2014-04-19\",\r\n      value: 69270783\r\n    },\r\n    {\r\n      date: \"2014-04-20\",\r\n      value: 70270783\r\n    },\r\n    {\r\n      date: \"2014-04-21\",\r\n      value: 71270783\r\n    },\r\n    {\r\n      date: \"2014-04-22\",\r\n      value: 72270783\r\n    },\r\n    {\r\n      date: \"2014-04-23\",\r\n      value: 73270783\r\n    },\r\n    {\r\n      date: \"2014-04-24\",\r\n      value: 74270783\r\n    },\r\n    {\r\n      date: \"2014-04-25\",\r\n      value: 75270783\r\n    },\r\n    {\r\n      date: \"2014-04-26\",\r\n      value: 76660783\r\n    },\r\n    {\r\n      date: \"2014-04-27\",\r\n      value: 77270783\r\n    },\r\n    {\r\n      date: \"2014-04-28\",\r\n      value: 78370783\r\n    },\r\n    {\r\n      date: \"2014-04-29\",\r\n      value: 79470783\r\n    },\r\n    {\r\n      date: \"2014-04-30\",\r\n      value: 80170783\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      date: \"2014-01-01\",\r\n      value: 150000000\r\n    },\r\n    {\r\n      date: \"2014-01-02\",\r\n      value: 160379978\r\n    },\r\n    {\r\n      date: \"2014-01-03\",\r\n      value: 170493749\r\n    },\r\n    {\r\n      date: \"2014-01-04\",\r\n      value: 160785250\r\n    },\r\n    {\r\n      date: \"2014-01-05\",\r\n      value: 167391904\r\n    },\r\n    {\r\n      date: \"2014-01-06\",\r\n      value: 161576838\r\n    },\r\n    {\r\n      date: \"2014-01-07\",\r\n      value: 161413854\r\n    },\r\n    {\r\n      date: \"2014-01-08\",\r\n      value: 152177211\r\n    },\r\n    {\r\n      date: \"2014-01-09\",\r\n      value: 140762210\r\n    },\r\n    {\r\n      date: \"2014-01-10\",\r\n      value: 144381072\r\n    },\r\n    {\r\n      date: \"2014-01-11\",\r\n      value: 154352310\r\n    },\r\n    {\r\n      date: \"2014-01-12\",\r\n      value: 165531790\r\n    },\r\n    {\r\n      date: \"2014-01-13\",\r\n      value: 175748881\r\n    },\r\n    {\r\n      date: \"2014-01-14\",\r\n      value: 187064037\r\n    },\r\n    {\r\n      date: \"2014-01-15\",\r\n      value: 197520685\r\n    },\r\n    {\r\n      date: \"2014-01-16\",\r\n      value: 210176418\r\n    },\r\n    {\r\n      date: \"2014-01-17\",\r\n      value: 196122924\r\n    },\r\n    {\r\n      date: \"2014-01-18\",\r\n      value: 207337480\r\n    },\r\n    {\r\n      date: \"2014-01-19\",\r\n      value: 200258882\r\n    },\r\n    {\r\n      date: \"2014-01-20\",\r\n      value: 186829538\r\n    },\r\n    {\r\n      date: \"2014-01-21\",\r\n      value: 192456897\r\n    },\r\n    {\r\n      date: \"2014-01-22\",\r\n      value: 204299711\r\n    },\r\n    {\r\n      date: \"2014-01-23\",\r\n      value: 192759017\r\n    },\r\n    {\r\n      date: \"2014-01-24\",\r\n      value: 203596183\r\n    },\r\n    {\r\n      date: \"2014-01-25\",\r\n      value: 208107346\r\n    },\r\n    {\r\n      date: \"2014-01-26\",\r\n      value: 196359852\r\n    },\r\n    {\r\n      date: \"2014-01-27\",\r\n      value: 192570783\r\n    },\r\n    {\r\n      date: \"2014-01-28\",\r\n      value: 177967768\r\n    },\r\n    {\r\n      date: \"2014-01-29\",\r\n      value: 190632803\r\n    },\r\n    {\r\n      date: \"2014-01-30\",\r\n      value: 203725316\r\n    },\r\n    {\r\n      date: \"2014-01-31\",\r\n      value: 218226177\r\n    },\r\n    {\r\n      date: \"2014-02-01\",\r\n      value: 210698669\r\n    },\r\n    {\r\n      date: \"2014-02-02\",\r\n      value: 217640656\r\n    },\r\n    {\r\n      date: \"2014-02-03\",\r\n      value: 216142362\r\n    },\r\n    {\r\n      date: \"2014-02-04\",\r\n      value: 201410971\r\n    },\r\n    {\r\n      date: \"2014-02-05\",\r\n      value: 196704289\r\n    },\r\n    {\r\n      date: \"2014-02-06\",\r\n      value: 190436945\r\n    },\r\n    {\r\n      date: \"2014-02-07\",\r\n      value: 178891686\r\n    },\r\n    {\r\n      date: \"2014-02-08\",\r\n      value: 171613962\r\n    },\r\n    {\r\n      date: \"2014-02-09\",\r\n      value: 157579773\r\n    },\r\n    {\r\n      date: \"2014-02-10\",\r\n      value: 158677098\r\n    },\r\n    {\r\n      date: \"2014-02-11\",\r\n      value: 147129977\r\n    },\r\n    {\r\n      date: \"2014-02-12\",\r\n      value: 151561876\r\n    },\r\n    {\r\n      date: \"2014-02-13\",\r\n      value: 151627421\r\n    },\r\n    {\r\n      date: \"2014-02-14\",\r\n      value: 143543872\r\n    },\r\n    {\r\n      date: \"2014-02-15\",\r\n      value: 136581057\r\n    },\r\n    {\r\n      date: \"2014-02-16\",\r\n      value: 135560715\r\n    },\r\n    {\r\n      date: \"2014-02-17\",\r\n      value: 122625263\r\n    },\r\n    {\r\n      date: \"2014-02-18\",\r\n      value: 112091484\r\n    },\r\n    {\r\n      date: \"2014-02-19\",\r\n      value: 98810329\r\n    },\r\n    {\r\n      date: \"2014-02-20\",\r\n      value: 99882912\r\n    },\r\n    {\r\n      date: \"2014-02-21\",\r\n      value: 94943095\r\n    },\r\n    {\r\n      date: \"2014-02-22\",\r\n      value: 104875743\r\n    },\r\n    {\r\n      date: \"2014-02-23\",\r\n      value: 116383678\r\n    },\r\n    {\r\n      date: \"2014-02-24\",\r\n      value: 125028841\r\n    },\r\n    {\r\n      date: \"2014-02-25\",\r\n      value: 123967310\r\n    },\r\n    {\r\n      date: \"2014-02-26\",\r\n      value: 133167029\r\n    },\r\n    {\r\n      date: \"2014-02-27\",\r\n      value: 128577263\r\n    },\r\n    {\r\n      date: \"2014-02-28\",\r\n      value: 115836969\r\n    },\r\n    {\r\n      date: \"2014-03-01\",\r\n      value: 119264529\r\n    },\r\n    {\r\n      date: \"2014-03-02\",\r\n      value: 109363374\r\n    },\r\n    {\r\n      date: \"2014-03-03\",\r\n      value: 113985628\r\n    },\r\n    {\r\n      date: \"2014-03-04\",\r\n      value: 114650999\r\n    },\r\n    {\r\n      date: \"2014-03-05\",\r\n      value: 110866108\r\n    },\r\n    {\r\n      date: \"2014-03-06\",\r\n      value: 96473454\r\n    },\r\n    {\r\n      date: \"2014-03-07\",\r\n      value: 104075886\r\n    },\r\n    {\r\n      date: \"2014-03-08\",\r\n      value: 103568384\r\n    },\r\n    {\r\n      date: \"2014-03-09\",\r\n      value: 101534883\r\n    },\r\n    {\r\n      date: \"2014-03-10\",\r\n      value: 115825447\r\n    },\r\n    {\r\n      date: \"2014-03-11\",\r\n      value: 126133916\r\n    },\r\n    {\r\n      date: \"2014-03-12\",\r\n      value: 116502109\r\n    },\r\n    {\r\n      date: \"2014-03-13\",\r\n      value: 130169411\r\n    },\r\n    {\r\n      date: \"2014-03-14\",\r\n      value: 124296886\r\n    },\r\n    {\r\n      date: \"2014-03-15\",\r\n      value: 126347399\r\n    },\r\n    {\r\n      date: \"2014-03-16\",\r\n      value: 131483669\r\n    },\r\n    {\r\n      date: \"2014-03-17\",\r\n      value: 142811333\r\n    },\r\n    {\r\n      date: \"2014-03-18\",\r\n      value: 129675396\r\n    },\r\n    {\r\n      date: \"2014-03-19\",\r\n      value: 115514483\r\n    },\r\n    {\r\n      date: \"2014-03-20\",\r\n      value: 117630630\r\n    },\r\n    {\r\n      date: \"2014-03-21\",\r\n      value: 122340239\r\n    },\r\n    {\r\n      date: \"2014-03-22\",\r\n      value: 132349091\r\n    },\r\n    {\r\n      date: \"2014-03-23\",\r\n      value: 125613305\r\n    },\r\n    {\r\n      date: \"2014-03-24\",\r\n      value: 135592466\r\n    },\r\n    {\r\n      date: \"2014-03-25\",\r\n      value: 123408762\r\n    },\r\n    {\r\n      date: \"2014-03-26\",\r\n      value: 111991454\r\n    },\r\n    {\r\n      date: \"2014-03-27\",\r\n      value: 116123955\r\n    },\r\n    {\r\n      date: \"2014-03-28\",\r\n      value: 112817214\r\n    },\r\n    {\r\n      date: \"2014-03-29\",\r\n      value: 113029590\r\n    },\r\n    {\r\n      date: \"2014-03-30\",\r\n      value: 108753398\r\n    },\r\n    {\r\n      date: \"2014-03-31\",\r\n      value: 99383763\r\n    },\r\n    {\r\n      date: \"2014-04-01\",\r\n      value: 100151737\r\n    },\r\n    {\r\n      date: \"2014-04-02\",\r\n      value: 94985209\r\n    },\r\n    {\r\n      date: \"2014-04-03\",\r\n      value: 82913669\r\n    },\r\n    {\r\n      date: \"2014-04-04\",\r\n      value: 78748268\r\n    },\r\n    {\r\n      date: \"2014-04-05\",\r\n      value: 63829135\r\n    },\r\n    {\r\n      date: \"2014-04-06\",\r\n      value: 78694727\r\n    },\r\n    {\r\n      date: \"2014-04-07\",\r\n      value: 80868994\r\n    },\r\n    {\r\n      date: \"2014-04-08\",\r\n      value: 93799013\r\n    },\r\n    {\r\n      date: \"2014-04-09\",\r\n      value: 99042416\r\n    },\r\n    {\r\n      date: \"2014-04-10\",\r\n      value: 97298692\r\n    },\r\n    {\r\n      date: \"2014-04-11\",\r\n      value: 83353499\r\n    },\r\n    {\r\n      date: \"2014-04-12\",\r\n      value: 71248129\r\n    },\r\n    {\r\n      date: \"2014-04-13\",\r\n      value: 75253744\r\n    },\r\n    {\r\n      date: \"2014-04-14\",\r\n      value: 68976648\r\n    },\r\n    {\r\n      date: \"2014-04-15\",\r\n      value: 71002284\r\n    },\r\n    {\r\n      date: \"2014-04-16\",\r\n      value: 75052401\r\n    },\r\n    {\r\n      date: \"2014-04-17\",\r\n      value: 83894030\r\n    },\r\n    {\r\n      date: \"2014-04-18\",\r\n      value: 90236528\r\n    },\r\n    {\r\n      date: \"2014-04-19\",\r\n      value: 99739114\r\n    },\r\n    {\r\n      date: \"2014-04-20\",\r\n      value: 96407136\r\n    },\r\n    {\r\n      date: \"2014-04-21\",\r\n      value: 108323177\r\n    },\r\n    {\r\n      date: \"2014-04-22\",\r\n      value: 101578914\r\n    },\r\n    {\r\n      date: \"2014-04-23\",\r\n      value: 115877608\r\n    },\r\n    {\r\n      date: \"2014-04-24\",\r\n      value: 112088857\r\n    },\r\n    {\r\n      date: \"2014-04-25\",\r\n      value: 112071353\r\n    },\r\n    {\r\n      date: \"2014-04-26\",\r\n      value: 101790062\r\n    },\r\n    {\r\n      date: \"2014-04-27\",\r\n      value: 115003761\r\n    },\r\n    {\r\n      date: \"2014-04-28\",\r\n      value: 120457727\r\n    },\r\n    {\r\n      date: \"2014-04-29\",\r\n      value: 118253926\r\n    },\r\n    {\r\n      date: \"2014-04-30\",\r\n      value: 117956992\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      date: \"2014-01-01\",\r\n      value: 50000000\r\n    },\r\n    {\r\n      date: \"2014-01-02\",\r\n      value: 60379978\r\n    },\r\n    {\r\n      date: \"2014-01-03\",\r\n      value: 40493749\r\n    },\r\n    {\r\n      date: \"2014-01-04\",\r\n      value: 60785250\r\n    },\r\n    {\r\n      date: \"2014-01-05\",\r\n      value: 67391904\r\n    },\r\n    {\r\n      date: \"2014-01-06\",\r\n      value: 61576838\r\n    },\r\n    {\r\n      date: \"2014-01-07\",\r\n      value: 61413854\r\n    },\r\n    {\r\n      date: \"2014-01-08\",\r\n      value: 82177211\r\n    },\r\n    {\r\n      date: \"2014-01-09\",\r\n      value: 103762210\r\n    },\r\n    {\r\n      date: \"2014-01-10\",\r\n      value: 84381072\r\n    },\r\n    {\r\n      date: \"2014-01-11\",\r\n      value: 54352310\r\n    },\r\n    {\r\n      date: \"2014-01-12\",\r\n      value: 65531790\r\n    },\r\n    {\r\n      date: \"2014-01-13\",\r\n      value: 75748881\r\n    },\r\n    {\r\n      date: \"2014-01-14\",\r\n      value: 47064037\r\n    },\r\n    {\r\n      date: \"2014-01-15\",\r\n      value: 67520685\r\n    },\r\n    {\r\n      date: \"2014-01-16\",\r\n      value: 60176418\r\n    },\r\n    {\r\n      date: \"2014-01-17\",\r\n      value: 66122924\r\n    },\r\n    {\r\n      date: \"2014-01-18\",\r\n      value: 57337480\r\n    },\r\n    {\r\n      date: \"2014-01-19\",\r\n      value: 100258882\r\n    },\r\n    {\r\n      date: \"2014-01-20\",\r\n      value: 46829538\r\n    },\r\n    {\r\n      date: \"2014-01-21\",\r\n      value: 92456897\r\n    },\r\n    {\r\n      date: \"2014-01-22\",\r\n      value: 94299711\r\n    },\r\n    {\r\n      date: \"2014-01-23\",\r\n      value: 62759017\r\n    },\r\n    {\r\n      date: \"2014-01-24\",\r\n      value: 103596183\r\n    },\r\n    {\r\n      date: \"2014-01-25\",\r\n      value: 108107346\r\n    },\r\n    {\r\n      date: \"2014-01-26\",\r\n      value: 66359852\r\n    },\r\n    {\r\n      date: \"2014-01-27\",\r\n      value: 62570783\r\n    },\r\n    {\r\n      date: \"2014-01-28\",\r\n      value: 77967768\r\n    },\r\n    {\r\n      date: \"2014-01-29\",\r\n      value: 60632803\r\n    },\r\n    {\r\n      date: \"2014-01-30\",\r\n      value: 103725316\r\n    },\r\n    {\r\n      date: \"2014-01-31\",\r\n      value: 98226177\r\n    },\r\n    {\r\n      date: \"2014-02-01\",\r\n      value: 60698669\r\n    },\r\n    {\r\n      date: \"2014-02-02\",\r\n      value: 67640656\r\n    },\r\n    {\r\n      date: \"2014-02-03\",\r\n      value: 66142362\r\n    },\r\n    {\r\n      date: \"2014-02-04\",\r\n      value: 101410971\r\n    },\r\n    {\r\n      date: \"2014-02-05\",\r\n      value: 66704289\r\n    },\r\n    {\r\n      date: \"2014-02-06\",\r\n      value: 60436945\r\n    },\r\n    {\r\n      date: \"2014-02-07\",\r\n      value: 78891686\r\n    },\r\n    {\r\n      date: \"2014-02-08\",\r\n      value: 71613962\r\n    },\r\n    {\r\n      date: \"2014-02-09\",\r\n      value: 107579773\r\n    },\r\n    {\r\n      date: \"2014-02-10\",\r\n      value: 58677098\r\n    },\r\n    {\r\n      date: \"2014-02-11\",\r\n      value: 87129977\r\n    },\r\n    {\r\n      date: \"2014-02-12\",\r\n      value: 51561876\r\n    },\r\n    {\r\n      date: \"2014-02-13\",\r\n      value: 51627421\r\n    },\r\n    {\r\n      date: \"2014-02-14\",\r\n      value: 83543872\r\n    },\r\n    {\r\n      date: \"2014-02-15\",\r\n      value: 66581057\r\n    },\r\n    {\r\n      date: \"2014-02-16\",\r\n      value: 65560715\r\n    },\r\n    {\r\n      date: \"2014-02-17\",\r\n      value: 62625263\r\n    },\r\n    {\r\n      date: \"2014-02-18\",\r\n      value: 92091484\r\n    },\r\n    {\r\n      date: \"2014-02-19\",\r\n      value: 48810329\r\n    },\r\n    {\r\n      date: \"2014-02-20\",\r\n      value: 49882912\r\n    },\r\n    {\r\n      date: \"2014-02-21\",\r\n      value: 44943095\r\n    },\r\n    {\r\n      date: \"2014-02-22\",\r\n      value: 104875743\r\n    },\r\n    {\r\n      date: \"2014-02-23\",\r\n      value: 96383678\r\n    },\r\n    {\r\n      date: \"2014-02-24\",\r\n      value: 105028841\r\n    },\r\n    {\r\n      date: \"2014-02-25\",\r\n      value: 63967310\r\n    },\r\n    {\r\n      date: \"2014-02-26\",\r\n      value: 63167029\r\n    },\r\n    {\r\n      date: \"2014-02-27\",\r\n      value: 68577263\r\n    },\r\n    {\r\n      date: \"2014-02-28\",\r\n      value: 95836969\r\n    },\r\n    {\r\n      date: \"2014-03-01\",\r\n      value: 99264529\r\n    },\r\n    {\r\n      date: \"2014-03-02\",\r\n      value: 109363374\r\n    },\r\n    {\r\n      date: \"2014-03-03\",\r\n      value: 93985628\r\n    },\r\n    {\r\n      date: \"2014-03-04\",\r\n      value: 94650999\r\n    },\r\n    {\r\n      date: \"2014-03-05\",\r\n      value: 90866108\r\n    },\r\n    {\r\n      date: \"2014-03-06\",\r\n      value: 46473454\r\n    },\r\n    {\r\n      date: \"2014-03-07\",\r\n      value: 84075886\r\n    },\r\n    {\r\n      date: \"2014-03-08\",\r\n      value: 103568384\r\n    },\r\n    {\r\n      date: \"2014-03-09\",\r\n      value: 101534883\r\n    },\r\n    {\r\n      date: \"2014-03-10\",\r\n      value: 95825447\r\n    },\r\n    {\r\n      date: \"2014-03-11\",\r\n      value: 66133916\r\n    },\r\n    {\r\n      date: \"2014-03-12\",\r\n      value: 96502109\r\n    },\r\n    {\r\n      date: \"2014-03-13\",\r\n      value: 80169411\r\n    },\r\n    {\r\n      date: \"2014-03-14\",\r\n      value: 84296886\r\n    },\r\n    {\r\n      date: \"2014-03-15\",\r\n      value: 86347399\r\n    },\r\n    {\r\n      date: \"2014-03-16\",\r\n      value: 31483669\r\n    },\r\n    {\r\n      date: \"2014-03-17\",\r\n      value: 82811333\r\n    },\r\n    {\r\n      date: \"2014-03-18\",\r\n      value: 89675396\r\n    },\r\n    {\r\n      date: \"2014-03-19\",\r\n      value: 95514483\r\n    },\r\n    {\r\n      date: \"2014-03-20\",\r\n      value: 97630630\r\n    },\r\n    {\r\n      date: \"2014-03-21\",\r\n      value: 62340239\r\n    },\r\n    {\r\n      date: \"2014-03-22\",\r\n      value: 62349091\r\n    },\r\n    {\r\n      date: \"2014-03-23\",\r\n      value: 65613305\r\n    },\r\n    {\r\n      date: \"2014-03-24\",\r\n      value: 65592466\r\n    },\r\n    {\r\n      date: \"2014-03-25\",\r\n      value: 63408762\r\n    },\r\n    {\r\n      date: \"2014-03-26\",\r\n      value: 91991454\r\n    },\r\n    {\r\n      date: \"2014-03-27\",\r\n      value: 96123955\r\n    },\r\n    {\r\n      date: \"2014-03-28\",\r\n      value: 92817214\r\n    },\r\n    {\r\n      date: \"2014-03-29\",\r\n      value: 93029590\r\n    },\r\n    {\r\n      date: \"2014-03-30\",\r\n      value: 108753398\r\n    },\r\n    {\r\n      date: \"2014-03-31\",\r\n      value: 49383763\r\n    },\r\n    {\r\n      date: \"2014-04-01\",\r\n      value: 100151737\r\n    },\r\n    {\r\n      date: \"2014-04-02\",\r\n      value: 44985209\r\n    },\r\n    {\r\n      date: \"2014-04-03\",\r\n      value: 52913669\r\n    },\r\n    {\r\n      date: \"2014-04-04\",\r\n      value: 48748268\r\n    },\r\n    {\r\n      date: \"2014-04-05\",\r\n      value: 23829135\r\n    },\r\n    {\r\n      date: \"2014-04-06\",\r\n      value: 58694727\r\n    },\r\n    {\r\n      date: \"2014-04-07\",\r\n      value: 50868994\r\n    },\r\n    {\r\n      date: \"2014-04-08\",\r\n      value: 43799013\r\n    },\r\n    {\r\n      date: \"2014-04-09\",\r\n      value: 4042416\r\n    },\r\n    {\r\n      date: \"2014-04-10\",\r\n      value: 47298692\r\n    },\r\n    {\r\n      date: \"2014-04-11\",\r\n      value: 53353499\r\n    },\r\n    {\r\n      date: \"2014-04-12\",\r\n      value: 71248129\r\n    },\r\n    {\r\n      date: \"2014-04-13\",\r\n      value: 75253744\r\n    },\r\n    {\r\n      date: \"2014-04-14\",\r\n      value: 68976648\r\n    },\r\n    {\r\n      date: \"2014-04-15\",\r\n      value: 71002284\r\n    },\r\n    {\r\n      date: \"2014-04-16\",\r\n      value: 75052401\r\n    },\r\n    {\r\n      date: \"2014-04-17\",\r\n      value: 83894030\r\n    },\r\n    {\r\n      date: \"2014-04-18\",\r\n      value: 50236528\r\n    },\r\n    {\r\n      date: \"2014-04-19\",\r\n      value: 59739114\r\n    },\r\n    {\r\n      date: \"2014-04-20\",\r\n      value: 56407136\r\n    },\r\n    {\r\n      date: \"2014-04-21\",\r\n      value: 108323177\r\n    },\r\n    {\r\n      date: \"2014-04-22\",\r\n      value: 101578914\r\n    },\r\n    {\r\n      date: \"2014-04-23\",\r\n      value: 95877608\r\n    },\r\n    {\r\n      date: \"2014-04-24\",\r\n      value: 62088857\r\n    },\r\n    {\r\n      date: \"2014-04-25\",\r\n      value: 92071353\r\n    },\r\n    {\r\n      date: \"2014-04-26\",\r\n      value: 81790062\r\n    },\r\n    {\r\n      date: \"2014-04-27\",\r\n      value: 105003761\r\n    },\r\n    {\r\n      date: \"2014-04-28\",\r\n      value: 100457727\r\n    },\r\n    {\r\n      date: \"2014-04-29\",\r\n      value: 98253926\r\n    },\r\n    {\r\n      date: \"2014-04-30\",\r\n      value: 67956992\r\n    }\r\n  ]\r\n]"
                }
            ],
            "src/app/pages/cmsq/cmsq.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/cmsq/cmsq.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/pages/tables/carriers/carriers-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/carriers/carriers-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CarriersItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/add-cvd/add-cvd-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddCvdItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/country/country-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/country/country-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country[]",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    name: 'Russia',\r\n    flag: 'f/f3/Flag_of_Russia.svg',\r\n    area: 17075200,\r\n    population: 146989754\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'France',\r\n    flag: 'c/c3/Flag_of_France.svg',\r\n    area: 640679,\r\n    population: 64979548\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Germany',\r\n    flag: 'b/ba/Flag_of_Germany.svg',\r\n    area: 357114,\r\n    population: 82114224\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Portugal',\r\n    flag: '5/5c/Flag_of_Portugal.svg',\r\n    area: 92090,\r\n    population: 10329506\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Canada',\r\n    flag: 'c/cf/Flag_of_Canada.svg',\r\n    area: 9976140,\r\n    population: 36624199\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Vietnam',\r\n    flag: '2/21/Flag_of_Vietnam.svg',\r\n    area: 331212,\r\n    population: 95540800\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Brazil',\r\n    flag: '0/05/Flag_of_Brazil.svg',\r\n    area: 8515767,\r\n    population: 209288278\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Mexico',\r\n    flag: 'f/fc/Flag_of_Mexico.svg',\r\n    area: 1964375,\r\n    population: 129163276\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'United States',\r\n    flag: 'a/a4/Flag_of_the_United_States.svg',\r\n    area: 9629091,\r\n    population: 324459463\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'India',\r\n    flag: '4/41/Flag_of_India.svg',\r\n    area: 3287263,\r\n    population: 1324171354\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Indonesia',\r\n    flag: '9/9f/Flag_of_Indonesia.svg',\r\n    area: 1910931,\r\n    population: 263991379\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Tuvalu',\r\n    flag: '3/38/Flag_of_Tuvalu.svg',\r\n    area: 26,\r\n    population: 11097\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'China',\r\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n    area: 9596960,\r\n    population: 1409517397\r\n  }\r\n]"
                }
            ],
            "src/app/pages/tables/currency/currency-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/currency/currency-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrencyItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/fda-product/fda-product-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FdaProductItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/firms/firms-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/firms/firms-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirmsItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ForeignPortsItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/manufacturers/manufacturers-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ManufacturersItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/hts/hts-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/hts/hts-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTSItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/ports/ports-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/ports/ports-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PortsItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/states/states-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/states/states-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatesItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/vessel/vessel-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/vessel/vessel-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VesselItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/tables/products/products-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/tables/products/products-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductsItem[]",
                    "defaultValue": "[\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n]"
                }
            ],
            "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts": [
                {
                    "name": "FRUITS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                    "rawdescription": "Constants used to fill up our data base.",
                    "description": "<p>Constants used to fill up our data base.</p>\n"
                },
                {
                    "name": "NAMES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
                }
            ],
            "src/app/pages/air-export/export-summary/export-summary.component.ts": [
                {
                    "name": "FRUITS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                    "rawdescription": "Constants used to fill up our data base.",
                    "description": "<p>Constants used to fill up our data base.</p>\n"
                },
                {
                    "name": "NAMES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
                }
            ],
            "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts": [
                {
                    "name": "FRUITS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                    "rawdescription": "Constants used to fill up our data base.",
                    "description": "<p>Constants used to fill up our data base.</p>\n"
                },
                {
                    "name": "NAMES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
                }
            ],
            "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts": [
                {
                    "name": "FRUITS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'blueberry',\r\n  'lychee',\r\n  'kiwi',\r\n  'mango',\r\n  'peach',\r\n  'lime',\r\n  'pomegranate',\r\n  'pineapple',\r\n]",
                    "rawdescription": "Constants used to fill up our data base.",
                    "description": "<p>Constants used to fill up our data base.</p>\n"
                },
                {
                    "name": "NAMES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\r\n  'Maia',\r\n  'Asher',\r\n  'Olivia',\r\n  'Atticus',\r\n  'Amelia',\r\n  'Jack',\r\n  'Charlotte',\r\n  'Theodore',\r\n  'Isla',\r\n  'Oliver',\r\n  'Isabella',\r\n  'Jasper',\r\n  'Cora',\r\n  'Levi',\r\n  'Violet',\r\n  'Arthur',\r\n  'Mia',\r\n  'Thomas',\r\n  'Elizabeth',\r\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/layouts/layouts.model.ts": [
                {
                    "name": "LAYOUT_HORIZONTAL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/layouts.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'horizontal'"
                },
                {
                    "name": "LAYOUT_VERTICAL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/layouts.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'vertical'"
                },
                {
                    "name": "LAYOUT_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/layouts.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'fluid'"
                },
                {
                    "name": "SIDEBAR_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/layouts.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dark'"
                },
                {
                    "name": "TOPBAR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/layouts.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dark'"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/widgets/brush-chart/ohlc.ts": [
                {
                    "name": "seriesData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/widgets/brush-chart/ohlc.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    x: new Date(2016, 1, 1),\r\n    y: [51.98, 56.29, 51.59, 53.85]\r\n  },\r\n  {\r\n    x: new Date(2016, 2, 1),\r\n    y: [53.66, 54.99, 51.35, 52.95]\r\n  },\r\n  {\r\n    x: new Date(2016, 3, 1),\r\n    y: [52.96, 53.78, 51.54, 52.48]\r\n  },\r\n  {\r\n    x: new Date(2016, 4, 1),\r\n    y: [52.54, 52.79, 47.88, 49.24]\r\n  },\r\n  {\r\n    x: new Date(2016, 5, 1),\r\n    y: [49.1, 52.86, 47.7, 52.78]\r\n  },\r\n  {\r\n    x: new Date(2016, 6, 1),\r\n    y: [52.83, 53.48, 50.32, 52.29]\r\n  },\r\n  {\r\n    x: new Date(2016, 7, 1),\r\n    y: [52.2, 54.48, 51.64, 52.58]\r\n  },\r\n  {\r\n    x: new Date(2016, 8, 1),\r\n    y: [52.76, 57.35, 52.15, 57.03]\r\n  },\r\n  {\r\n    x: new Date(2016, 9, 1),\r\n    y: [57.04, 58.15, 48.88, 56.19]\r\n  },\r\n  {\r\n    x: new Date(2016, 10, 1),\r\n    y: [56.09, 58.85, 55.48, 58.79]\r\n  },\r\n  {\r\n    x: new Date(2016, 11, 1),\r\n    y: [58.78, 59.65, 58.23, 59.05]\r\n  },\r\n  {\r\n    x: new Date(2017, 0, 1),\r\n    y: [59.37, 61.11, 59.35, 60.34]\r\n  },\r\n  {\r\n    x: new Date(2017, 1, 1),\r\n    y: [60.4, 60.52, 56.71, 56.93]\r\n  },\r\n  {\r\n    x: new Date(2017, 2, 1),\r\n    y: [57.02, 59.71, 56.04, 56.82]\r\n  },\r\n  {\r\n    x: new Date(2017, 3, 1),\r\n    y: [56.97, 59.62, 54.77, 59.3]\r\n  },\r\n  {\r\n    x: new Date(2017, 4, 1),\r\n    y: [59.11, 62.29, 59.1, 59.85]\r\n  },\r\n  {\r\n    x: new Date(2017, 5, 1),\r\n    y: [59.97, 60.11, 55.66, 58.42]\r\n  },\r\n  {\r\n    x: new Date(2017, 6, 1),\r\n    y: [58.34, 60.93, 56.75, 57.42]\r\n  },\r\n  {\r\n    x: new Date(2017, 7, 1),\r\n    y: [57.76, 58.08, 51.18, 54.71]\r\n  },\r\n  {\r\n    x: new Date(2017, 8, 1),\r\n    y: [54.8, 61.42, 53.18, 57.35]\r\n  },\r\n  {\r\n    x: new Date(2017, 9, 1),\r\n    y: [57.56, 63.09, 57.0, 62.99]\r\n  },\r\n  {\r\n    x: new Date(2017, 10, 1),\r\n    y: [62.89, 63.42, 59.72, 61.76]\r\n  },\r\n  {\r\n    x: new Date(2017, 11, 1),\r\n    y: [61.71, 64.15, 61.29, 63.04]\r\n  }\r\n]"
                },
                {
                    "name": "seriesDataLinear",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/widgets/brush-chart/ohlc.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    x: new Date(2016, 1, 1),\r\n    y: 3.85\r\n  },\r\n  {\r\n    x: new Date(2016, 2, 1),\r\n    y: 2.95\r\n  },\r\n  {\r\n    x: new Date(2016, 3, 1),\r\n    y: -12.48\r\n  },\r\n  {\r\n    x: new Date(2016, 4, 1),\r\n    y: 19.24\r\n  },\r\n  {\r\n    x: new Date(2016, 5, 1),\r\n    y: 12.78\r\n  },\r\n  {\r\n    x: new Date(2016, 6, 1),\r\n    y: 22.29\r\n  },\r\n  {\r\n    x: new Date(2016, 7, 1),\r\n    y: -12.58\r\n  },\r\n  {\r\n    x: new Date(2016, 8, 1),\r\n    y: -17.03\r\n  },\r\n  {\r\n    x: new Date(2016, 9, 1),\r\n    y: -19.19\r\n  },\r\n  {\r\n    x: new Date(2016, 10, 1),\r\n    y: -28.79\r\n  },\r\n  {\r\n    x: new Date(2016, 11, 1),\r\n    y: -39.05\r\n  },\r\n  {\r\n    x: new Date(2017, 0, 1),\r\n    y: 20.34\r\n  },\r\n  {\r\n    x: new Date(2017, 1, 1),\r\n    y: 36.93\r\n  },\r\n  {\r\n    x: new Date(2017, 2, 1),\r\n    y: 36.82\r\n  },\r\n  {\r\n    x: new Date(2017, 3, 1),\r\n    y: 29.3\r\n  },\r\n  {\r\n    x: new Date(2017, 4, 1),\r\n    y: 39.85\r\n  },\r\n  {\r\n    x: new Date(2017, 5, 1),\r\n    y: 28.42\r\n  },\r\n  {\r\n    x: new Date(2017, 6, 1),\r\n    y: 37.42\r\n  },\r\n  {\r\n    x: new Date(2017, 7, 1),\r\n    y: 24.71\r\n  },\r\n  {\r\n    x: new Date(2017, 8, 1),\r\n    y: 37.35\r\n  },\r\n  {\r\n    x: new Date(2017, 9, 1),\r\n    y: 32.99\r\n  },\r\n  {\r\n    x: new Date(2017, 10, 1),\r\n    y: 31.76\r\n  },\r\n  {\r\n    x: new Date(2017, 11, 1),\r\n    y: 43.04\r\n  }\r\n]"
                }
            ],
            "src/app/layouts/sidebar/sidebar.menu.ts": [
                {
                    "name": "SIDEBARMENU",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layouts/sidebar/sidebar.menu.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SideBarMenuItem[]",
                    "defaultValue": "[\r\n  {\r\n    displayName: 'DevFestFL',\r\n    iconName: 'recent_actors',\r\n    route: 'devfestfl',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'devfestfl/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'devfestfl/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'devfestfl/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'devfestfl/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'devfestfl/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'devfestfl/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/what-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/my-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'devfestfl/sessions/become-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'devfestfl/feedback'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    displayName: 'Disney',\r\n    iconName: 'videocam',\r\n    route: 'disney',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'disney/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'disney/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'disney/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'disney/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'disney/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'disney/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessionswhat-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessionsmy-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'disney/sessionsbecome-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'disney/feedback'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    displayName: 'Orlando',\r\n    iconName: 'videocam',\r\n    route: 'orlando',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'orlando/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'orlando/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'orlando/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'orlando/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'orlando/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'orlando/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/what-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/my-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'orlando/sessions/become-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'orlando/feedback'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    displayName: 'Maleficent',\r\n    iconName: 'videocam',\r\n    route: 'maleficent',\r\n    children: [\r\n      {\r\n        displayName: 'Speakers',\r\n        iconName: 'group',\r\n        route: 'maleficent/speakers',\r\n        children: [\r\n          {\r\n            displayName: 'Michael Prentice',\r\n            iconName: 'person',\r\n            route: 'maleficent/speakers/michael-prentice',\r\n            children: [\r\n              {\r\n                displayName: 'Create Enterprise UIs',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/michael-prentice/material-design'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Stephen Fluin',\r\n            iconName: 'person',\r\n            route: 'maleficent/speakers/stephen-fluin',\r\n            children: [\r\n              {\r\n                displayName: 'What\\'s up with the Web?',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/stephen-fluin/what-up-web'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            displayName: 'Mike Brocchi',\r\n            iconName: 'person',\r\n            route: 'maleficent/speakers/mike-brocchi',\r\n            children: [\r\n              {\r\n                displayName: 'My ally, the CLI',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/mike-brocchi/my-ally-cli'\r\n              },\r\n              {\r\n                displayName: 'Become an Angular Tailor',\r\n                iconName: 'star_rate',\r\n                route: 'maleficent/speakers/mike-brocchi/become-angular-tailor'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Sessions',\r\n        iconName: 'speaker_notes',\r\n        route: 'maleficent/sessions',\r\n        children: [\r\n          {\r\n            displayName: 'Create Enterprise UIs',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/material-design'\r\n          },\r\n          {\r\n            displayName: 'What\\'s up with the Web?',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/what-up-web'\r\n          },\r\n          {\r\n            displayName: 'My ally, the CLI',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/my-ally-cli'\r\n          },\r\n          {\r\n            displayName: 'Become an Angular Tailor',\r\n            iconName: 'star_rate',\r\n            route: 'maleficent/sessions/become-angular-tailor'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        displayName: 'Feedback',\r\n        iconName: 'feedback',\r\n        route: 'maleficent/feedback'\r\n      }\r\n    ]\r\n  },\r\n]"
                }
            ],
            "src/app/animations.ts": [
                {
                    "name": "slideInAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routeAnimation', [\r\n    transition('heroes <=> hero', [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ]),\r\n      query(':enter', [\r\n        style({ left: '-100%'})\r\n      ]),\r\n      query(':leave', animateChild()),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({ left: '100%'}))\r\n        ]),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({ left: '0%'}))\r\n        ])\r\n      ]),\r\n      query(':enter', animateChild()),\r\n    ])\r\n  ])"
                }
            ],
            "src/app/home/home.component.ts": [
                {
                    "name": "squareOdd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/home/home.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "of(1, 2, 3, 4, 5, 6).pipe(\r\n  filter(n => n % 2 !== 0), map((n) => n * n)\r\n)"
                }
            ],
            "src/app/theme.ts": [
                {
                    "name": "theme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\r\n    light: 'light-theme',\r\n    dimmed: 'dimmed-theme',\r\n    dark: 'dark-theme',\r\n  }"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/pages/tables/carriers/carriers-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/carriers/carriers-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/add-cvd/add-cvd-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/country/country-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/country/country-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/currency/currency-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/currency/currency-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/fda-product/fda-product-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/firms/firms-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/firms/firms-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/manufacturers/manufacturers-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/hts/hts-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/hts/hts-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/ports/ports-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/ports/ports-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/states/states-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/states/states-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/vessel/vessel-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/vessel/vessel-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/tables/products/products-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/pages/tables/products/products-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts": [
                {
                    "name": "createNewUser",
                    "file": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Builds and returns a new User.</p>\n",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UserData",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/air-export/export-summary/export-summary.component.ts": [
                {
                    "name": "createNewUser",
                    "file": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Builds and returns a new User.</p>\n",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UserData",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts": [
                {
                    "name": "createNewUser",
                    "file": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Builds and returns a new User.</p>\n",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UserData",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts": [
                {
                    "name": "createNewUser",
                    "file": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Builds and returns a new User.</p>\n",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UserData",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts": [
                {
                    "name": "search",
                    "file": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pipe",
                            "type": "PipeTransform",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Country[]",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pipe",
                            "type": "PipeTransform",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/widgets/todo02/todo02.component.ts": [
                {
                    "name": "todoItem",
                    "file": "src/app/widgets/todo02/todo02.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "todoItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "todoItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/widgets/apex-chart/apex-chart.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/apex-chart/apex-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/bar-chart/bar-chart.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/bar-chart/bar-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/brush-chart/brush-chart.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/brush-chart/brush-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/bubble-chart/bubble-chart.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/bubble-chart/bubble-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/donut-chart/donut-chart.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/donut-chart/donut-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/donut-monochrome/donut-monochrome.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/donut-monochrome/donut-monochrome.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/multi-y/multi-y.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/multi-y/multi-y.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/widgets/polar-chart/polar-chart.component.ts": [
                {
                    "name": "ChartOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/widgets/polar-chart/polar-chart.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "account",
                        "loadChildren": "./account/account.module#AccountModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/account/account-routing.module.ts",
                                        "module": "AccountRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "redirectTo": "register"
                                            },
                                            {
                                                "path": "auth",
                                                "loadChildren": "./auth/auth.module#AuthModule"
                                            },
                                            {
                                                "path": "register",
                                                "component": "RegisterComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AccountModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "component": "Login02Component"
                    },
                    {
                        "path": "extra-pages",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "loadChildren": "./extrapages/extrapages.module#ExtrapagesModule"
                    },
                    {
                        "path": "dashboard",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "home",
                        "loadChildren": "./home/home.module#HomeModule"
                    },
                    {
                        "path": "pages",
                        "loadChildren": "./pages/pages.module#PagesModule"
                    },
                    {
                        "path": "dashboard02",
                        "component": "Dashboard02Component"
                    },
                    {
                        "path": "**",
                        "component": "Page404Component"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/extrapages/extrapages-routing.module.ts",
                "module": "ExtrapagesRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "ExtrapagesComponent"
                    },
                    {
                        "path": "404",
                        "component": "Page404Component"
                    },
                    {
                        "path": "coming-soon",
                        "component": "ComingsoonComponent"
                    },
                    {
                        "path": "isf",
                        "component": "IsfFormComponent"
                    },
                    {
                        "path": "ae",
                        "component": "AeFormComponent"
                    },
                    {
                        "path": "chart01",
                        "component": "Chart01Component"
                    },
                    {
                        "path": "bar",
                        "component": "BarChartComponent"
                    },
                    {
                        "path": "bubble",
                        "component": "BubbleChartComponent"
                    },
                    {
                        "path": "radar",
                        "component": "RadarChartComponent"
                    },
                    {
                        "path": "apex",
                        "component": "ApexChartComponent"
                    },
                    {
                        "path": "brush",
                        "component": "BrushChartComponent"
                    },
                    {
                        "path": "donut",
                        "component": "DonutChartComponent"
                    },
                    {
                        "path": "donut-mono",
                        "component": "DonutMonochromeComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/home/home-routing.module.ts",
                "module": "HomeRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "Login02Component"
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "nav",
                        "component": "NavigationComponent",
                        "children": [
                            {
                                "path": "pages",
                                "loadChildren": "../pages/pages.module#PagesModule"
                            }
                        ]
                    },
                    {
                        "path": "dashboard",
                        "component": "DashboardComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/pages/pages-routing.module.ts",
                "module": "PagesRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "PagesComponent"
                    },
                    {
                        "path": "isf",
                        "loadChildren": "./isf/isf.module#IsfModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/isf/isf-routing.module.ts",
                                        "module": "IsfRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "IsfComponent"
                                            },
                                            {
                                                "path": ":id",
                                                "component": "IsfDetailComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "IsfModule"
                            }
                        ]
                    },
                    {
                        "path": "airAms",
                        "loadChildren": "./air-ams/air-ams.module#AirAmsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/air-ams/air-ams-routing.module.ts",
                                        "module": "AirAmsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AirAmsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AirAmsModule"
                            }
                        ]
                    },
                    {
                        "path": "seaAms",
                        "loadChildren": "./sea-ams/sea-ams.module#SeaAmsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/sea-ams/sea-ams-routing.module.ts",
                                        "module": "SeaAmsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "SeaAmsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SeaAmsModule"
                            }
                        ]
                    },
                    {
                        "path": "truckAms",
                        "loadChildren": "./truck-ams/truck-ams.module#TruckAmsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/truck-ams/truck-ams-routing.module.ts",
                                        "module": "TruckAmsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "TruckAmsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TruckAmsModule"
                            }
                        ]
                    },
                    {
                        "path": "airExport",
                        "loadChildren": "./air-export/air-export.module#AirExportModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/air-export/air-export-routing.module.ts",
                                        "module": "AirExportRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AirExportComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AirExportModule"
                            }
                        ]
                    },
                    {
                        "path": "oceanExport",
                        "loadChildren": "./ocean-export/ocean-export.module#OceanExportModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/ocean-export/ocean-export-routing.module.ts",
                                        "module": "OceanExportRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "OceanExportComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "OceanExportModule"
                            }
                        ]
                    },
                    {
                        "path": "airImport",
                        "loadChildren": "./air-import/air-import.module#AirImportModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/air-import/air-import-routing.module.ts",
                                        "module": "AirImportRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AirImportComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AirImportModule"
                            }
                        ]
                    },
                    {
                        "path": "oceanImport",
                        "loadChildren": "./ocean-import/ocean-import.module#OceanImportModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/ocean-import/ocean-import-routing.module.ts",
                                        "module": "OceanImportRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "OceanImportComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "OceanImportModule"
                            }
                        ]
                    },
                    {
                        "path": "customsBrokerage",
                        "loadChildren": "./customs-brokerage/customs-brokerage.module#CustomsBrokerageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/customs-brokerage/customs-brokerage-routing.module.ts",
                                        "module": "CustomsBrokerageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CustomsBrokerageComponent"
                                            },
                                            {
                                                "path": ":id",
                                                "component": "EntryDetailComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CustomsBrokerageModule"
                            }
                        ]
                    },
                    {
                        "path": "trucking",
                        "loadChildren": "./trucking/trucking.module#TruckingModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/trucking/trucking-routing.module.ts",
                                        "module": "TruckingRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "TruckingComponent",
                                                "children": [
                                                    {
                                                        "path": "air",
                                                        "component": "AirComponent"
                                                    },
                                                    {
                                                        "path": "lcl",
                                                        "component": "LclComponent"
                                                    },
                                                    {
                                                        "path": "fcl",
                                                        "component": "FclComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TruckingModule"
                            }
                        ]
                    },
                    {
                        "path": "cmsq",
                        "loadChildren": "./cmsq/cmsq.module#CmsqModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/cmsq/cmsq-routing.module.ts",
                                        "module": "CmsqRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CmsqComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CmsqModule"
                            }
                        ]
                    },
                    {
                        "path": "trackAndTrace",
                        "loadChildren": "./track-and-trace/track-and-trace.module#TrackAndTraceModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/track-and-trace/track-and-trace-routing.module.ts",
                                        "module": "TrackAndTraceRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "TrackAndTraceComponent",
                                                "children": [
                                                    {
                                                        "path": "airImport",
                                                        "component": "AirImportComponent"
                                                    },
                                                    {
                                                        "path": "airExport",
                                                        "component": "AirExportComponent"
                                                    },
                                                    {
                                                        "path": "oceanImport",
                                                        "component": "OceanImportComponent"
                                                    },
                                                    {
                                                        "path": "oceanExport",
                                                        "component": "OceanExportComponent"
                                                    },
                                                    {
                                                        "path": "entries",
                                                        "component": "EntriesComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TrackAndTraceModule"
                            }
                        ]
                    },
                    {
                        "path": "parties",
                        "loadChildren": "./parties/parties.module#PartiesModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/parties/parties-routing.module.ts",
                                        "module": "PartiesRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "PartiesComponent"
                                            },
                                            {
                                                "path": "carriers",
                                                "component": "CarriersComponent"
                                            },
                                            {
                                                "path": "clients",
                                                "component": "ClientsComponent"
                                            },
                                            {
                                                "path": "vendors",
                                                "component": "VendorsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "PartiesModule"
                            }
                        ]
                    },
                    {
                        "path": "tables",
                        "loadChildren": "./tables/tables.module#TablesModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/tables/tables-routing.module.ts",
                                        "module": "TablesRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "TablesComponent",
                                                "children": [
                                                    {
                                                        "path": "carriers",
                                                        "component": "CarriersComponent"
                                                    },
                                                    {
                                                        "path": "ports",
                                                        "component": "PortsComponent"
                                                    },
                                                    {
                                                        "path": "foreignPorts",
                                                        "component": "ForeignPortsComponent"
                                                    },
                                                    {
                                                        "path": "country",
                                                        "component": "CountryComponent"
                                                    },
                                                    {
                                                        "path": "states",
                                                        "component": "StatesComponent"
                                                    },
                                                    {
                                                        "path": "firms",
                                                        "component": "FirmsComponent"
                                                    },
                                                    {
                                                        "path": "hts",
                                                        "component": "HTSComponent"
                                                    },
                                                    {
                                                        "path": "manufacturers",
                                                        "component": "ManufacturersComponent"
                                                    },
                                                    {
                                                        "path": "add-cvd",
                                                        "component": "AddCvdComponent"
                                                    },
                                                    {
                                                        "path": "fdaProduct",
                                                        "component": "FdaProductComponent"
                                                    },
                                                    {
                                                        "path": "currency",
                                                        "component": "CurrencyComponent"
                                                    },
                                                    {
                                                        "path": "vessel",
                                                        "component": "VesselComponent"
                                                    },
                                                    {
                                                        "path": "products",
                                                        "component": "ProductsComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TablesModule"
                            }
                        ]
                    },
                    {
                        "path": "reports",
                        "loadChildren": "./reports/reports.module#ReportsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/reports/reports-routing.module.ts",
                                        "module": "ReportsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ReportsComponent",
                                                "children": [
                                                    {
                                                        "path": "entry",
                                                        "component": "EntryComponent"
                                                    },
                                                    {
                                                        "path": "liquidation",
                                                        "component": "LiquidationComponent"
                                                    },
                                                    {
                                                        "path": "exam",
                                                        "component": "ExamComponent"
                                                    },
                                                    {
                                                        "path": "pnlbyImporter",
                                                        "component": "ProfitByImporterComponent"
                                                    },
                                                    {
                                                        "path": "pnlbySalesman",
                                                        "component": "ProfitBySalesmanComponent"
                                                    },
                                                    {
                                                        "path": "pnlbyCustomer",
                                                        "component": "ProfitByCustomerComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ReportsModule"
                            }
                        ]
                    },
                    {
                        "path": "sample",
                        "component": "Chart01Component"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 12,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/account/auth/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/account/auth/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/account/auth/login02/login02.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Login02Component",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/account/auth/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/account/auth/recoverpwd/recoverpwd.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecoverpwdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/account/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideInAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/dashboard02/dashboard02.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Dashboard02Component",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/extrapages/ae-form/ae-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AeFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/extrapages/chart01/chart01.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Chart01Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/extrapages/comingsoon/comingsoon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComingsoonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/extrapages/extrapages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExtrapagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/extrapages/isf-form/isf-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IsfFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/extrapages/page404/page404.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page404Component",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/auth.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "AuthInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/home/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "squareOdd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/horizontal/horizontal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HorizontalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/horizontaltopbar/horizontaltopbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HorizontaltopbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 25,
                "coverageCount": "2/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layouts.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LAYOUT_HORIZONTAL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layouts.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LAYOUT_VERTICAL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layouts.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LAYOUT_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layouts.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SIDEBAR_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/layouts.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOPBAR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/rightsidebar/rightsidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RightsidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/sidebar/sidebar-nav.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SidebarNavService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/sidebar/sidebar.menu.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SideBarMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/sidebar/sidebar.menu.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SIDEBARMENU",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/topbar/topbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/vertical/vertical.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VerticalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/cust.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/models/importer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Importer",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/models/schedK.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SchedK",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/users.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-dashboard/air-ams-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirAmsDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-grid/air-ams-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirAmsGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirAmsSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createNewUser",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FRUITS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams-summary/air-ams-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAMES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/air-ams.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirAmsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-ams/ams-detail/ams-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmsDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-export/air-export-dashboard/air-export-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirExportDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-export/air-export-detail/air-export-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirExportDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-export/air-export.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirExportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExportSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createNewUser",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FRUITS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/air-export/export-summary/export-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAMES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-import/ai-grid/ai-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AiGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-import/air-import-dashboard/air-import-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirImportDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-import/air-import-detail/air-import-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirImportDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-import/air-import.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirImportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/air-import/air-import.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PORT",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cmsq/cmsq.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmsqComponent",
                "coveragePercent": 42,
                "coverageCount": "3/7",
                "status": "medium"
            },
            {
                "filePath": "src/app/pages/cmsq/cmsq.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cmsq/cmsq.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cmsq/grid01/grid01.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Grid01Component",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cmsq/grid01/grid01.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tile",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/customs-brokerage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomsBrokerageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntriesSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/entries-summary/entries-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COUNTRIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/entry-detail/entry-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/customs-brokerage/entry-grid/entry-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/interfaces/airimport.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "airImport",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/interfaces/entrySummary.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "entrySummary",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/interfaces/isf.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISF",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/domestic/domestic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DomesticComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/foreign/foreign.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForeignComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/hts/hts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HtsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/isf-detail/isf-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IsfDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/isf-grid/isf-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IsfGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/isf.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IsfComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/isf.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IsfService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/parties/parties.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PartiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/shipment/shipment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShipmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/shipment/shipment.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Action",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/shipment/shipment.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "isfType",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/shipment/shipment.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "mot",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/isf/shipment/shipment.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ShipType",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-export/ocean-export-dashboard/ocean-export-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanExportDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-export/ocean-export-detail/ocean-export-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanExportDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-export/ocean-export-summary/ocean-export-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanExportSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-export/ocean-export.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanExportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-export/oe-grid/oe-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OeGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-import/ocean-import-dashboard/ocean-import-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanImportDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-import/ocean-import-detail/ocean-import-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanImportDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-import/ocean-import-summary/ocean-import-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanImportSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-import/ocean-import.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanImportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/ocean-import/oi-grid/oi-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OiGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/pages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/parties/carriers/carriers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CarriersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/parties/clients/clients.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClientsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/parties/parties.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PartiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/parties/vendors/vendors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VendorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/entry/entry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/exam/exam.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExamComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/liquidation/liquidation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LiquidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/profit-by-customer/profit-by-customer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfitByCustomerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/profit-by-importer/profit-by-importer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfitByImporterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/profit-by-salesman/profit-by-salesman.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfitBySalesmanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reports/reports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/sea-ams/ams-detail/ams-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmsDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmsSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createNewUser",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FRUITS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/sea-ams/ams-summary/ams-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAMES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/sea-ams/sea-ams-dashboard/sea-ams-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SeaAmsDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/sea-ams/sea-ams.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SeaAmsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddCvdDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddCvdItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/add-cvd/add-cvd-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/add-cvd/add-cvd.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddCvdComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/carriers/carriers-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CarriersDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/carriers/carriers-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CarriersItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/carriers/carriers-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/carriers/carriers-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/carriers/carriers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CarriersComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/country/country-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CountryDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/country/country-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/country/country-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/country/country-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/country/country.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CountryComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/currency/currency-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CurrencyDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/currency/currency-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CurrencyItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/currency/currency-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/currency/currency-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/currency/currency.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CurrencyComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FdaProductDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FdaProductItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/fda-product/fda-product-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/fda-product/fda-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FdaProductComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/firms/firms-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FirmsDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/firms/firms-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FirmsItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/firms/firms-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/firms/firms-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/firms/firms.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FirmsComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ForeignPortsDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ForeignPortsItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/foreign-ports/foreign-ports-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/foreign-ports/foreign-ports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForeignPortsComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/hts/hts-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HTSDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/hts/hts-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HTSItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/hts/hts-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/hts/hts-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/hts/hts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HTSComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/hts/hts.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HTS",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ManufacturersDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ManufacturersItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/manufacturers/manufacturers-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/manufacturers/manufacturers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManufacturersComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/ports/ports-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PortsDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/ports/ports-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PortsItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/ports/ports-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/ports/ports-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/ports/ports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PortsComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/products/products-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProductsDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/products/products-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductsItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/products/products-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/products/products-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/products/products.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/states/states-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StatesDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/states/states-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatesItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/states/states-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/states/states-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/states/states.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatesComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/tables.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TablesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/vessel/vessel-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VesselDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/pages/tables/vessel/vessel-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VesselItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/vessel/vessel-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/tables/vessel/vessel-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tables/vessel/vessel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VesselComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/track-and-trace/air-export/air-export.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirExportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/track-and-trace/air-import/air-import.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirImportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/track-and-trace/entries/entries.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntriesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/track-and-trace/ocean-export/ocean-export.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanExportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/track-and-trace/ocean-import/ocean-import.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OceanImportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/track-and-trace/track-and-trace.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrackAndTraceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/truck-ams/ams-detail/ams-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmsDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmsSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createNewUser",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FRUITS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/pages/truck-ams/ams-summary/ams-summary.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAMES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/truck-ams/truck-ams-dashboard/truck-ams-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TruckAmsDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/truck-ams/truck-ams.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TruckAmsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/trucking/air/air.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AirComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/trucking/air/air.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tile",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/trucking/fcl/fcl.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FclComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/trucking/lcl/lcl.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LclComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/trucking/trucking.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TruckingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/search.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SearchPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/importers.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ImportersService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/services/importers.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MenuService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "theme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/apex-chart/apex-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApexChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/bar-chart/bar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/bar-chart/data-series.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dataSeries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/brush-chart/brush-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BrushChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/brush-chart/ohlc.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "seriesData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/brush-chart/ohlc.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "seriesDataLinear",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/bubble-chart/bubble-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/charts/charts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/donut-chart/donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/donut-monochrome/donut-monochrome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutMonochromeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/monthly-summary/monthly-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MonthlySummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/multi-y/multi-y.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiYComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/polar-chart/polar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PolarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/radar-chart/radar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/todo-list/todo-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/todo-list/todo/todo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/todo02/todo02.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Todo02Component",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/todo02/todo02.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "todoItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}